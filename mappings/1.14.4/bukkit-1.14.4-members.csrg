# (c) 2019 SpigotMC Pty. Ltd.
Activity a CORE
Activity b IDLE
Activity c WORK
Activity d PLAY
Activity e REST
Activity f MEET
Activity g PANIC
Activity h RAID
Activity i PRE_RAID
Activity j HIDE
Advancement f ()Ljava/util/Map; getCriteria
Advancement h ()LMinecraftKey; getName
AdvancementDataPlayer a (LAdvancement;Ljava/lang/String;)Z grantCriteria
AdvancementDataPlayer b (LAdvancement;)LAdvancementProgress; getProgress
AdvancementDataPlayer b (LAdvancement;Ljava/lang/String;)Z revokeCritera
AdvancementDataPlayer f data
AdvancementDataPlayer j player
AdvancementDataWorld b DESERIALIZER
AdvancementDataWorld c REGISTRY
AdvancementFrameType a TASK
AdvancementFrameType b CHALLENGE
AdvancementFrameType c GOAL
AdvancementProgress a ()Z isDone
AdvancementProgress c (Ljava/lang/String;)LCriterionProgress; getCriterionProgress
AdvancementProgress e ()Ljava/lang/Iterable; getRemainingCriteria
AdvancementProgress f ()Ljava/lang/Iterable; getAwardedCriteria
AdvancementRequirements a AND
AdvancementRequirements b OR
Advancements b advancements
ArgumentAnchor$Anchor a FEET
ArgumentAnchor$Anchor b EYES
ArgumentBlock a ()Ljava/util/Map; getStateMap
ArgumentBlock b ()LIBlockData; getBlockData
ArgumentEntity b ()LArgumentEntity; multipleEntities
ArgumentParserSelector T checkPermissions
ArgumentParserSelector b ()V parseSelector
ArgumentParserSelector t ()LEntitySelector; parse
AttributeInstance a ()LIAttribute; getAttribute
AttributeInstance a (D)V setValue
AttributeInstance b ()D getBaseValue
AttributeInstance b (LAttributeModifier;)V addModifier
AttributeInstance c ()Ljava/util/Collection; getModifiers
AttributeInstance c (LAttributeModifier;)V removeModifier
AttributeInstance e ()D getValue
AttributeMapServer b ()Ljava/util/Set; getAttributes
AttributeModifier a ()Ljava/util/UUID; getUniqueId
AttributeModifier b ()Ljava/lang/String; getName
AttributeModifier c ()LAttributeModifier$Operation; getOperation
AttributeModifier d ()D getAmount
AttributeModifier$Operation a ADDITION
AttributeModifier$Operation b MULTIPLY_BASE
AttributeModifier$Operation c MULTIPLY_TOTAL
AttributeRanged b maximum
AxisAlignedBB a minX
AxisAlignedBB b minY
AxisAlignedBB c (DDD)LAxisAlignedBB; grow
AxisAlignedBB c minZ
AxisAlignedBB d maxX
AxisAlignedBB e maxY
AxisAlignedBB f maxZ
AxisAlignedBB h (D)LAxisAlignedBB; shrink
BaseBlockPosition a (DDDZ)D distanceSquared
BaseBlockPosition e ZERO
BaseBlockPosition o ()I getX
BaseBlockPosition p ()I getY
BaseBlockPosition q ()I getZ
Behavior$Status a STOPPED
Behavior$Status b RUNNING
BehaviorController a (LMemoryModuleType;)Z hasMemory
BehaviorController a (LMemoryModuleType;Ljava/lang/Object;)V setMemory
BehaviorController a (LMemoryModuleType;Ljava/util/Optional;)V setMemory
BehaviorController a (LSchedule;)V setSchedule
BehaviorController a memories
BehaviorController b ()LSchedule; getSchedule
BehaviorController b (LMemoryModuleType;)V removeMemory
BehaviorController b sensors
BehaviorController c (LMemoryModuleType;)Ljava/util/Optional; getMemory
BehaviorController d schedule
BehaviorGate$Execution a RUN_ONE
BehaviorGate$Execution b TRY_ALL
BehaviorGate$Order a ORDERED
BehaviorGate$Order b SHUFFLED
BiomeBase a (LEnumCreatureType;)Ljava/util/List; getMobs
BiomeBase d (LBlockPosition;)F getAdjustedTemperature
BiomeBase h ()F getHumidity
BiomeBase l ()F getTemperature
BiomeBase$EnumTemperature a OCEAN
BiomeBase$EnumTemperature b COLD
BiomeBase$EnumTemperature c MEDIUM
BiomeBase$EnumTemperature d WARM
BiomeBase$Geography a NONE
BiomeBase$Geography b TAIGA
BiomeBase$Geography c EXTREME_HILLS
BiomeBase$Geography d JUNGLE
BiomeBase$Geography e MESA
BiomeBase$Geography f PLAINS
BiomeBase$Geography g SAVANNA
BiomeBase$Geography h ICY
BiomeBase$Geography i THEEND
BiomeBase$Geography j BEACH
BiomeBase$Geography k FOREST
BiomeBase$Geography l OCEAN
BiomeBase$Geography m DESERT
BiomeBase$Geography n RIVER
BiomeBase$Geography o SWAMP
BiomeBase$Geography p MUSHROOM
BiomeBase$Geography q NETHER
BiomeBase$Precipitation a NONE
BiomeBase$Precipitation b RAIN
BiomeBase$Precipitation c SNOW
Biomes A STONE_SHORE
Biomes B SNOWY_BEACH
Biomes C BIRCH_FOREST
Biomes D BIRCH_FOREST_HILLS
Biomes E DARK_FOREST
Biomes F SNOWY_TAIGA
Biomes G SNOWY_TAIGA_HILLS
Biomes H GIANT_TREE_TAIGA
Biomes I GIANT_TREE_TAIGA_HILLS
Biomes J WOODED_MOUNTAINS
Biomes K SAVANNA
Biomes L SAVANNA_PLATEAU
Biomes M BADLANDS
Biomes N WOODED_BADLANDS_PLATEAU
Biomes O BADLANDS_PLATEAU
Biomes P SMALL_END_ISLANDS
Biomes Q END_MIDLANDS
Biomes R END_HIGHLANDS
Biomes S END_BARRENS
Biomes T WARM_OCEAN
Biomes U LUKEWARM_OCEAN
Biomes V COLD_OCEAN
Biomes W DEEP_WARM_OCEAN
Biomes X DEEP_LUKEWARM_OCEAN
Biomes Y DEEP_COLD_OCEAN
Biomes Z DEEP_FROZEN_OCEAN
Biomes a OCEAN
Biomes aa THE_VOID
Biomes ab SUNFLOWER_PLAINS
Biomes ac DESERT_LAKES
Biomes ad GRAVELLY_MOUNTAINS
Biomes ae FLOWER_FOREST
Biomes af TAIGA_MOUNTAINS
Biomes ag SWAMP_HILLS
Biomes ah ICE_SPIKES
Biomes ai MODIFIED_JUNGLE
Biomes aj MODIFIED_JUNGLE_EDGE
Biomes ak TALL_BIRCH_FOREST
Biomes al TALL_BIRCH_HILLS
Biomes am DARK_FOREST_HILLS
Biomes an SNOWY_TAIGA_MOUNTAINS
Biomes ao GIANT_SPRUCE_TAIGA
Biomes ap GIANT_SPRUCE_TAIGA_HILLS
Biomes aq MODIFIED_GRAVELLY_MOUNTAINS
Biomes ar SHATTERED_SAVANNA
Biomes as SHATTERED_SAVANNA_PLATEAU
Biomes at ERODED_BADLANDS
Biomes au MODIFIED_WOODED_BADLANDS_PLATEAU
Biomes av MODIFIED_BADLANDS_PLATEAU
Biomes aw BAMBOO_JUNGLE
Biomes ax BAMBOO_JUNGLE_HILLS
Biomes c PLAINS
Biomes d DESERT
Biomes e MOUNTAINS
Biomes f FOREST
Biomes g TAIGA
Biomes h SWAMP
Biomes i RIVER
Biomes j NETHER
Biomes k THE_END
Biomes l FROZEN_OCEAN
Biomes m FROZEN_RIVER
Biomes n SNOWY_TUNDRA
Biomes o SNOWY_MOUNTAINS
Biomes p MUSHROOM_FIELDS
Biomes q MUSHROOM_FIELD_SHORE
Biomes r BEACH
Biomes s DESERT_HILLS
Biomes t WOODED_HILLS
Biomes u TAIGA_HILLS
Biomes v MOUNTAIN_EDGE
Biomes w JUNGLE
Biomes x JUNGLE_HILLS
Biomes y JUNGLE_EDGE
Biomes z DEEP_OCEAN
Block a (I)LIBlockData; getByCombinedId
Block a (LBlockActionContext;)LIBlockData; getPlacedState
Block a (LGeneratorAccess;LBlockPosition;LIBlockData;)V postBreak
Block a (LIBlockData;LEntityHuman;LIBlockAccess;LBlockPosition;)F getDamage
Block a (LIBlockData;LEnumDirection;LIBlockData;LGeneratorAccess;LBlockPosition;LBlockPosition;)LIBlockData; updateState
Block a (LIBlockData;LIWorldReader;LBlockPosition;)Z canPlace
Block a (LIBlockData;LWorld;LBlockPosition;LBlock;LBlockPosition;Z)V doPhysics
Block a (LIBlockData;LWorld;LBlockPosition;LEntityHuman;)V attack
Block a (LIBlockData;LWorld;LBlockPosition;LEntityHuman;LEnumHand;LMovingObjectPositionBlock;)Z interact
Block a (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V remove
Block a (LIBlockData;LWorld;LBlockPosition;LItemStack;)V dropNaturally
Block a (LIBlockData;LWorld;LBlockPosition;LTileEntity;LEntity;LItemStack;)V dropItems
Block a (LIBlockData;LWorldServer;LBlockPosition;LTileEntity;LEntity;LItemStack;)Ljava/util/List; getDrops
Block a (LItem;)LBlock; asBlock
Block a (LWorld;LBlockPosition;I)V dropExperience
Block a (LWorld;LBlockPosition;LEntity;)V stepOn
Block a (LWorld;LBlockPosition;LEntity;F)V fallOn
Block a (LWorld;LBlockPosition;LExplosion;)V wasExploded
Block a (LWorld;LBlockPosition;LIBlockData;LEntityLiving;LItemStack;)V postPlace
Block b (LIBlockData;)Z isComplexRedstone
Block b (LIBlockData;LWorld;LBlockPosition;)LITileInventory; getInventory
Block b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
Block b (LIBlockData;LWorld;LBlockPosition;Ljava/util/Random;)V tick
Block d (LIBlockData;LIBlockAccess;LBlockPosition;)Z isOccluding
Block e frictionFactor
Block f blockData
Block h ()Z isTileEntity
Block h (LIBlockData;)Z isPowerSource
Block i (LIBlockData;)LEnumPistonReaction; getPushReaction
Block i name
Block j ()F getDurability
Block k (LIBlockData;)I getCombinedId
Block m (LIBlockData;)Z isTicking
Block m REGISTRY_ID
Block n ()LBlockStateList; getStates
Block o ()LIBlockData; getBlockData
Block o strength
Block p (LIBlockData;)LSoundEffectType; getStepSound
Block p durability
Block r stepSound
Block s material
Block u blockStateList
Block$EnumRandomOffset a NONE
Block$EnumRandomOffset b XZ
Block$EnumRandomOffset c XYZ
BlockAccessAir a INSTANCE
BlockAnvil a FACING
BlockAttachable C FACE
BlockBanner a ROTATION
BlockBannerAbstract b ()LEnumColor; getColor
BlockBed a PART
BlockBed b OCCUPIED
BlockBed w color
BlockBrewingStand a HAS_BOTTLE
BlockButtonAbstract a POWERED
BlockCactus a AGE
BlockCake a BITES
BlockCarpet b color
BlockCauldron a LEVEL
BlockChest a (LIBlockData;LGeneratorAccess;LBlockPosition;ZLBlockChest$ChestFinder;)Ljava/lang/Object; getInventory
BlockChest a (LIBlockData;LWorld;LBlockPosition;Z)LIInventory; getInventory
BlockChest a FACING
BlockChorusFlower a AGE
BlockCobbleWall i UP
BlockCocoa a AGE
BlockConcretePowder r (LIBlockData;)Z canHarden
BlockCrops b (I)LIBlockData; setAge
BlockCrops b AGE
BlockCrops q (LIBlockData;)Z isRipe
BlockDataAbstract c STATE_TO_VALUE
BlockDaylightDetector a POWER
BlockDiodeAbstract r (LIBlockData;)Z isDiode
BlockDirectional a FACING
BlockDispenser a (LWorld;LBlockPosition;)V dispense
BlockDispenser a FACING
BlockDispenser b TRIGGERED
BlockDispenser c REGISTRY
BlockDoor a (LWorld;LBlockPosition;Z)V setDoor
BlockDoor a FACING
BlockDoor b OPEN
BlockDoor c HINGE
BlockDoor d POWERED
BlockDoor e HALF
BlockEnderChest a FACING
BlockEnderPortalFrame a FACING
BlockEnderPortalFrame b EYE
BlockFacingHorizontal ay FACING
BlockFalling j (LIBlockData;)Z canFallThrough
BlockFenceGate a OPEN
BlockFenceGate b POWERED
BlockFenceGate c IN_WALL
BlockFire a AGE
BlockFire b (LIBlockAccess;LBlockPosition;)Z canBurn
BlockFire b NORTH
BlockFire c EAST
BlockFire d SOUTH
BlockFire e WEST
BlockFire f UPPER
BlockFire h flameChances
BlockFloorSign c ROTATION
BlockFluids a (LGeneratorAccess;LBlockPosition;)V fizz
BlockFluids a LEVEL
BlockFurnace a FACING
BlockFurnace b LIT
BlockHopper a FACING
BlockHopper b ENABLED
BlockIce d (LIBlockData;LWorld;LBlockPosition;)V melt
BlockJukeBox a (LWorld;LBlockPosition;)V dropRecord
BlockJukeBox a HAS_RECORD
BlockLadder a FACING
BlockLeaves a DISTANCE
BlockLeaves b PERSISTENT
BlockLectern a (LWorld;LBlockPosition;LIBlockData;Z)V setHasBook
BlockLever a POWERED
BlockMinecartDetector c SHAPE
BlockMinecartDetector d POWERED
BlockMinecartTrack c SHAPE
BlockNetherWart a AGE
BlockNote a (LWorld;LBlockPosition;)V play
BlockNote a INSTRUMENT
BlockNote b POWERED
BlockNote c NOTE
BlockPiston b EXTENDED
BlockPiston i sticky
BlockPistonExtension b TYPE
BlockPistonExtension c SHORT
BlockPortal a AXIS
BlockPortal$Shape e ()V createPortal
BlockPortal$Shape f position
BlockPortal$Shape g height
BlockPortal$Shape h width
BlockPosition a ()J asLong
BlockPosition a (LEnumDirection;)LBlockPosition; shift
BlockPosition a (LEnumDirection;I)LBlockPosition; shift
BlockPosition a ZERO
BlockPosition b ()LBlockPosition; up
BlockPosition b (I)LBlockPosition; up
BlockPosition c ()LBlockPosition; down
BlockPosition c (I)LBlockPosition; down
BlockPosition d ()LBlockPosition; north
BlockPosition d (I)LBlockPosition; north
BlockPosition e ()LBlockPosition; south
BlockPosition e (I)LBlockPosition; south
BlockPosition e (J)LBlockPosition; fromLong
BlockPosition f ()LBlockPosition; west
BlockPosition f (I)LBlockPosition; west
BlockPosition g ()LBlockPosition; east
BlockPosition g (I)LBlockPosition; east
BlockPosition h ()LBlockPosition; immutableCopy
BlockPoweredRail c SHAPE
BlockPoweredRail d POWERED
BlockPressurePlateAbstract j (LIBlockData;)I getPower
BlockPressurePlateBinary d POWERED
BlockPressurePlateBinary$EnumMobType a EVERYTHING
BlockPressurePlateBinary$EnumMobType b MOBS
BlockPressurePlateWeighted d POWER
BlockPressurePlateWeighted e weight
BlockPropertyAttachPosition a FLOOR
BlockPropertyAttachPosition b WALL
BlockPropertyAttachPosition c CEILING
BlockPropertyBambooSize a NONE
BlockPropertyBambooSize b SMALL
BlockPropertyBambooSize c LARGE
BlockPropertyBedPart a HEAD
BlockPropertyBedPart b FOOT
BlockPropertyBellAttach a FLOOR
BlockPropertyBellAttach b CEILING
BlockPropertyBellAttach c SINGLE_WALL
BlockPropertyBellAttach d DOUBLE_WALL
BlockPropertyChestType a SINGLE
BlockPropertyChestType b LEFT
BlockPropertyChestType c RIGHT
BlockPropertyComparatorMode a COMPARE
BlockPropertyComparatorMode b SUBTRACT
BlockPropertyDoorHinge a LEFT
BlockPropertyDoorHinge b RIGHT
BlockPropertyDoubleBlockHalf a UPPER
BlockPropertyDoubleBlockHalf b LOWER
BlockPropertyHalf a TOP
BlockPropertyHalf b BOTTOM
BlockPropertyInstrument a HARP
BlockPropertyInstrument b BASEDRUM
BlockPropertyInstrument c SNARE
BlockPropertyInstrument d HAT
BlockPropertyInstrument e BASS
BlockPropertyInstrument f FLUTE
BlockPropertyInstrument g BELL
BlockPropertyInstrument h GUITAR
BlockPropertyInstrument i CHIME
BlockPropertyInstrument j XYLOPHONE
BlockPropertyInstrument k IRON_XYLOPHONE
BlockPropertyInstrument l COW_BELL
BlockPropertyInstrument m DIDGERIDOO
BlockPropertyInstrument n BIT
BlockPropertyInstrument o BANJO
BlockPropertyInstrument p PLING
BlockPropertyPistonType a DEFAULT
BlockPropertyPistonType b STICKY
BlockPropertyRedstoneSide a UP
BlockPropertyRedstoneSide b SIDE
BlockPropertyRedstoneSide c NONE
BlockPropertySlabType a TOP
BlockPropertySlabType b BOTTOM
BlockPropertySlabType c DOUBLE
BlockPropertyStairsShape a STRAIGHT
BlockPropertyStairsShape b INNER_LEFT
BlockPropertyStairsShape c INNER_RIGHT
BlockPropertyStairsShape d OUTER_LEFT
BlockPropertyStairsShape e OUTER_RIGHT
BlockPropertyStructureMode a SAVE
BlockPropertyStructureMode b LOAD
BlockPropertyStructureMode c CORNER
BlockPropertyStructureMode d DATA
BlockPropertyTrackPosition a NORTH_SOUTH
BlockPropertyTrackPosition b EAST_WEST
BlockPropertyTrackPosition c ASCENDING_EAST
BlockPropertyTrackPosition d ASCENDING_WEST
BlockPropertyTrackPosition e ASCENDING_NORTH
BlockPropertyTrackPosition f ASCENDING_SOUTH
BlockPropertyTrackPosition g SOUTH_EAST
BlockPropertyTrackPosition h SOUTH_WEST
BlockPropertyTrackPosition i NORTH_WEST
BlockPropertyTrackPosition j NORTH_EAST
BlockPumpkinCarved e ()LShapeDetector; getSnowmanShape
BlockPumpkinCarved q ()LShapeDetector; getIronGolemShape
BlockRedstoneComparator a MODE
BlockRedstoneOre a (LWorld;LBlockPosition;)V playEffect
BlockRedstoneOre d (LIBlockData;LWorld;LBlockPosition;)V interact
BlockRedstoneTorch a LIT
BlockRedstoneWire a (ILIBlockData;)I getPower
BlockRedstoneWire a NORTH
BlockRedstoneWire b EAST
BlockRedstoneWire c SOUTH
BlockRedstoneWire d WEST
BlockRedstoneWire e POWER
BlockReed a AGE
BlockRepeater a LOCKED
BlockRepeater d DELAY
BlockRotatable a AXIS
BlockSapling a (LGeneratorAccess;LBlockPosition;LIBlockData;Ljava/util/Random;)V grow
BlockSapling a STAGE
BlockShulkerBox c color
BlockSkull$Type a SKELETON
BlockSkull$Type b WITHER_SKELETON
BlockSkull$Type c PLAYER
BlockSkull$Type d ZOMBIE
BlockSkull$Type e CREEPER
BlockSkull$Type f DRAGON
BlockSnow a LAYERS
BlockSoil a MOISTURE
BlockSoil d (LIBlockData;LWorld;LBlockPosition;)V fade
BlockStainedGlass a color
BlockStainedGlassPane i color
BlockStairs a FACING
BlockStairs b HALF
BlockStairs c SHAPE
BlockStateBoolean a (Ljava/lang/String;)LBlockStateBoolean; of
BlockStateDirection a (Ljava/lang/String;)LBlockStateDirection; of
BlockStateEnum a (Ljava/lang/String;Ljava/lang/Class;)LBlockStateEnum; of
BlockStateEnum a (Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)LBlockStateEnum; of
BlockStateInteger a (Ljava/lang/String;II)LBlockStateInteger; of
BlockStateList b ()LIBlockDataHolder; getBlockData
BlockStateList c ()Ljava/lang/Object; getBlock
BlockStem a AGE
BlockStem c blockFruit
BlockTall a NORTH
BlockTall b EAST
BlockTall c SOUTH
BlockTall d WEST
BlockTallPlant a HALF
BlockTrapdoor a OPEN
BlockTrapdoor b HALF
BlockTripwire a POWERED
BlockTripwire b ATTACHED
BlockTripwire c DISARMED
BlockTripwire d NORTH
BlockTripwire e EAST
BlockTripwire f SOUTH
BlockTripwire g WEST
BlockTripwireHook a FACING
BlockTripwireHook b POWERED
BlockTripwireHook c ATTACHED
BlockVine a (LEnumDirection;)LBlockStateBoolean; getDirection
BlockVine a UP
BlockVine b NORTH
BlockVine c EAST
BlockVine d SOUTH
BlockVine e WEST
BlockVine r (LIBlockData;)Z canSpread
BlockWallSign c FACING
Blocks A WATER
Blocks B LAVA
Blocks C SAND
Blocks D RED_SAND
Blocks E GRAVEL
Blocks F GOLD_ORE
Blocks G IRON_ORE
Blocks H COAL_ORE
Blocks I OAK_LOG
Blocks J SPRUCE_LOG
Blocks K BIRCH_LOG
Blocks L JUNGLE_LOG
Blocks M ACACIA_LOG
Blocks N DARK_OAK_LOG
Blocks O STRIPPED_SPRUCE_LOG
Blocks P STRIPPED_BIRCH_LOG
Blocks Q STRIPPED_JUNGLE_LOG
Blocks R STRIPPED_ACACIA_LOG
Blocks S STRIPPED_DARK_OAK_LOG
Blocks T STRIPPED_OAK_LOG
Blocks U OAK_WOOD
Blocks V SPRUCE_WOOD
Blocks W BIRCH_WOOD
Blocks X JUNGLE_WOOD
Blocks Y ACACIA_WOOD
Blocks Z DARK_OAK_WOOD
Blocks a AIR
Blocks aA YELLOW_BED
Blocks aB LIME_BED
Blocks aC PINK_BED
Blocks aD GRAY_BED
Blocks aE LIGHT_GRAY_BED
Blocks aF CYAN_BED
Blocks aG PURPLE_BED
Blocks aH BLUE_BED
Blocks aI BROWN_BED
Blocks aJ GREEN_BED
Blocks aK RED_BED
Blocks aL BLACK_BED
Blocks aM POWERED_RAIL
Blocks aN DETECTOR_RAIL
Blocks aO STICKY_PISTON
Blocks aP COBWEB
Blocks aQ GRASS
Blocks aR FERN
Blocks aS DEAD_BUSH
Blocks aT SEAGRASS
Blocks aU TALL_SEAGRASS
Blocks aV PISTON
Blocks aW PISTON_HEAD
Blocks aX WHITE_WOOL
Blocks aY ORANGE_WOOL
Blocks aZ MAGENTA_WOOL
Blocks aa STRIPPED_OAK_WOOD
Blocks ab STRIPPED_SPRUCE_WOOD
Blocks ac STRIPPED_BIRCH_WOOD
Blocks ad STRIPPED_JUNGLE_WOOD
Blocks ae STRIPPED_ACACIA_WOOD
Blocks af STRIPPED_DARK_OAK_WOOD
Blocks ag OAK_LEAVES
Blocks ah SPRUCE_LEAVES
Blocks ai BIRCH_LEAVES
Blocks aj JUNGLE_LEAVES
Blocks ak ACACIA_LEAVES
Blocks al DARK_OAK_LEAVES
Blocks am SPONGE
Blocks an WET_SPONGE
Blocks ao GLASS
Blocks ap LAPIS_ORE
Blocks aq LAPIS_BLOCK
Blocks ar DISPENSER
Blocks as SANDSTONE
Blocks at CHISELED_SANDSTONE
Blocks au CUT_SANDSTONE
Blocks av NOTE_BLOCK
Blocks aw WHITE_BED
Blocks ax ORANGE_BED
Blocks ay MAGENTA_BED
Blocks az LIGHT_BLUE_BED
Blocks b STONE
Blocks bA LILY_OF_THE_VALLEY
Blocks bB BROWN_MUSHROOM
Blocks bC RED_MUSHROOM
Blocks bD GOLD_BLOCK
Blocks bE IRON_BLOCK
Blocks bF BRICKS
Blocks bG TNT
Blocks bH BOOKSHELF
Blocks bI MOSSY_COBBLESTONE
Blocks bJ OBSIDIAN
Blocks bK TORCH
Blocks bL WALL_TORCH
Blocks bM FIRE
Blocks bN SPAWNER
Blocks bO OAK_STAIRS
Blocks bP CHEST
Blocks bQ REDSTONE_WIRE
Blocks bR DIAMOND_ORE
Blocks bS DIAMOND_BLOCK
Blocks bT CRAFTING_TABLE
Blocks bU WHEAT
Blocks bV FARMLAND
Blocks bW FURNACE
Blocks bX OAK_SIGN
Blocks bY SPRUCE_SIGN
Blocks bZ BIRCH_SIGN
Blocks ba LIGHT_BLUE_WOOL
Blocks bb YELLOW_WOOL
Blocks bc LIME_WOOL
Blocks bd PINK_WOOL
Blocks be GRAY_WOOL
Blocks bf LIGHT_GRAY_WOOL
Blocks bg CYAN_WOOL
Blocks bh PURPLE_WOOL
Blocks bi BLUE_WOOL
Blocks bj BROWN_WOOL
Blocks bk GREEN_WOOL
Blocks bl RED_WOOL
Blocks bm BLACK_WOOL
Blocks bn MOVING_PISTON
Blocks bo DANDELION
Blocks bp POPPY
Blocks bq BLUE_ORCHID
Blocks br ALLIUM
Blocks bs AZURE_BLUET
Blocks bt RED_TULIP
Blocks bu ORANGE_TULIP
Blocks bv WHITE_TULIP
Blocks bw PINK_TULIP
Blocks bx OXEYE_DAISY
Blocks by CORNFLOWER
Blocks bz WITHER_ROSE
Blocks c GRANITE
Blocks cA SNOW
Blocks cB ICE
Blocks cC SNOW_BLOCK
Blocks cD CACTUS
Blocks cE CLAY
Blocks cF SUGAR_CANE
Blocks cG JUKEBOX
Blocks cH OAK_FENCE
Blocks cI PUMPKIN
Blocks cJ NETHERRACK
Blocks cK SOUL_SAND
Blocks cL GLOWSTONE
Blocks cM NETHER_PORTAL
Blocks cN CARVED_PUMPKIN
Blocks cO JACK_O_LANTERN
Blocks cP CAKE
Blocks cQ REPEATER
Blocks cR WHITE_STAINED_GLASS
Blocks cS ORANGE_STAINED_GLASS
Blocks cT MAGENTA_STAINED_GLASS
Blocks cU LIGHT_BLUE_STAINED_GLASS
Blocks cV YELLOW_STAINED_GLASS
Blocks cW LIME_STAINED_GLASS
Blocks cX PINK_STAINED_GLASS
Blocks cY GRAY_STAINED_GLASS
Blocks cZ LIGHT_GRAY_STAINED_GLASS
Blocks ca ACACIA_SIGN
Blocks cb JUNGLE_SIGN
Blocks cc DARK_OAK_SIGN
Blocks cd OAK_DOOR
Blocks ce LADDER
Blocks cf RAIL
Blocks cg COBBLESTONE_STAIRS
Blocks ch OAK_WALL_SIGN
Blocks ci SPRUCE_WALL_SIGN
Blocks cj BIRCH_WALL_SIGN
Blocks ck ACACIA_WALL_SIGN
Blocks cl JUNGLE_WALL_SIGN
Blocks cm DARK_OAK_WALL_SIGN
Blocks cn LEVER
Blocks co STONE_PRESSURE_PLATE
Blocks cp IRON_DOOR
Blocks cq OAK_PRESSURE_PLATE
Blocks cr SPRUCE_PRESSURE_PLATE
Blocks cs BIRCH_PRESSURE_PLATE
Blocks ct JUNGLE_PRESSURE_PLATE
Blocks cu ACACIA_PRESSURE_PLATE
Blocks cv DARK_OAK_PRESSURE_PLATE
Blocks cw REDSTONE_ORE
Blocks cx REDSTONE_TORCH
Blocks cy REDSTONE_WALL_TORCH
Blocks cz STONE_BUTTON
Blocks d POLISHED_GRANITE
Blocks dA IRON_BARS
Blocks dB GLASS_PANE
Blocks dC MELON
Blocks dD ATTACHED_PUMPKIN_STEM
Blocks dE ATTACHED_MELON_STEM
Blocks dF PUMPKIN_STEM
Blocks dG MELON_STEM
Blocks dH VINE
Blocks dI OAK_FENCE_GATE
Blocks dJ BRICK_STAIRS
Blocks dK STONE_BRICK_STAIRS
Blocks dL MYCELIUM
Blocks dM LILY_PAD
Blocks dN NETHER_BRICKS
Blocks dO NETHER_BRICK_FENCE
Blocks dP NETHER_BRICK_STAIRS
Blocks dQ NETHER_WART
Blocks dR ENCHANTING_TABLE
Blocks dS BREWING_STAND
Blocks dT CAULDRON
Blocks dU END_PORTAL
Blocks dV END_PORTAL_FRAME
Blocks dW END_STONE
Blocks dX DRAGON_EGG
Blocks dY REDSTONE_LAMP
Blocks dZ COCOA
Blocks da CYAN_STAINED_GLASS
Blocks db PURPLE_STAINED_GLASS
Blocks dc BLUE_STAINED_GLASS
Blocks dd BROWN_STAINED_GLASS
Blocks de GREEN_STAINED_GLASS
Blocks df RED_STAINED_GLASS
Blocks dg BLACK_STAINED_GLASS
Blocks dh OAK_TRAPDOOR
Blocks di SPRUCE_TRAPDOOR
Blocks dj BIRCH_TRAPDOOR
Blocks dk JUNGLE_TRAPDOOR
Blocks dl ACACIA_TRAPDOOR
Blocks dm DARK_OAK_TRAPDOOR
Blocks dn STONE_BRICKS
Blocks do MOSSY_STONE_BRICKS
Blocks dp CRACKED_STONE_BRICKS
Blocks dq CHISELED_STONE_BRICKS
Blocks dr INFESTED_STONE
Blocks ds INFESTED_COBBLESTONE
Blocks dt INFESTED_STONE_BRICKS
Blocks du INFESTED_MOSSY_STONE_BRICKS
Blocks dv INFESTED_CRACKED_STONE_BRICKS
Blocks dw INFESTED_CHISELED_STONE_BRICKS
Blocks dx BROWN_MUSHROOM_BLOCK
Blocks dy RED_MUSHROOM_BLOCK
Blocks dz MUSHROOM_STEM
Blocks e DIORITE
Blocks eA POTTED_RED_TULIP
Blocks eB POTTED_ORANGE_TULIP
Blocks eC POTTED_WHITE_TULIP
Blocks eD POTTED_PINK_TULIP
Blocks eE POTTED_OXEYE_DAISY
Blocks eF POTTED_CORNFLOWER
Blocks eG POTTED_LILY_OF_THE_VALLEY
Blocks eH POTTED_WITHER_ROSE
Blocks eI POTTED_RED_MUSHROOM
Blocks eJ POTTED_BROWN_MUSHROOM
Blocks eK POTTED_DEAD_BUSH
Blocks eL POTTED_CACTUS
Blocks eM CARROTS
Blocks eN POTATOES
Blocks eO OAK_BUTTON
Blocks eP SPRUCE_BUTTON
Blocks eQ BIRCH_BUTTON
Blocks eR JUNGLE_BUTTON
Blocks eS ACACIA_BUTTON
Blocks eT DARK_OAK_BUTTON
Blocks eU SKELETON_SKULL
Blocks eV SKELETON_WALL_SKULL
Blocks eW WITHER_SKELETON_SKULL
Blocks eX WITHER_SKELETON_WALL_SKULL
Blocks eY ZOMBIE_HEAD
Blocks eZ ZOMBIE_WALL_HEAD
Blocks ea SANDSTONE_STAIRS
Blocks eb EMERALD_ORE
Blocks ec ENDER_CHEST
Blocks ed TRIPWIRE_HOOK
Blocks ee TRIPWIRE
Blocks ef EMERALD_BLOCK
Blocks eg SPRUCE_STAIRS
Blocks eh BIRCH_STAIRS
Blocks ei JUNGLE_STAIRS
Blocks ej COMMAND_BLOCK
Blocks ek BEACON
Blocks el COBBLESTONE_WALL
Blocks em MOSSY_COBBLESTONE_WALL
Blocks en FLOWER_POT
Blocks eo POTTED_OAK_SAPLING
Blocks ep POTTED_SPRUCE_SAPLING
Blocks eq POTTED_BIRCH_SAPLING
Blocks er POTTED_JUNGLE_SAPLING
Blocks es POTTED_ACACIA_SAPLING
Blocks et POTTED_DARK_OAK_SAPLING
Blocks eu POTTED_FERN
Blocks ev POTTED_DANDELION
Blocks ew POTTED_POPPY
Blocks ex POTTED_BLUE_ORCHID
Blocks ey POTTED_ALLIUM
Blocks ez POTTED_AZURE_BLUET
Blocks f POLISHED_DIORITE
Blocks fA LIGHT_BLUE_TERRACOTTA
Blocks fB YELLOW_TERRACOTTA
Blocks fC LIME_TERRACOTTA
Blocks fD PINK_TERRACOTTA
Blocks fE GRAY_TERRACOTTA
Blocks fF LIGHT_GRAY_TERRACOTTA
Blocks fG CYAN_TERRACOTTA
Blocks fH PURPLE_TERRACOTTA
Blocks fI BLUE_TERRACOTTA
Blocks fJ BROWN_TERRACOTTA
Blocks fK GREEN_TERRACOTTA
Blocks fL RED_TERRACOTTA
Blocks fM BLACK_TERRACOTTA
Blocks fN WHITE_STAINED_GLASS_PANE
Blocks fO ORANGE_STAINED_GLASS_PANE
Blocks fP MAGENTA_STAINED_GLASS_PANE
Blocks fQ LIGHT_BLUE_STAINED_GLASS_PANE
Blocks fR YELLOW_STAINED_GLASS_PANE
Blocks fS LIME_STAINED_GLASS_PANE
Blocks fT PINK_STAINED_GLASS_PANE
Blocks fU GRAY_STAINED_GLASS_PANE
Blocks fV LIGHT_GRAY_STAINED_GLASS_PANE
Blocks fW CYAN_STAINED_GLASS_PANE
Blocks fX PURPLE_STAINED_GLASS_PANE
Blocks fY BLUE_STAINED_GLASS_PANE
Blocks fZ BROWN_STAINED_GLASS_PANE
Blocks fa PLAYER_HEAD
Blocks fb PLAYER_WALL_HEAD
Blocks fc CREEPER_HEAD
Blocks fd CREEPER_WALL_HEAD
Blocks fe DRAGON_HEAD
Blocks ff DRAGON_WALL_HEAD
Blocks fg ANVIL
Blocks fh CHIPPED_ANVIL
Blocks fi DAMAGED_ANVIL
Blocks fj TRAPPED_CHEST
Blocks fk LIGHT_WEIGHTED_PRESSURE_PLATE
Blocks fl HEAVY_WEIGHTED_PRESSURE_PLATE
Blocks fm COMPARATOR
Blocks fn DAYLIGHT_DETECTOR
Blocks fo REDSTONE_BLOCK
Blocks fp NETHER_QUARTZ_ORE
Blocks fq HOPPER
Blocks fr QUARTZ_BLOCK
Blocks fs CHISELED_QUARTZ_BLOCK
Blocks ft QUARTZ_PILLAR
Blocks fu QUARTZ_STAIRS
Blocks fv ACTIVATOR_RAIL
Blocks fw DROPPER
Blocks fx WHITE_TERRACOTTA
Blocks fy ORANGE_TERRACOTTA
Blocks fz MAGENTA_TERRACOTTA
Blocks g ANDESITE
Blocks gA GRAY_CARPET
Blocks gB LIGHT_GRAY_CARPET
Blocks gC CYAN_CARPET
Blocks gD PURPLE_CARPET
Blocks gE BLUE_CARPET
Blocks gF BROWN_CARPET
Blocks gG GREEN_CARPET
Blocks gH RED_CARPET
Blocks gI BLACK_CARPET
Blocks gJ TERRACOTTA
Blocks gK COAL_BLOCK
Blocks gL PACKED_ICE
Blocks gM SUNFLOWER
Blocks gN LILAC
Blocks gO ROSE_BUSH
Blocks gP PEONY
Blocks gQ TALL_GRASS
Blocks gR LARGE_FERN
Blocks gS WHITE_BANNER
Blocks gT ORANGE_BANNER
Blocks gU MAGENTA_BANNER
Blocks gV LIGHT_BLUE_BANNER
Blocks gW YELLOW_BANNER
Blocks gX LIME_BANNER
Blocks gY PINK_BANNER
Blocks gZ GRAY_BANNER
Blocks ga GREEN_STAINED_GLASS_PANE
Blocks gb RED_STAINED_GLASS_PANE
Blocks gc BLACK_STAINED_GLASS_PANE
Blocks gd ACACIA_STAIRS
Blocks ge DARK_OAK_STAIRS
Blocks gf SLIME_BLOCK
Blocks gg BARRIER
Blocks gh IRON_TRAPDOOR
Blocks gi PRISMARINE
Blocks gj PRISMARINE_BRICKS
Blocks gk DARK_PRISMARINE
Blocks gl PRISMARINE_STAIRS
Blocks gm PRISMARINE_BRICK_STAIRS
Blocks gn DARK_PRISMARINE_STAIRS
Blocks go PRISMARINE_SLAB
Blocks gp PRISMARINE_BRICK_SLAB
Blocks gq DARK_PRISMARINE_SLAB
Blocks gr SEA_LANTERN
Blocks gs HAY_BLOCK
Blocks gt WHITE_CARPET
Blocks gu ORANGE_CARPET
Blocks gv MAGENTA_CARPET
Blocks gw LIGHT_BLUE_CARPET
Blocks gx YELLOW_CARPET
Blocks gy LIME_CARPET
Blocks gz PINK_CARPET
Blocks h POLISHED_ANDESITE
Blocks hA CUT_RED_SANDSTONE
Blocks hB RED_SANDSTONE_STAIRS
Blocks hC OAK_SLAB
Blocks hD SPRUCE_SLAB
Blocks hE BIRCH_SLAB
Blocks hF JUNGLE_SLAB
Blocks hG ACACIA_SLAB
Blocks hH DARK_OAK_SLAB
Blocks hI STONE_SLAB
Blocks hJ SMOOTH_STONE_SLAB
Blocks hK SANDSTONE_SLAB
Blocks hL CUT_SANDSTONE_SLAB
Blocks hM PETRIFIED_OAK_SLAB
Blocks hN COBBLESTONE_SLAB
Blocks hO BRICK_SLAB
Blocks hP STONE_BRICK_SLAB
Blocks hQ NETHER_BRICK_SLAB
Blocks hR QUARTZ_SLAB
Blocks hS RED_SANDSTONE_SLAB
Blocks hT CUT_RED_SANDSTONE_SLAB
Blocks hU PURPUR_SLAB
Blocks hV SMOOTH_STONE
Blocks hW SMOOTH_SANDSTONE
Blocks hX SMOOTH_QUARTZ
Blocks hY SMOOTH_RED_SANDSTONE
Blocks hZ SPRUCE_FENCE_GATE
Blocks ha LIGHT_GRAY_BANNER
Blocks hb CYAN_BANNER
Blocks hc PURPLE_BANNER
Blocks hd BLUE_BANNER
Blocks he BROWN_BANNER
Blocks hf GREEN_BANNER
Blocks hg RED_BANNER
Blocks hh BLACK_BANNER
Blocks hi WHITE_WALL_BANNER
Blocks hj ORANGE_WALL_BANNER
Blocks hk MAGENTA_WALL_BANNER
Blocks hl LIGHT_BLUE_WALL_BANNER
Blocks hm YELLOW_WALL_BANNER
Blocks hn LIME_WALL_BANNER
Blocks ho PINK_WALL_BANNER
Blocks hp GRAY_WALL_BANNER
Blocks hq LIGHT_GRAY_WALL_BANNER
Blocks hr CYAN_WALL_BANNER
Blocks hs PURPLE_WALL_BANNER
Blocks ht BLUE_WALL_BANNER
Blocks hu BROWN_WALL_BANNER
Blocks hv GREEN_WALL_BANNER
Blocks hw RED_WALL_BANNER
Blocks hx BLACK_WALL_BANNER
Blocks hy RED_SANDSTONE
Blocks hz CHISELED_RED_SANDSTONE
Blocks i GRASS_BLOCK
Blocks iA FROSTED_ICE
Blocks iB MAGMA_BLOCK
Blocks iC NETHER_WART_BLOCK
Blocks iD RED_NETHER_BRICKS
Blocks iE BONE_BLOCK
Blocks iF STRUCTURE_VOID
Blocks iG OBSERVER
Blocks iH SHULKER_BOX
Blocks iI WHITE_SHULKER_BOX
Blocks iJ ORANGE_SHULKER_BOX
Blocks iK MAGENTA_SHULKER_BOX
Blocks iL LIGHT_BLUE_SHULKER_BOX
Blocks iM YELLOW_SHULKER_BOX
Blocks iN LIME_SHULKER_BOX
Blocks iO PINK_SHULKER_BOX
Blocks iP GRAY_SHULKER_BOX
Blocks iQ LIGHT_GRAY_SHULKER_BOX
Blocks iR CYAN_SHULKER_BOX
Blocks iS PURPLE_SHULKER_BOX
Blocks iT BLUE_SHULKER_BOX
Blocks iU BROWN_SHULKER_BOX
Blocks iV GREEN_SHULKER_BOX
Blocks iW RED_SHULKER_BOX
Blocks iX BLACK_SHULKER_BOX
Blocks iY WHITE_GLAZED_TERRACOTTA
Blocks iZ ORANGE_GLAZED_TERRACOTTA
Blocks ia BIRCH_FENCE_GATE
Blocks ib JUNGLE_FENCE_GATE
Blocks ic ACACIA_FENCE_GATE
Blocks id DARK_OAK_FENCE_GATE
Blocks ie SPRUCE_FENCE
Blocks if BIRCH_FENCE
Blocks ig JUNGLE_FENCE
Blocks ih ACACIA_FENCE
Blocks ii DARK_OAK_FENCE
Blocks ij SPRUCE_DOOR
Blocks ik BIRCH_DOOR
Blocks il JUNGLE_DOOR
Blocks im ACACIA_DOOR
Blocks in DARK_OAK_DOOR
Blocks io END_ROD
Blocks ip CHORUS_PLANT
Blocks iq CHORUS_FLOWER
Blocks ir PURPUR_BLOCK
Blocks is PURPUR_PILLAR
Blocks it PURPUR_STAIRS
Blocks iu END_STONE_BRICKS
Blocks iv BEETROOTS
Blocks iw GRASS_PATH
Blocks ix END_GATEWAY
Blocks iy REPEATING_COMMAND_BLOCK
Blocks iz CHAIN_COMMAND_BLOCK
Blocks j DIRT
Blocks jA BROWN_CONCRETE
Blocks jB GREEN_CONCRETE
Blocks jC RED_CONCRETE
Blocks jD BLACK_CONCRETE
Blocks jE WHITE_CONCRETE_POWDER
Blocks jF ORANGE_CONCRETE_POWDER
Blocks jG MAGENTA_CONCRETE_POWDER
Blocks jH LIGHT_BLUE_CONCRETE_POWDER
Blocks jI YELLOW_CONCRETE_POWDER
Blocks jJ LIME_CONCRETE_POWDER
Blocks jK PINK_CONCRETE_POWDER
Blocks jL GRAY_CONCRETE_POWDER
Blocks jM LIGHT_GRAY_CONCRETE_POWDER
Blocks jN CYAN_CONCRETE_POWDER
Blocks jO PURPLE_CONCRETE_POWDER
Blocks jP BLUE_CONCRETE_POWDER
Blocks jQ BROWN_CONCRETE_POWDER
Blocks jR GREEN_CONCRETE_POWDER
Blocks jS RED_CONCRETE_POWDER
Blocks jT BLACK_CONCRETE_POWDER
Blocks jU KELP
Blocks jV KELP_PLANT
Blocks jW DRIED_KELP_BLOCK
Blocks jX TURTLE_EGG
Blocks jY DEAD_TUBE_CORAL_BLOCK
Blocks jZ DEAD_BRAIN_CORAL_BLOCK
Blocks ja MAGENTA_GLAZED_TERRACOTTA
Blocks jb LIGHT_BLUE_GLAZED_TERRACOTTA
Blocks jc YELLOW_GLAZED_TERRACOTTA
Blocks jd LIME_GLAZED_TERRACOTTA
Blocks je PINK_GLAZED_TERRACOTTA
Blocks jf GRAY_GLAZED_TERRACOTTA
Blocks jg LIGHT_GRAY_GLAZED_TERRACOTTA
Blocks jh CYAN_GLAZED_TERRACOTTA
Blocks ji PURPLE_GLAZED_TERRACOTTA
Blocks jj BLUE_GLAZED_TERRACOTTA
Blocks jk BROWN_GLAZED_TERRACOTTA
Blocks jl GREEN_GLAZED_TERRACOTTA
Blocks jm RED_GLAZED_TERRACOTTA
Blocks jn BLACK_GLAZED_TERRACOTTA
Blocks jo WHITE_CONCRETE
Blocks jp ORANGE_CONCRETE
Blocks jq MAGENTA_CONCRETE
Blocks jr LIGHT_BLUE_CONCRETE
Blocks js YELLOW_CONCRETE
Blocks jt LIME_CONCRETE
Blocks ju PINK_CONCRETE
Blocks jv GRAY_CONCRETE
Blocks jw LIGHT_GRAY_CONCRETE
Blocks jx CYAN_CONCRETE
Blocks jy PURPLE_CONCRETE
Blocks jz BLUE_CONCRETE
Blocks k COARSE_DIRT
Blocks kA FIRE_CORAL_FAN
Blocks kB HORN_CORAL_FAN
Blocks kC DEAD_TUBE_CORAL_WALL_FAN
Blocks kD DEAD_BRAIN_CORAL_WALL_FAN
Blocks kE DEAD_BUBBLE_CORAL_WALL_FAN
Blocks kF DEAD_FIRE_CORAL_WALL_FAN
Blocks kG DEAD_HORN_CORAL_WALL_FAN
Blocks kH TUBE_CORAL_WALL_FAN
Blocks kI BRAIN_CORAL_WALL_FAN
Blocks kJ BUBBLE_CORAL_WALL_FAN
Blocks kK FIRE_CORAL_WALL_FAN
Blocks kL HORN_CORAL_WALL_FAN
Blocks kM SEA_PICKLE
Blocks kN BLUE_ICE
Blocks kO CONDUIT
Blocks kP BAMBOO_SAPLING
Blocks kQ BAMBOO
Blocks kR POTTED_BAMBOO
Blocks kS VOID_AIR
Blocks kT CAVE_AIR
Blocks kU BUBBLE_COLUMN
Blocks kV POLISHED_GRANITE_STAIRS
Blocks kW SMOOTH_RED_SANDSTONE_STAIRS
Blocks kX MOSSY_STONE_BRICK_STAIRS
Blocks kY POLISHED_DIORITE_STAIRS
Blocks kZ MOSSY_COBBLESTONE_STAIRS
Blocks ka DEAD_BUBBLE_CORAL_BLOCK
Blocks kb DEAD_FIRE_CORAL_BLOCK
Blocks kc DEAD_HORN_CORAL_BLOCK
Blocks kd TUBE_CORAL_BLOCK
Blocks ke BRAIN_CORAL_BLOCK
Blocks kf BUBBLE_CORAL_BLOCK
Blocks kg FIRE_CORAL_BLOCK
Blocks kh HORN_CORAL_BLOCK
Blocks ki DEAD_TUBE_CORAL
Blocks kj DEAD_BRAIN_CORAL
Blocks kk DEAD_BUBBLE_CORAL
Blocks kl DEAD_FIRE_CORAL
Blocks km DEAD_HORN_CORAL
Blocks kn TUBE_CORAL
Blocks ko BRAIN_CORAL
Blocks kp BUBBLE_CORAL
Blocks kq FIRE_CORAL
Blocks kr HORN_CORAL
Blocks ks DEAD_TUBE_CORAL_FAN
Blocks kt DEAD_BRAIN_CORAL_FAN
Blocks ku DEAD_BUBBLE_CORAL_FAN
Blocks kv DEAD_FIRE_CORAL_FAN
Blocks kw DEAD_HORN_CORAL_FAN
Blocks kx TUBE_CORAL_FAN
Blocks ky BRAIN_CORAL_FAN
Blocks kz BUBBLE_CORAL_FAN
Blocks l PODZOL
Blocks lA GRANITE_WALL
Blocks lB STONE_BRICK_WALL
Blocks lC NETHER_BRICK_WALL
Blocks lD ANDESITE_WALL
Blocks lE RED_NETHER_BRICK_WALL
Blocks lF SANDSTONE_WALL
Blocks lG END_STONE_BRICK_WALL
Blocks lH DIORITE_WALL
Blocks lI SCAFFOLDING
Blocks lJ LOOM
Blocks lK BARREL
Blocks lL SMOKER
Blocks lM BLAST_FURNACE
Blocks lN CARTOGRAPHY_TABLE
Blocks lO FLETCHING_TABLE
Blocks lP GRINDSTONE
Blocks lQ LECTERN
Blocks lR SMITHING_TABLE
Blocks lS STONECUTTER
Blocks lT BELL
Blocks lU LANTERN
Blocks lV CAMPFIRE
Blocks lW SWEET_BERRY_BUSH
Blocks lX STRUCTURE_BLOCK
Blocks lY JIGSAW
Blocks lZ COMPOSTER
Blocks la END_STONE_BRICK_STAIRS
Blocks lb STONE_STAIRS
Blocks lc SMOOTH_SANDSTONE_STAIRS
Blocks ld SMOOTH_QUARTZ_STAIRS
Blocks le GRANITE_STAIRS
Blocks lf ANDESITE_STAIRS
Blocks lg RED_NETHER_BRICK_STAIRS
Blocks lh POLISHED_ANDESITE_STAIRS
Blocks li DIORITE_STAIRS
Blocks lj POLISHED_GRANITE_SLAB
Blocks lk SMOOTH_RED_SANDSTONE_SLAB
Blocks ll MOSSY_STONE_BRICK_SLAB
Blocks lm POLISHED_DIORITE_SLAB
Blocks ln MOSSY_COBBLESTONE_SLAB
Blocks lo END_STONE_BRICK_SLAB
Blocks lp SMOOTH_SANDSTONE_SLAB
Blocks lq SMOOTH_QUARTZ_SLAB
Blocks lr GRANITE_SLAB
Blocks ls ANDESITE_SLAB
Blocks lt RED_NETHER_BRICK_SLAB
Blocks lu POLISHED_ANDESITE_SLAB
Blocks lv DIORITE_SLAB
Blocks lw BRICK_WALL
Blocks lx PRISMARINE_WALL
Blocks ly RED_SANDSTONE_WALL
Blocks lz MOSSY_STONE_BRICK_WALL
Blocks m COBBLESTONE
Blocks n OAK_PLANKS
Blocks o SPRUCE_PLANKS
Blocks p BIRCH_PLANKS
Blocks q JUNGLE_PLANKS
Blocks r ACACIA_PLANKS
Blocks s DARK_OAK_PLANKS
Blocks t OAK_SAPLING
Blocks u SPRUCE_SAPLING
Blocks v BIRCH_SAPLING
Blocks w JUNGLE_SAPLING
Blocks x ACACIA_SAPLING
Blocks y DARK_OAK_SAPLING
Blocks z BEDROCK
BossBattle a title
BossBattle c color
BossBattle d style
BossBattle k ()F getProgress
BossBattle n ()Z isDarkenSky
BossBattle o ()Z isPlayMusic
BossBattle p ()Z isCreateFog
BossBattle$BarColor a PINK
BossBattle$BarColor b BLUE
BossBattle$BarColor c RED
BossBattle$BarColor d GREEN
BossBattle$BarColor e YELLOW
BossBattle$BarColor f PURPLE
BossBattle$BarColor g WHITE
BossBattle$BarStyle a PROGRESS
BossBattle$BarStyle b NOTCHED_6
BossBattle$BarStyle c NOTCHED_10
BossBattle$BarStyle d NOTCHED_12
BossBattle$BarStyle e NOTCHED_20
BossBattleCustom a ()LMinecraftKey; getKey
BossBattleCustomData a (LBossBattleCustom;)V remove
BossBattleCustomData a (LMinecraftKey;LIChatBaseComponent;)LBossBattleCustom; register
BossBattleCustomData b ()Ljava/util/Collection; getBattles
BossBattleServer a (F)V setProgress
BossBattleServer a (LEntityPlayer;)V addPlayer
BossBattleServer a (LPacketPlayOutBoss$Action;)V sendUpdate
BossBattleServer a (Z)LBossBattle; setDarkenSky
BossBattleServer b (LEntityPlayer;)V removePlayer
BossBattleServer b (Z)LBossBattle; setPlayMusic
BossBattleServer c (Z)LBossBattle; setCreateFog
BossBattleServer d (Z)V setVisible
BossBattleServer h ()Ljava/util/Collection; getPlayers
BossBattleServer j visible
CancelledPacketHandleException a INSTANCE
ChatBaseComponent a siblings
ChatClickable$EnumClickAction a OPEN_URL
ChatClickable$EnumClickAction b OPEN_FILE
ChatClickable$EnumClickAction c RUN_COMMAND
ChatClickable$EnumClickAction d SUGGEST_COMMAND
ChatClickable$EnumClickAction e CHANGE_PAGE
ChatComponentUtils a (LCommandListenerWrapper;LIChatBaseComponent;LEntity;I)LIChatBaseComponent; filterForDisplay
ChatHoverable$EnumHoverAction a SHOW_TEXT
ChatHoverable$EnumHoverAction b SHOW_ITEM
ChatHoverable$EnumHoverAction c SHOW_ENTITY
ChatMessage f key
ChatMessage g args
ChatMessage k ()Ljava/lang/String; getKey
ChatMessage l ()[Ljava/lang/Object; getArgs
ChatMessageType a CHAT
ChatMessageType b SYSTEM
ChatMessageType c GAME_INFO
ChatModifier a ()LEnumChatFormat; getColor
ChatModifier a (LChatClickable;)LChatModifier; setChatClickable
ChatModifier a (LChatHoverable;)LChatModifier; setChatHoverable
ChatModifier a (LChatModifier;)LChatModifier; setChatModifier
ChatModifier a (LEnumChatFormat;)LChatModifier; setColor
ChatModifier a (Ljava/lang/Boolean;)LChatModifier; setBold
ChatModifier a (Ljava/lang/String;)LChatModifier; setInsertion
ChatModifier b ()Z isBold
ChatModifier b (Ljava/lang/Boolean;)LChatModifier; setItalic
ChatModifier b color
ChatModifier c ()Z isItalic
ChatModifier c (Ljava/lang/Boolean;)LChatModifier; setStrikethrough
ChatModifier c bold
ChatModifier d ()Z isStrikethrough
ChatModifier d (Ljava/lang/Boolean;)LChatModifier; setUnderline
ChatModifier d italic
ChatModifier e ()Z isUnderlined
ChatModifier e (Ljava/lang/Boolean;)LChatModifier; setRandom
ChatModifier e underlined
ChatModifier f ()Z isRandom
ChatModifier f strikethrough
ChatModifier g obfuscated
ChatModifier h ()LChatClickable; getClickEvent
ChatModifier h clickEvent
ChatModifier i ()LChatHoverable; getHoverEvent
ChatModifier i hoverEvent
ChatModifier j ()Ljava/lang/String; getInsertion
ChatModifier j insertion
ChatModifier m ()LChatModifier; clone
ChestLock b key
Chunk c (Z)V setLoaded
Chunk c sections
Chunk f loaded
Chunk g world
Chunk h heightMap
Chunk j tileEntities
Chunk k entitySlices
Chunk r lastSaved
Chunk s ()V markDirty
Chunk t ()Z isEmpty
Chunk u ()LPlayerChunk$State; getState
Chunk w ()V addEntities
Chunk w loc
Chunk x ()LWorld; getWorld
Chunk y ()Ljava/util/Map; getTileEntities
Chunk z ()[LEntitySlice; getEntitySlices
Chunk$EnumTileEntityState a IMMEDIATE
Chunk$EnumTileEntityState b QUEUED
Chunk$EnumTileEntityState c CHECK
ChunkConverter$Type a BLACKLIST
ChunkConverter$Type b DEFAULT
ChunkConverter$Type c CHEST
ChunkConverter$Type d LEAVES
ChunkConverter$Type e STEM_BLOCK
ChunkConverterPalette$Direction a DOWN
ChunkConverterPalette$Direction b UP
ChunkConverterPalette$Direction c NORTH
ChunkConverterPalette$Direction d SOUTH
ChunkConverterPalette$Direction e WEST
ChunkConverterPalette$Direction f EAST
ChunkConverterPalette$Direction$Axis a X
ChunkConverterPalette$Direction$Axis b Y
ChunkConverterPalette$Direction$Axis c Z
ChunkConverterPalette$Direction$AxisDirection a POSITIVE
ChunkConverterPalette$Direction$AxisDirection b NEGATIVE
ChunkCoordIntPair a ()J pair
ChunkCoordIntPair a (II)J pair
ChunkCoordIntPair a (J)I getX
ChunkCoordIntPair b (J)I getZ
ChunkCoordIntPair b x
ChunkCoordIntPair c z
ChunkCoordIntPair h ()I getRegionX
ChunkCoordIntPair i ()I getRegionZ
ChunkGenerator a ()LGeneratorSettingsDefault; getSettings
ChunkGenerator a (IILHeightMap$Type;)I getBaseHeight
ChunkGenerator a (LBiomeBase;LStructureGenerator;)Z canSpawnStructure
ChunkGenerator a (LEnumCreatureType;LBlockPosition;)Ljava/util/List; getMobsFor
ChunkGenerator a (LGeneratorAccess;LIChunkAccess;)V storeStructures
ChunkGenerator a (LIChunkAccess;)V createBiomes
ChunkGenerator a (LIChunkAccess;LChunkGenerator;LDefinedStructureManager;)V createStructures
ChunkGenerator a (LIChunkAccess;LWorldGenStage$Features;)V doCarving
ChunkGenerator a (LRegionLimitedWorldAccess;)V addDecorations
ChunkGenerator a (LRegionLimitedWorldAccess;LBlockPosition;)LBiomeBase; getDecoratingBiome
ChunkGenerator a (LWorld;Ljava/lang/String;LBlockPosition;IZ)LBlockPosition; findNearestMapFeature
ChunkGenerator a (LWorldServer;ZZ)V doMobSpawning
ChunkGenerator b ()I getSpawnHeight
ChunkGenerator b (LBiomeBase;LStructureGenerator;)LWorldGenFeatureConfiguration; getFeatureConfiguration
ChunkGenerator b (LGeneratorAccess;LIChunkAccess;)V buildNoise
ChunkGenerator b (LIChunkAccess;)LBiomeBase; getCarvingBiome
ChunkGenerator b (LRegionLimitedWorldAccess;)V addMobs
ChunkGenerator b seed
ChunkGenerator c ()LWorldChunkManager; getWorldChunkManager
ChunkGenerator c (LIChunkAccess;)V buildBase
ChunkGenerator d ()J getSeed
ChunkGenerator d settings
ChunkGenerator e ()I getGenerationDepth
ChunkGenerator f ()I getSeaLevel
ChunkMapDistance a ()V purgeTickets
ChunkMapDistance a (JLTicket;)V addTicket
ChunkMapDistance b (JLTicket;)V removeTicket
ChunkMapDistance c (LTicketType;LChunkCoordIntPair;ILjava/lang/Object;)V addTicket
ChunkMapDistance d (LTicketType;LChunkCoordIntPair;ILjava/lang/Object;)V removeTicket
ChunkMapDistance d tickets
ChunkMapDistance h pendingChunkUpdates
ChunkMapDistance n currentTick
ChunkProviderServer a (I)V setViewDistance
ChunkProviderServer a (J)LPlayerChunk; getChunk
ChunkProviderServer a (LEntity;LPacket;)V broadcastIncludingSelf
ChunkProviderServer a (LEntityPlayer;)V movePlayer
ChunkProviderServer a (LTicketType;LChunkCoordIntPair;ILjava/lang/Object;)V addTicket
ChunkProviderServer a (Ljava/util/function/BooleanSupplier;)V tick
ChunkProviderServer a (Z)V save
ChunkProviderServer a playerChunkMap
ChunkProviderServer b (II)Z isLoaded
ChunkProviderServer b (LBlockPosition;)V flagDirty
ChunkProviderServer b (LEntity;LPacket;)V broadcast
ChunkProviderServer b (LTicketType;LChunkCoordIntPair;ILjava/lang/Object;)V removeTicket
ChunkProviderServer c (IILChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; getChunkFutureMainThread
ChunkProviderServer c (LEntity;)V removeEntity
ChunkProviderServer d ()Z runTasks
ChunkProviderServer d (LEntity;)V addEntity
ChunkProviderServer d chunkMapDistance
ChunkProviderServer e chunkGenerator
ChunkProviderServer f world
ChunkProviderServer g serverThread
ChunkProviderServer h lightEngine
ChunkProviderServer i ()LWorldPersistentData; getWorldPersistentData
ChunkProviderServer i serverThreadQueue
ChunkProviderServer j worldPersistentData
ChunkProviderServer k lastTickTime
ChunkProviderServer l allowMonsters
ChunkProviderServer m ()V clearCache
ChunkProviderServer m allowAnimals
ChunkProviderServer n ()Z tickDistanceManager
ChunkProviderServer n cachePos
ChunkProviderServer o ()V tickChunks
ChunkProviderServer o cacheStatus
ChunkProviderServer p cacheChunk
ChunkRegionLoader a (LNBTTagCompound;LChunk;)V loadEntities
ChunkRegionLoader a (LWorldServer;LDefinedStructureManager;LVillagePlace;LChunkCoordIntPair;LNBTTagCompound;)LProtoChunk; loadChunk
ChunkRegionLoader a (LWorldServer;LIChunkAccess;)LNBTTagCompound; saveChunk
ChunkSection a (III)LIBlockData; getType
ChunkSection a (IIILIBlockData;)LIBlockData; setType
ChunkSection a (IIILIBlockData;Z)LIBlockData; setType
ChunkSection a GLOBAL_PALETTE
ChunkSection b yPos
ChunkSection c nonEmptyBlockCount
ChunkSection d tickingBlockCount
ChunkSection e ()Z shouldTick
ChunkSection f blockIds
ChunkSection g ()I getYPosition
ChunkSection h ()V recalcBlockCounts
ChunkSection i ()LDataPaletteBlock; getBlocks
ChunkStatus a EMPTY
ChunkStatus b STRUCTURE_STARTS
ChunkStatus c STRUCTURE_REFERENCES
ChunkStatus d BIOMES
ChunkStatus e NOISE
ChunkStatus f SURFACE
ChunkStatus g ()LChunkStatus$Type; getType
ChunkStatus g CARVERS
ChunkStatus h LIQUID_CARVERS
ChunkStatus i FEATURES
ChunkStatus j LIGHT
ChunkStatus k SPAWN
ChunkStatus l HEIGHTMAPS
ChunkStatus m FULL
ChunkStatus$Type a PROTOCHUNK
ChunkStatus$Type b LEVELCHUNK
Clearable L_ ()V clear
CombatTracker a (LDamageSource;FF)V trackDamage
CombatTracker b ()LIChatBaseComponent; getDeathMessage
CommandAdvancement$Action a GRANT
CommandAdvancement$Action b REVOKE
CommandAdvancement$Filter a ONLY
CommandAdvancement$Filter b THROUGH
CommandAdvancement$Filter c FROM
CommandAdvancement$Filter d UNTIL
CommandAdvancement$Filter e EVERYTHING
CommandBlockListenerAbstract a (Ljava/lang/String;)V setCommand
CommandBlockListenerAbstract b (LIChatBaseComponent;)V setName
CommandBlockListenerAbstract c lastExecution
CommandBlockListenerAbstract d updateLastExecution
CommandBlockListenerAbstract e successCount
CommandBlockListenerAbstract f trackOutput
CommandBlockListenerAbstract g lastOutput
CommandBlockListenerAbstract h ()LCommandListenerWrapper; getWrapper
CommandBlockListenerAbstract h command
CommandBlockListenerAbstract i customName
CommandBlockListenerAbstract k ()Ljava/lang/String; getCommand
CommandBlockListenerAbstract l ()LIChatBaseComponent; getName
CommandClone$Mode a FORCE
CommandClone$Mode b MOVE
CommandClone$Mode c NORMAL
CommandFill$Mode a REPLACE
CommandFill$Mode b OUTLINE
CommandFill$Mode c HOLLOW
CommandFill$Mode d DESTROY
CommandListenerWrapper a (LIChatBaseComponent;)V sendFailureMessage
CommandListenerWrapper a (LIChatBaseComponent;Z)V sendMessage
CommandListenerWrapper b ()LIChatBaseComponent; getScoreboardDisplayName
CommandListenerWrapper b (LIChatBaseComponent;)V sendAdminMessage
CommandListenerWrapper c ()Ljava/lang/String; getName
CommandListenerWrapper c base
CommandListenerWrapper d ()LVec3D; getPosition
CommandListenerWrapper e ()LWorldServer; getWorld
CommandListenerWrapper f ()LEntity; getEntity
CommandListenerWrapper j ()Lnet/minecraft/server/MinecraftServer; getServer
CommandSetBlock$Mode a REPLACE
CommandSetBlock$Mode b DESTROY
CommandXp$Unit a POINTS
CommandXp$Unit b LEVELS
Container a ()LContainers; getType
Container a (I)LSlot; getSlot
Container a (ILItemStack;)V setItem
Container a (LEntityHuman;)Z canUse
Container a (LICrafting;)V addSlotListener
Container a slots
Container b (LEntityHuman;I)LItemStack; shiftClick
Container b (LIInventory;I)LSlot; getSlot
Container b windowId
Container c items
Container g dragType
Container j listeners
ContainerAccess a (LWorld;LBlockPosition;)LContainerAccess; at
ContainerAnvil d resultInventory
ContainerAnvil e repairInventory
ContainerAnvil f levelCost
ContainerAnvil g containerAccess
ContainerAnvil i renameText
ContainerAnvil j player
ContainerBeacon c beacon
ContainerBeacon e containerAccess
ContainerBeacon f containerProperties
ContainerBrewingStand c brewingStand
ContainerCartography c inventory
ContainerCartography d containerAccess
ContainerCartography f resultInventory
ContainerChest c container
ContainerDispenser c items
ContainerEnchantTable c costs
ContainerEnchantTable d enchantments
ContainerEnchantTable e levels
ContainerEnchantTable f enchantSlots
ContainerEnchantTable g containerAccess
ContainerFurnace d furnace
ContainerGrindstone c resultInventory
ContainerGrindstone d craftInventory
ContainerGrindstone e containerAccess
ContainerHopper c hopper
ContainerLectern c inventory
ContainerLectern d containerProperties
ContainerLoom c containerAccess
ContainerLoom j craftInventory
ContainerLoom k resultInventory
ContainerMerchant c merchant
ContainerMerchant d inventoryMerchant
ContainerPlayer f craftInventory
ContainerPlayer g resultInventory
ContainerPlayer h owner
ContainerProperty a (I)V set
ContainerProperty b ()I get
ContainerStonecutter f inventory
ContainerStonecutter g containerAccess
ContainerStonecutter h containerProperty
ContainerStonecutter i world
ContainerStonecutter n resultInventory
ContainerWorkbench c craftInventory
ContainerWorkbench d resultInventory
ContainerWorkbench e containerAccess
Containers a GENERIC_9X1
Containers b GENERIC_9X2
Containers c GENERIC_9X3
Containers d GENERIC_9X4
Containers e GENERIC_9X5
Containers f GENERIC_9X6
Containers g GENERIC_3X3
Containers h ANVIL
Containers i BEACON
Containers j BLAST_FURNACE
Containers k BREWING_STAND
Containers l CRAFTING
Containers m ENCHANTMENT
Containers n FURNACE
Containers o GRINDSTONE
Containers p HOPPER
Containers q LECTERN
Containers r LOOM
Containers s MERCHANT
Containers t SHULKER_BOX
Containers u SMOKER
Containers v CARTOGRAPHY
Containers w STONECUTTER
ControllerJump a ()V jump
ControllerMove$Operation a WAIT
ControllerMove$Operation b MOVE_TO
ControllerMove$Operation c STRAFE
ControllerMove$Operation d JUMPING
Convertable a (Ljava/lang/String;)Z isConvertable
Convertable a (Ljava/lang/String;LIProgressUpdate;)Z convert
Counter a DECIMAL_FORMAT
Counter b DEFAULT
Counter c DIVIDE_BY_TEN
Counter d DISTANCE
Counter e TIME
CraftingManager a (LRecipes;LIInventory;LWorld;)Ljava/util/Optional; craft
CraftingManager c recipes
CriterionProgress d ()Ljava/util/Date; getDate
CustomFunctionData e ()V tick
CustomFunctionData f server
DamageSource a (LEntityArrow;LEntity;)LDamageSource; arrow
DamageSource a (LEntityFireball;LEntity;)LDamageSource; fireball
DamageSource a (LEntityHuman;)LDamageSource; playerAttack
DamageSource a (LEntityLiving;)LDamageSource; mobAttack
DamageSource a (LExplosion;)LDamageSource; explosion
DamageSource a FIRE
DamageSource b (LEntity;LEntity;)LDamageSource; projectile
DamageSource b LIGHTNING
DamageSource c (LEntityLiving;)LIChatBaseComponent; getLocalizedDeathMessage
DamageSource c BURN
DamageSource d ()Z isExplosion
DamageSource d LAVA
DamageSource e HOT_FLOOR
DamageSource f ()Z ignoresArmor
DamageSource f STUCK
DamageSource g ()F getExhaustionCost
DamageSource g CRAMMING
DamageSource h ()Z ignoresInvulnerability
DamageSource h DROWN
DamageSource i ()Z isStarvation
DamageSource i STARVE
DamageSource j CACTUS
DamageSource k ()LEntity; getEntity
DamageSource k FALL
DamageSource l ()LDamageSource; setIgnoreArmor
DamageSource l FLY_INTO_WALL
DamageSource m OUT_OF_WORLD
DamageSource n GENERIC
DamageSource o ()LDamageSource; setExplosion
DamageSource o MAGIC
DamageSource p WITHER
DamageSource q ANVIL
DamageSource r FALLING_BLOCK
DamageSource s DRAGON_BREATH
DamageSource t ()Z isMagic
DamageSource t FIREWORKS
DamageSource u ()LDamageSource; setMagic
DamageSource u DRYOUT
DamageSource v SWEET_BERRY_BUSH
DamageSource w translationIndex
DataConverterMaterialId a ID_MAPPING
DataConverterSpawnEgg a ID_MAPPING
DataConverterTypes b PLAYER
DataConverterTypes l ITEM_STACK
DataConverterTypes p ENTITY
DataFixTypes a LEVEL
DataFixTypes b PLAYER
DataFixTypes c CHUNK
DataFixTypes d HOTBAR
DataFixTypes e OPTIONS
DataFixTypes f STRUCTURE
DataFixTypes g STATS
DataFixTypes h SAVED_DATA
DataFixTypes i ADVANCEMENTS
DataFixTypes j POI_CHUNK
DataPaletteBlock a (IIILjava/lang/Object;)Ljava/lang/Object; setBlock
DataPaletteBlock b (ILjava/lang/Object;)V setBlockIndex
DataWatcher a (LDataWatcherObject;)Ljava/lang/Object; get
DataWatcher a (LDataWatcherObject;Ljava/lang/Object;)V register
DataWatcher b (LDataWatcherObject;Ljava/lang/Object;)V set
DataWatcher c (LDataWatcherObject;Ljava/lang/Object;)V registerObject
DataWatcher c entity
DataWatcher d entries
DataWatcher e lock
DedicatedPlayerList b ()LDedicatedServer; getServer
DedicatedServer a (Ljava/lang/String;LCommandListenerWrapper;)V issueCommand
DedicatedServer aX ()V handleCommandQueue
DedicatedServer ba ()Z convertNames
DedicatedServer bb ()J getMaxTickTime
DedicatedServer j serverCommandQueue
DedicatedServer k remoteStatusListener
DedicatedServer l remoteControlCommandListener
DedicatedServer m remoteControlListener
DedicatedServer n propertyManager
DedicatedServer o (Z)V setHasWhitelist
DedicatedServerProperties A resourcePackHash
DedicatedServerProperties B resourcePackSha1
DedicatedServerProperties C hardcore
DedicatedServerProperties D allowNether
DedicatedServerProperties E spawnMonsters
DedicatedServerProperties F snooperEnabled
DedicatedServerProperties G useNativeTransport
DedicatedServerProperties H enableCommandBlock
DedicatedServerProperties I spawnProtection
DedicatedServerProperties J opPermissionLevel
DedicatedServerProperties K functionPermissionLevel
DedicatedServerProperties L maxTickTime
DedicatedServerProperties M viewDistance
DedicatedServerProperties N maxPlayers
DedicatedServerProperties O networkCompressionThreshold
DedicatedServerProperties P broadcastRconToOps
DedicatedServerProperties Q broadcastConsoleToOps
DedicatedServerProperties R maxWorldSize
DedicatedServerProperties S playerIdleTimeout
DedicatedServerProperties T whiteList
DedicatedServerProperties a (Ljava/nio/file/Path;)LDedicatedServerProperties; load
DedicatedServerProperties a onlineMode
DedicatedServerProperties b preventProxyConnections
DedicatedServerProperties c serverIp
DedicatedServerProperties d spawnAnimals
DedicatedServerProperties e spawnNpcs
DedicatedServerProperties f pvp
DedicatedServerProperties g allowFlight
DedicatedServerProperties h resourcePack
DedicatedServerProperties i motd
DedicatedServerProperties j forceGamemode
DedicatedServerProperties k enforceWhitelist
DedicatedServerProperties l generateStructures
DedicatedServerProperties m difficulty
DedicatedServerProperties n gamemode
DedicatedServerProperties o levelName
DedicatedServerProperties p levelSeed
DedicatedServerProperties q levelType
DedicatedServerProperties r generatorSettings
DedicatedServerProperties s serverPort
DedicatedServerProperties t maxBuildHeight
DedicatedServerProperties u announcePlayerAchievements
DedicatedServerProperties v enableQuery
DedicatedServerProperties w queryPort
DedicatedServerProperties x enableRcon
DedicatedServerProperties y rconPort
DedicatedServerProperties z rconPassword
DedicatedServerSettings a ()LDedicatedServerProperties; getProperties
DedicatedServerSettings a (Ljava/util/function/UnaryOperator;)LDedicatedServerSettings; setProperty
DedicatedServerSettings a path
DedicatedServerSettings b ()V save
DedicatedServerSettings b properties
DimensionManager a (LWorld;)LWorldProvider; getWorldProvider
DimensionManager a (Ljava/lang/String;LDimensionManager;)LDimensionManager; register
DimensionManager a OVERWORLD
DimensionManager b ()I getDimensionID
DimensionManager b NETHER
DimensionManager c ()Ljava/lang/String; getSuffix
DimensionManager c THE_END
DimensionManager d ()Z hasSkyLight
DimensionManager d id
DimensionManager e suffix
DimensionManager f folder
DimensionManager g providerFactory
DimensionManager h hasSkyLight
DispenseBehaviorMaybe b dispensed
DispenseBehaviorProjectile b ()F getPower
DispenserRegistry a ()V init
DragonControllerManager a (LDragonControllerPhase;)V setControllerPhase
DragonControllerManager b enderDragon
DragonControllerManager c dragonControllers
DragonControllerManager d currentDragonController
DragonControllerPhase a (I)LDragonControllerPhase; getById
DragonControllerPhase a HOLDING_PATTERN
DragonControllerPhase b STRAFE_PLAYER
DragonControllerPhase c LANDING_APPROACH
DragonControllerPhase d LANDING
DragonControllerPhase e TAKEOFF
DragonControllerPhase f SITTING_FLAMING
DragonControllerPhase g SITTING_SCANNING
DragonControllerPhase h SITTING_ATTACKING
DragonControllerPhase i CHARGING_PLAYER
DragonControllerPhase j DYING
DragonControllerPhase k HOVER
Enchantment a ()I getMaxLevel
Enchantment a (LItemStack;)Z canEnchant
Enchantment b ()Z isTreasure
Enchantment b (LEnchantment;)Z isCompatible
Enchantment b itemTarget
Enchantment e ()I getStartLevel
Enchantment$Rarity a COMMON
Enchantment$Rarity b UNCOMMON
Enchantment$Rarity c RARE
Enchantment$Rarity d VERY_RARE
EnchantmentManager a (LEnchantment;LItemStack;)I getEnchantmentLevel
EnchantmentManager c (LEntityLiving;)I getFireAspectEnchantmentLevel
EnchantmentManager d (LEntityLiving;)I getOxygenEnchantmentLevel
EnchantmentManager e (LItemStack;)Z shouldNotDrop
EnchantmentManager f (LEntityLiving;)I getDigSpeedEnchantmentLevel
EnchantmentProtection$DamageType a ALL
EnchantmentProtection$DamageType b FIRE
EnchantmentProtection$DamageType c FALL
EnchantmentProtection$DamageType d EXPLOSION
EnchantmentProtection$DamageType e PROJECTILE
EnchantmentSlotType a (LItem;)Z canEnchant
EnchantmentSlotType a ALL
EnchantmentSlotType b ARMOR
EnchantmentSlotType c ARMOR_FEET
EnchantmentSlotType d ARMOR_LEGS
EnchantmentSlotType e ARMOR_CHEST
EnchantmentSlotType f ARMOR_HEAD
EnchantmentSlotType g WEAPON
EnchantmentSlotType h DIGGER
EnchantmentSlotType i FISHING_ROD
EnchantmentSlotType j TRIDENT
EnchantmentSlotType k BREAKABLE
EnchantmentSlotType l BOW
EnchantmentSlotType m WEARABLE
EnchantmentSlotType n CROSSBOW
Enchantments A LUCK
Enchantments B LURE
Enchantments C LOYALTY
Enchantments D IMPALING
Enchantments E RIPTIDE
Enchantments F CHANNELING
Enchantments G MULTISHOT
Enchantments H QUICK_CHARGE
Enchantments I PIERCING
Enchantments J MENDING
Enchantments K VANISHING_CURSE
Enchantments a PROTECTION_ENVIRONMENTAL
Enchantments b PROTECTION_FIRE
Enchantments c PROTECTION_FALL
Enchantments d PROTECTION_EXPLOSIONS
Enchantments e PROTECTION_PROJECTILE
Enchantments f OXYGEN
Enchantments g WATER_WORKER
Enchantments h THORNS
Enchantments i DEPTH_STRIDER
Enchantments j FROST_WALKER
Enchantments k BINDING_CURSE
Enchantments l DAMAGE_ALL
Enchantments m DAMAGE_UNDEAD
Enchantments n DAMAGE_ARTHROPODS
Enchantments o KNOCKBACK
Enchantments p FIRE_ASPECT
Enchantments q LOOT_BONUS_MOBS
Enchantments r SWEEPING
Enchantments s DIG_SPEED
Enchantments t SILK_TOUCH
Enchantments u DURABILITY
Enchantments v LOOT_BONUS_BLOCKS
Enchantments w ARROW_DAMAGE
Enchantments x ARROW_KNOCKBACK
Enchantments y ARROW_FIRE
Enchantments z ARROW_INFINITE
EnderDragonBattle c bossBattle
Entity A velocityChanged
Entity C dead
Entity G fallDistance
Entity L noclip
Entity N random
Entity O ticksLived
Entity P ()Z hasCustomName
Entity P inWater
Entity R ()V decouple
Entity S ()LEntityTypes; getEntityType
Entity S inLava
Entity T ()I getId
Entity T noDamageTicks
Entity U ()Ljava/util/Set; getScoreboardTags
Entity U justCreated
Entity V ()V killEntity
Entity V datawatcher
Entity W ()LDataWatcher; getDataWatcher
Entity X POSE
Entity Y ()V die
Entity Y inChunk
Entity Z ()LEntityPose; getPose
Entity Z chunkX
Entity a (DDD)V enderTeleportTo
Entity a (DDDFF)V setLocation
Entity a (FF)V setYawPitch
Entity a (LBlockPosition;FF)V setPositionRotation
Entity a (LCrashReportSystemDetails;)V appendEntityCrashDetails
Entity a (LDamageSource;F)Z damageEntity
Entity a (LEntityLightning;)V onLightningStrike
Entity a (LEntityPose;LEntitySize;)F getHeadHeight
Entity a (LEnumItemSlot;LItemStack;)V setEquipment
Entity a (LEnumMoveType;LVec3D;)V move
Entity a (LWorld;)V spawnIn
Entity a (Ljava/lang/String;)Z addScoreboardTag
Entity aD invulnerable
Entity aG ()V velocityChanged
Entity aH ()Z isInteractable
Entity aI ()Z isCollidable
Entity aI size
Entity aJ headHeight
Entity aK ()Ljava/lang/String; getSaveID
Entity aL ()Z isAlive
Entity aM ()Z inBlock
Entity aN ()V passengerTick
Entity aR ()V ejectPassengers
Entity aT ()LVec3D; getLookDirection
Entity aW ()V doPortalTick
Entity aa ()V entityBaseTick
Entity aa chunkY
Entity ab chunkZ
Entity ac ()V burnFromLava
Entity ae ()V extinguish
Entity ag impulse
Entity ah ()V recalcPosition
Entity ah portalCooldown
Entity ai ()LSoundEffect; getSoundSwim
Entity aj ()LSoundEffect; getSoundSplash
Entity ak ()LSoundEffect; getSoundSplashHighSpeed
Entity ak dimension
Entity al ()V checkBlockCollisions
Entity an ()Z isSilent
Entity ao ()Z isNoGravity
Entity ao uniqueID
Entity ap ()Z playStepSound
Entity aq glowing
Entity ar ()Z isFireProof
Entity ar passengers
Entity as ()Z isInWater
Entity as vehicle
Entity at ()Z isInWaterOrRain
Entity at mot
Entity au boundingBox
Entity ax fireTicks
Entity ay AIR_TICKS
Entity b (DDDFF)V setPositionRotation
Entity b (IZ)V setFlag
Entity b (LDamageSource;)Z isInvulnerable
Entity b (LEntityHuman;)V pickup
Entity b (LEntityPose;)V setPose
Entity b (LIChatBaseComponent;)V setCustomName
Entity b (Ljava/lang/String;)Z removeScoreboardTag
Entity b entityCount
Entity bB ()Ljava/util/UUID; getUniqueID
Entity bC ()Ljava/lang/String; getUniqueIDString
Entity bD ()Ljava/lang/String; getName
Entity bG ()Z getCustomNameVisible
Entity bI ()LEnumDirection; getDirection
Entity bJ ()LEnumDirection; getAdjustedDirection
Entity bL ()LAxisAlignedBB; getBoundingBox
Entity bN ()F getHeadHeight
Entity bO ()LBlockPosition; getChunkCoordinates
Entity bQ ()LWorld; getWorld
Entity bR ()Lnet/minecraft/server/MinecraftServer; getMinecraftServer
Entity bV ()LEntity; getRidingPassenger
Entity bW ()Ljava/util/List; getPassengers
Entity bX ()Ljava/util/Collection; getAllPassengers
Entity bY ()Z hasSinglePlayerPassenger
Entity bZ ()LEntity; getRootVehicle
Entity ba ()Ljava/lang/Iterable; getArmorItems
Entity bc ()Z isBurning
Entity bd ()Z isPassenger
Entity be ()Z isVehicle
Entity bg ()Z isSneaking
Entity bi ()Z isSprinting
Entity bj ()Z isSwimming
Entity bn ()Z isInvisible
Entity bo ()LScoreboardTeamBase; getScoreboardTeam
Entity bq ()I getAirTicks
Entity br ()F getHeadRotation
Entity bt ()Z isInvulnerable
Entity bu ()Z canPortal
Entity bx ()LVec3D; getPortalOffset
Entity by ()LEnumDirection; getPortalDirection
Entity bz ()Z isIgnoreBlockTrigger
Entity c (DDD)V setPosition
Entity c (Z)V setSilent
Entity cb ()LEntity; getVehicle
Entity cc ()LSoundCategory; getSoundCategory
Entity cd ()I getMaxFireTicks
Entity ce ()LCommandListenerWrapper; getCommandListener
Entity cg ()F getWidth
Entity ch ()F getHeight
Entity ci ()LVec3D; getPositionVector
Entity cj ()LVec3D; getMot
Entity d ()LIChatBaseComponent; getScoreboardDisplayName
Entity d (LVec3D;)V setMot
Entity d (Z)V setNoGravity
Entity e (LNBTTagCompound;)LNBTTagCompound; save
Entity e (Z)V setSneaking
Entity f (I)V setOnFire
Entity f (Z)V setSprinting
Entity g (Z)V setSwimming
Entity g id
Entity h ()V tick
Entity h (I)V burn
Entity i (I)Z getFlag
Entity i (LEntity;)V collide
Entity i (Z)V setInvisible
Entity j ()V stopRiding
Entity j (DDD)V enderTeleportAndLoad
Entity j (I)V setAirTicks
Entity k ()Z isInRain
Entity k (DDD)V setMot
Entity k (F)V setHeadRotation
Entity k attachedToPlayer
Entity l (Z)V setInvulnerable
Entity l world
Entity m (LEntity;)Z startRiding
Entity m (Z)V setCustomNameVisible
Entity m lastX
Entity n lastY
Entity o (LEntity;)V addPassenger
Entity o lastZ
Entity p (LEntity;)V removePassenger
Entity p locX
Entity q locY
Entity r locZ
Entity s yaw
Entity t ()Z isSpectator
Entity t pitch
Entity u lastYaw
Entity u_ ()V initDatawatcher
Entity v lastPitch
Entity w onGround
Entity x positionChanged
Entity x_ ()V updateSize
Entity y_ ()LEnumPistonReaction; getPushReaction
EntityAgeable a (I)V setAge
EntityAgeable a (IZ)V setAge
EntityAgeable a (LEntityAgeable;)LEntityAgeable; createChild
EntityAgeable b_ (I)V setAgeRaw
EntityAgeable i ()I getAge
EntityAnimal a (LDamageSource;F)Z damageEntity
EntityAnimal a (LEntityAnimal;)Z mate
EntityAnimal bA breedCause
EntityAnimal bz loveTicks
EntityAnimal d (LEntityHuman;)I getExpValue
EntityAnimal eb ()LEntityPlayer; getBreedCause
EntityAnimal ec ()Z isInLove
EntityAnimal ed ()V resetLove
EntityAnimal r (I)V setLoveTicks
EntityAreaEffectCloud a (F)V setRadius
EntityAreaEffectCloud a (I)V setColor
EntityAreaEffectCloud a (LEntityLiving;)V setSource
EntityAreaEffectCloud a (LMobEffect;)V addEffect
EntityAreaEffectCloud a (LParticleParam;)V setParticle
EntityAreaEffectCloud ar effects
EntityAreaEffectCloud as affectedEntities
EntityAreaEffectCloud au waitTime
EntityAreaEffectCloud av reapplicationDelay
EntityAreaEffectCloud aw hasColor
EntityAreaEffectCloud ax durationOnUse
EntityAreaEffectCloud ay radiusOnUse
EntityAreaEffectCloud az radiusPerTick
EntityAreaEffectCloud b (F)V setRadiusOnUse
EntityAreaEffectCloud b (I)V setDuration
EntityAreaEffectCloud c (F)V setRadiusPerTick
EntityAreaEffectCloud d (I)V setWaitTime
EntityAreaEffectCloud d COLOR
EntityAreaEffectCloud f ()F getRadius
EntityAreaEffectCloud g potionRegistry
EntityAreaEffectCloud i ()I getColor
EntityAreaEffectCloud k ()LParticleParam; getParticle
EntityAreaEffectCloud m ()I getDuration
EntityAreaEffectCloud u ()LEntityLiving; getSource
EntityArmorStand a (LVector3f;)V setHeadPose
EntityArmorStand b (LVector3f;)V setBodyPose
EntityArmorStand bB handItems
EntityArmorStand bC armorItems
EntityArmorStand bF headPose
EntityArmorStand bG bodyPose
EntityArmorStand bH leftArmPose
EntityArmorStand bI rightArmPose
EntityArmorStand bJ leftLegPose
EntityArmorStand bK rightLegPose
EntityArmorStand c (LVector3f;)V setLeftArmPose
EntityArmorStand d (LVector3f;)V setRightArmPose
EntityArmorStand e (LVector3f;)V setLeftLegPose
EntityArmorStand f (LVector3f;)V setRightLegPose
EntityArmorStand l ()Z isSmall
EntityArmorStand n ()Z hasArms
EntityArmorStand n (Z)V setSmall
EntityArmorStand o ()Z hasBasePlate
EntityArmorStand o (Z)V setArms
EntityArmorStand p ()Z isMarker
EntityArmorStand p (Z)V setBasePlate
EntityArmorStand q (Z)V setMarker
EntityArrow a (I)V setKnockbackStrength
EntityArrow a (LEntity;)V setShooter
EntityArrow a (Z)V setCritical
EntityArrow au despawnCounter
EntityArrow aw damage
EntityArrow ax knockbackStrength
EntityArrow b (B)V setPierceLevel
EntityArrow c (D)V setDamage
EntityArrow c inGround
EntityArrow e fromPlayer
EntityArrow f shake
EntityArrow g shooter
EntityArrow l ()LSoundEffect; getSoundHit
EntityArrow m ()LEntity; getShooter
EntityArrow n ()LItemStack; getItemStack
EntityArrow o ()D getDamage
EntityArrow q ()Z isCritical
EntityArrow s ()B getPierceLevel
EntityArrow$PickupStatus a DISALLOWED
EntityArrow$PickupStatus b ALLOWED
EntityArrow$PickupStatus c CREATIVE_ONLY
EntityBat l ()Z isAsleep
EntityBat r (Z)V setAsleep
EntityBoat a (F)V setDamage
EntityBoat a (LEntityBoat$EnumBoatType;)V setType
EntityBoat m ()F getDamage
EntityBoat p ()LEntityBoat$EnumBoatType; getType
EntityBoat$EnumBoatType a OAK
EntityBoat$EnumBoatType b SPRUCE
EntityBoat$EnumBoatType c BIRCH
EntityBoat$EnumBoatType d JUNGLE
EntityBoat$EnumBoatType e ACACIA
EntityBoat$EnumBoatType f DARK_OAK
EntityBoat$EnumStatus a IN_WATER
EntityBoat$EnumStatus b UNDER_WATER
EntityBoat$EnumStatus c UNDER_FLOWING_WATER
EntityBoat$EnumStatus d ON_LAND
EntityBoat$EnumStatus e IN_AIR
EntityCat a (LEnumColor;)V setCollarColor
EntityCat ef ()I getCatType
EntityCat ei ()LEnumColor; getCollarColor
EntityCat s (I)V setCatType
EntityCat$PathfinderGoalTemptChance c chosenTarget
EntityChicken bE eggLayTime
EntityChicken dV ()Z isChickenJockey
EntityComplexPart b owner
EntityCreeper bA fuseTicks
EntityCreeper bB maxFuseTicks
EntityCreeper bC explosionRadius
EntityCreeper c POWERED
EntityCreeper dW ()Z isIgnited
EntityCreeper dX ()V ignite
EntityCreeper dY ()Z canCauseHeadDrop
EntityCreeper dZ ()V setCausedHeadDrop
EntityCreeper ea ()V explode
EntityCreeper ec ()V createEffectCloud
EntityCreeper l ()Z isPowered
EntityDamageSource c (LEntityLiving;)LIChatBaseComponent; getLocalizedDeathMessage
EntityDamageSource k ()LEntity; getEntity
EntityDamageSourceIndirect y owner
EntityEnderCrystal a (LBlockPosition;)V setBeamTarget
EntityEnderCrystal a (Z)V setShowingBottom
EntityEnderCrystal f ()LBlockPosition; getBeamTarget
EntityEnderCrystal i ()Z isShowingBottom
EntityEnderDragon b PHASE
EntityEnderDragon bM currentEnderCrystal
EntityEnderDragon bz children
EntityEnderDragon dU ()LDragonControllerManager; getDragonControllerManager
EntityEnderDragon dV ()LEnderDragonBattle; getEnderDragonBattle
EntityEnderDragon e (LDamageSource;F)Z dealDamage
EntityEnderSignal c targetX
EntityEnderSignal d targetY
EntityEnderSignal e targetZ
EntityEnderSignal f despawnTimer
EntityEnderSignal g shouldDropItem
EntityEnderman b (LIBlockData;)V setCarried
EntityEnderman dW ()LIBlockData; getCarried
EntityEnderman$PathfinderGoalEndermanPickupBlock a enderman
EntityEndermite l ()Z isPlayerSpawned
EntityEndermite r (Z)V setPlayerSpawned
EntityEvokerFangs f ()LEntityLiving; getOwner
EntityExperienceOrb a (I)I getOrbValue
EntityExperienceOrb ar targetTime
EntityExperienceOrb f value
EntityExperienceOrb g targetPlayer
EntityFallingBlock ar hurtEntities
EntityFallingBlock as fallHurtMax
EntityFallingBlock at fallHurtAmount
EntityFallingBlock b ticksLived
EntityFallingBlock c dropItem
EntityFallingBlock d tileEntityData
EntityFallingBlock f block
EntityFallingBlock k ()LIBlockData; getBlock
EntityFireball b shooter
EntityFireball c dirX
EntityFireball d dirY
EntityFireball e dirZ
EntityFireworks b FIREWORK_ITEM
EntityFireworks e ticksFlown
EntityFireworks f expectedLifespan
EntityFireworks g ridingEntity
EntityFireworks k ()V explode
EntityFish b FROM_BUCKET
EntityFish dW ()LSoundEffect; getSoundFlop
EntityFish dX ()Z isFromBucket
EntityFish r (Z)V setFromBucket
EntityFishingHook b hooked
EntityFishingHook d isInGround
EntityFishingHook f ()V reel
EntityFishingHook f owner
EntityFishingHook$HookState a FLYING
EntityFishingHook$HookState b HOOKED_IN_ENTITY
EntityFishingHook$HookState c BOBBING
EntityFox a (LEntityFox$Type;)V setFoxType
EntityFox dV ()LEntityFox$Type; getFoxType
EntityFox dW ()Z isSitting
EntityFox ef ()Z isCrouching
EntityFox ej ()V initializePathFinderGoals
EntityFox r (Z)V setSitting
EntityFox t (Z)V setCrouching
EntityFox x (Z)V setSleeping
EntityFox$Type a RED
EntityFox$Type b SNOW
EntityGhast dT ()I getPower
EntityGhast$PathfinderGoalGhastAttackTarget b ghast
EntityGuardian bC goalRandomStroll
EntityGuardian dW ()LSoundEffect; getSoundFlop
EntityHanging a (LDamageSource;F)Z damageEntity
EntityHanging a (LEnumDirection;)V setDirection
EntityHanging c blockPosition
EntityHanging d direction
EntityHanging f ()V updateBoundingBox
EntityHanging i ()Z survives
EntityHanging k ()I getHangingWidth
EntityHanging l ()I getHangingHeight
EntityHanging m ()V playPlaceSound
EntityHanging n ()LBlockPosition; getBlockPosition
EntityHorse dY ()I getVariant
EntityHorse v (I)V setVariant
EntityHorseAbstract b (Ljava/util/UUID;)V setOwnerUUID
EntityHorseAbstract bD inventoryChest
EntityHorseAbstract bF jumpPower
EntityHorseAbstract bP canSlide
EntityHorseAbstract bz attributeJumpStrength
EntityHorseAbstract dW ()I getChestSlots
EntityHorseAbstract dX ()LSoundEffect; getSoundAngry
EntityHorseAbstract ef ()Z isTamed
EntityHorseAbstract eg ()Ljava/util/UUID; getOwnerUUID
EntityHorseAbstract ek ()Z hasReproduced
EntityHorseAbstract el ()I getTemper
EntityHorseAbstract em ()V loadChest
EntityHorseAbstract eo ()D getJumpStrength
EntityHorseAbstract er ()I getMaxDomestication
EntityHorseAbstract s (Z)V setTamed
EntityHorseAbstract t (I)V setTemper
EntityHorseAbstract x (Z)V setStanding
EntityHorseChestedAbstract dV ()Z isCarryingChest
EntityHorseChestedAbstract r (Z)V setCarryingChest
EntityHuman a (ILMerchantRecipeList;IIZZ)V openTrade
EntityHuman a (LBlockPosition;)Lcom/mojang/datafixers/util/Either; sleep
EntityHuman a (LEntityHorseAbstract;LIInventory;)V openHorseInventory
EntityHuman a (LITileInventory;)Ljava/util/OptionalInt; openContainer
EntityHuman a (LIWorldReader;LBlockPosition;Z)Ljava/util/Optional; getBed
EntityHuman a (LItemStack;I)V enchantDone
EntityHuman a (LItemStack;LEnumHand;)V openBook
EntityHuman a (LItemStack;Z)LEntityItem; drop
EntityHuman a (LTileEntitySign;)V openSign
EntityHuman a (Ljava/util/Collection;)I discoverRecipes
EntityHuman a (ZZZ)V wakeup
EntityHuman b (LBlockPosition;Z)V setRespawnPosition
EntityHuman b (Ljava/util/Collection;)I undiscoverRecipes
EntityHuman bA activeContainer
EntityHuman bB foodData
EntityHuman bN abilities
EntityHuman bO expLevel
EntityHuman bP expTotal
EntityHuman bQ exp
EntityHuman bT hookedFish
EntityHuman bx inventory
EntityHuman by enderChest
EntityHuman bz defaultContainer
EntityHuman c (I)V levelDown
EntityHuman c (LIBlockData;)Z hasBlock
EntityHuman c (Ljava/lang/String;)Ljava/util/UUID; getOfflineUUID
EntityHuman d (I)V giveExp
EntityHuman dC ()I getScore
EntityHuman dD ()V removeCursedItems
EntityHuman dH ()Lcom/mojang/authlib/GameProfile; getProfile
EntityHuman dI ()Z isDeeplySleeping
EntityHuman dK ()LBlockPosition; getBed
EntityHuman dL ()Z isRespawnForced
EntityHuman dN ()I getExpToLevel
EntityHuman dO ()LFoodMetaData; getFoodData
EntityHuman dR ()LInventoryEnderChest; getEnderChest
EntityHuman dS ()V releaseShoulderEntities
EntityHuman dT ()LScoreboard; getScoreboard
EntityHuman dW ()LNBTTagCompound; getShoulderEntityLeft
EntityHuman dX ()LNBTTagCompound; getShoulderEntityRight
EntityHuman ea ()LItemCooldown; getCooldownTracker
EntityHuman ec ()Z isCreativeAndOp
EntityHuman f (LEntity;)V attack
EntityHuman f sleepTicks
EntityHuman h (LNBTTagCompound;)V setShoulderEntityLeft
EntityHuman i (LNBTTagCompound;)V setShoulderEntityRight
EntityHuman k (LNBTTagCompound;)V spawnEntityFromShoulder
EntityHuman l (DDD)V checkMovement
EntityHuman r ()V updateAbilities
EntityHuman r (F)V applyExhaustion
EntityHuman r (I)V setScore
EntityHuman s (I)V addScore
EntityHuman t_ ()V closeInventory
EntityHuman u ()Z isCreative
EntityHuman$EnumBedResult a NOT_POSSIBLE_HERE
EntityHuman$EnumBedResult b NOT_POSSIBLE_NOW
EntityHuman$EnumBedResult c TOO_FAR_AWAY
EntityHuman$EnumBedResult d OBSTRUCTED
EntityHuman$EnumBedResult e OTHER_PROBLEM
EntityHuman$EnumBedResult f NOT_SAFE
EntityIllagerWizard a (LEntityIllagerWizard$Spell;)V setSpell
EntityIllagerWizard dW ()LSoundEffect; getSoundCastSpell
EntityIllagerWizard eg ()LEntityIllagerWizard$Spell; getSpell
EntityIllagerWizard$Spell a NONE
EntityIllagerWizard$Spell b SUMMON_VEX
EntityIllagerWizard$Spell c FANGS
EntityIllagerWizard$Spell d WOLOLO
EntityIllagerWizard$Spell e DISAPPEAR
EntityIllagerWizard$Spell f BLINDNESS
EntityInsentient D ()V doSpawnEffect
EntityInsentient G ()LSoundEffect; getSoundAmbient
EntityInsentient H ()LMinecraftKey; getDefaultLootTable
EntityInsentient J ()V checkDespawn
EntityInsentient L ()V mobTick
EntityInsentient a (LGeneratorAccess;LDifficultyDamageScaler;LEnumMobSpawn;LGroupDataEntity;LNBTTagCompound;)LGroupDataEntity; prepare
EntityInsentient a (ZZ)V unleash
EntityInsentient b (LEntity;Z)V setLeashHolder
EntityInsentient bC canPickUpLoot
EntityInsentient bD persistent
EntityInsentient bF lootTableKey
EntityInsentient bG lootTableSeed
EntityInsentient bH leashHolder
EntityInsentient bs moveController
EntityInsentient bu navigation
EntityInsentient bv goalSelector
EntityInsentient bw targetSelector
EntityInsentient bx dropChanceHand
EntityInsentient by dropChanceArmor
EntityInsentient c (D)Z isTypeNotPersistent
EntityInsentient d (LEntityHuman;)I getExpValue
EntityInsentient d goalTarget
EntityInsentient dE ()V setPersistent
EntityInsentient dF ()Z canPickupLoot
EntityInsentient dG ()Z isPersistent
EntityInsentient dN ()Z isLeashed
EntityInsentient dO ()LEntity; getLeashHolder
EntityInsentient dP ()Z isNoAI
EntityInsentient dQ ()Z isLeftHanded
EntityInsentient g (LEntityLiving;)V setGoalTarget
EntityInsentient g lookController
EntityInsentient n ()V initPathfinder
EntityInsentient n (Z)V setCanPickupLoot
EntityInsentient o (Z)V setNoAI
EntityInsentient p ()LControllerLook; getControllerLook
EntityInsentient r ()LControllerMove; getControllerMove
EntityInsentient s ()LControllerJump; getControllerJump
EntityInsentient u ()LNavigationAbstract; getNavigation
EntityInsentient v ()LEntitySenses; getEntitySenses
EntityInsentient w ()LEntityLiving; getGoalTarget
EntityInsentient z ()V blockEaten
EntityIronGolem dW ()Z isPlayerCreated
EntityIronGolem s (Z)V setPlayerCreated
EntityItem a (I)V setPickupDelay
EntityItem ar owner
EntityItem b (LItemStack;)V setItemStack
EntityItem b (Ljava/util/UUID;)V setOwner
EntityItem c (Ljava/util/UUID;)V setThrower
EntityItem c ITEM
EntityItem d age
EntityItem e pickupDelay
EntityItem g thrower
EntityItem i ()LItemStack; getItemStack
EntityItem k ()Ljava/util/UUID; getOwner
EntityItem l ()Ljava/util/UUID; getThrower
EntityItem n ()V defaultPickupDelay
EntityItem w ()V mergeNearby
EntityItemFrame a (I)V setRotation
EntityItemFrame a (IZ)V setRotation
EntityItemFrame a (LItemStack;Z)V setItem
EntityItemFrame b (LItemStack;)V setItem
EntityItemFrame f ITEM
EntityItemFrame o ()LItemStack; getItem
EntityItemFrame p ()I getRotation
EntityLargeFireball f yield
EntityLightning c lifeTicks
EntityLiving E (LEntity;)Z hasLineOfSight
EntityLiving a (LDamageSource;)V die
EntityLiving a (LDamageSource;F)Z damageEntity
EntityLiving a (LDamageSource;IZ)V dropDeathLoot
EntityLiving a (LEntity;I)V receive
EntityLiving a (LEntityLiving;)V setLastDamager
EntityLiving a (LEnumItemSlot;LItemStack;)V setSlot
EntityLiving a (LIAttribute;)LAttributeInstance; getAttributeInstance
EntityLiving a (LMobEffectList;)Z hasEffect
EntityLiving aA deathTicks
EntityLiving aH maxNoDamageTicks
EntityLiving aP killer
EntityLiving aQ lastDamageByPlayerTime
EntityLiving aR killed
EntityLiving aS ticksFarFromPlayer
EntityLiving aZ lastDamage
EntityLiving a_ (Z)V setJumping
EntityLiving ax hurtTicks
EntityLiving ay hurtDuration
EntityLiving b (F)V heal
EntityLiving b (LDamageSource;F)F applyArmorModifier
EntityLiving b (LEnumItemSlot;)LItemStack; getEquipment
EntityLiving b (LMobEffectList;)LMobEffect; getEffect
EntityLiving bA hurtTimestamp
EntityLiving bE jumpTicks
EntityLiving ba jumping
EntityLiving bn activeItem
EntityLiving bt attributeMap
EntityLiving bu combatTracker
EntityLiving bv effects
EntityLiving by updateEffects
EntityLiving bz lastDamager
EntityLiving c (F)V setHealth
EntityLiving c (LDamageSource;F)F applyMagicModifier
EntityLiving c (LMobEffect;)Z addEffect
EntityLiving cA ()Ljava/util/Collection; getEffects
EntityLiving cD ()F getHealth
EntityLiving cH ()LSoundEffect; getSoundDeath
EntityLiving cJ ()I getArmorStrength
EntityLiving cK ()LCombatTracker; getCombatTracker
EntityLiving cL ()LEntityLiving; getKillingEntity
EntityLiving cM ()F getMaxHealth
EntityLiving cN ()I getArrowCount
EntityLiving cP ()LAttributeMapBase; getAttributeMap
EntityLiving cQ ()LEnumMonsterType; getMonsterType
EntityLiving cR ()LItemStack; getItemInMainHand
EntityLiving cS ()LItemStack; getItemInOffHand
EntityLiving cU ()F getSoundVolume
EntityLiving cW ()Z isFrozen
EntityLiving cY ()V jump
EntityLiving ck ()LBehaviorController; getBehaviorController
EntityLiving cl ()V initAttributes
EntityLiving cp ()Z isDropExperience
EntityLiving cq ()Z alwaysGivesExp
EntityLiving cr ()Ljava/util/Random; getRandom
EntityLiving cs ()LEntityLiving; getLastDamager
EntityLiving cx ()V tickPotionEffects
EntityLiving cz ()Z removeAllEffects
EntityLiving d (LDamageSource;F)V damageEntity0
EntityLiving d (LEntityHuman;)I getExpValue
EntityLiving d (LEntityLiving;)V shieldBlock
EntityLiving d (LMobEffectList;)Z removeEffect
EntityLiving d HEALTH
EntityLiving dc ()V doTick
EntityLiving dd ()V collideNearby
EntityLiving de ()Z isRiptiding
EntityLiving dg ()F getAbsorptionHearts
EntityLiving di ()LEnumMainHand; getMainHand
EntityLiving dj ()Z isHandRaised
EntityLiving dk ()LEnumHand; getRaisedHand
EntityLiving do ()V clearActiveItem
EntityLiving dq ()Z isBlocking
EntityLiving dr ()Z isGliding
EntityLiving dv ()Ljava/util/Optional; getBedPosition
EntityLiving dx ()Z isSleeping
EntityLiving e ()V enterCombat
EntityLiving e (LDamageSource;)LSoundEffect; getSoundHurt
EntityLiving f ()V exitCombat
EntityLiving g (LDamageSource;)Z applyBlockingModifier
EntityLiving k ()V movementTick
EntityLiving m (F)V damageArmor
EntityLiving n (F)V damageShield
EntityLiving o (I)LSoundEffect; getSoundFall
EntityLiving p (I)V setArrowCount
EntityLiving q (F)V setAbsorptionHearts
EntityLiving v_ ()Z isBaby
EntityLiving w_ ()Z isClimbing
EntityLlama eC ()I getStrength
EntityLlama eD ()I getVariant
EntityLlama v (I)V setVariant
EntityLlama w (I)V setStrength
EntityLlamaSpit b shooter
EntityMinecartAbstract a (F)V setDamage
EntityMinecartAbstract b (LIBlockData;)V setDisplayBlock
EntityMinecartAbstract f ()D getMaxSpeed
EntityMinecartAbstract k ()V decelerate
EntityMinecartAbstract l ()F getDamage
EntityMinecartAbstract l (I)V setDisplayBlockOffset
EntityMinecartAbstract m ()I getType
EntityMinecartAbstract o ()LEntityMinecartAbstract$EnumMinecartType; getMinecartType
EntityMinecartAbstract p ()LIBlockData; getDisplayBlock
EntityMinecartAbstract r ()I getDisplayBlockOffset
EntityMinecartAbstract$EnumMinecartType a RIDEABLE
EntityMinecartAbstract$EnumMinecartType b CHEST
EntityMinecartAbstract$EnumMinecartType c FURNACE
EntityMinecartAbstract$EnumMinecartType d TNT
EntityMinecartAbstract$EnumMinecartType e SPAWNER
EntityMinecartAbstract$EnumMinecartType f HOPPER
EntityMinecartAbstract$EnumMinecartType g COMMAND_BLOCK
EntityMinecartCommandBlock b COMMAND
EntityMinecartCommandBlock v ()LCommandBlockListenerAbstract; getCommandBlock
EntityMinecartContainer a (LMinecraftKey;J)V setLootTable
EntityMinecartContainer b items
EntityMinecartContainer d lootTable
EntityMinecartContainer e lootTableSeed
EntityMinecartHopper m (I)V setCooldown
EntityMinecartHopper n (Z)V setEnabled
EntityMinecartHopper v ()Z isEnabled
EntityMonster a (LDamageSource;F)Z damageEntity
EntityMonsterPatrolling b patrolTarget
EntityMonsterPatrolling c patrolLeader
EntityMonsterPatrolling d patrolling
EntityMonsterPatrolling dY ()LBlockPosition; getPatrolTarget
EntityMonsterPatrolling ea ()Z isPatrolLeader
EntityMonsterPatrolling ee ()Z isPatrolling
EntityMonsterPatrolling g (LBlockPosition;)V setPatrolTarget
EntityMonsterPatrolling r (Z)V setPatrolLeader
EntityMushroomCow a (LEntityMushroomCow$Type;)V setVariant
EntityMushroomCow dV ()LEntityMushroomCow$Type; getVariant
EntityMushroomCow$Type a RED
EntityMushroomCow$Type b BROWN
EntityOcelot dX ()Z isTrusting
EntityOcelot r (Z)V setTrusting
EntityPainting e art
EntityPanda a (LEntityPanda$Gene;)V setMainGene
EntityPanda b (LEntityPanda$Gene;)V setHiddenGene
EntityPanda bP PICKUP_PREDICATE
EntityPanda ef ()LEntityPanda$Gene; getMainGene
EntityPanda eg ()LEntityPanda$Gene; getHiddenGene
EntityPanda$Gene a NORMAL
EntityPanda$Gene b LAZY
EntityPanda$Gene c ()Z isRecessive
EntityPanda$Gene c WORRIED
EntityPanda$Gene d PLAYFUL
EntityPanda$Gene e BROWN
EntityPanda$Gene f WEAK
EntityPanda$Gene g AGGRESSIVE
EntityParrot ef ()I getVariant
EntityParrot s (I)V setVariant
EntityPhantom a (I)V setSize
EntityPhantom l ()I getSize
EntityPhantom$AttackPhase a CIRCLE
EntityPhantom$AttackPhase b SWOOP
EntityPig dV ()Z hasSaddle
EntityPig r (Z)V setSaddle
EntityPigZombie bA soundDelay
EntityPigZombie bB hurtBy
EntityPigZombie bz angerLevel
EntityPillager bz inventory
EntityPillager ef ()LInventorySubcontainer; getInventory
EntityPlayer A ()LServerStatisticManager; getStatisticManager
EntityPlayer D ()LEntity; getSpecatorTarget
EntityPlayer G ()LIChatBaseComponent; getPlayerListName
EntityPlayer L ()LAdvancementDataPlayer; getAdvancementData
EntityPlayer a (LContainer;)V updateInventory
EntityPlayer a (LEntityPlayer;Z)V copyFrom
EntityPlayer a (Ljava/lang/String;Ljava/lang/String;)V setResourcePack
EntityPlayer b playerConnection
EntityPlayer bV locale
EntityPlayer bW removeQueue
EntityPlayer bX advancementDataPlayer
EntityPlayer bY serverStatisticManager
EntityPlayer bZ lastHealthScored
EntityPlayer c server
EntityPlayer ca lastFoodScored
EntityPlayer cb lastAirScored
EntityPlayer cc lastArmorScored
EntityPlayer cd lastExpLevelScored
EntityPlayer ce lastExpTotalScored
EntityPlayer cf lastHealthSent
EntityPlayer cg lastFoodSent
EntityPlayer ch lastSentSaturationZero
EntityPlayer ci lastSentExp
EntityPlayer cj invulnerableTicks
EntityPlayer cn spectatedEntity
EntityPlayer co worldChangeInvuln
EntityPlayer cq recipeBook
EntityPlayer cw containerCounter
EntityPlayer d playerInteractManager
EntityPlayer e (LEntity;)V setSpectatorTarget
EntityPlayer ed ()Z canPvP
EntityPlayer ee ()V nextContainerCounter
EntityPlayer f ping
EntityPlayer g viewingCredits
EntityPlayer i ()V playerTick
EntityPlayer l ()V broadcastCarriedItem
EntityPlayer p ()V triggerHealthUpdate
EntityPlayer s ()LWorldServer; getWorldServer
EntityPlayer s_ ()V syncInventory
EntityPlayer x ()LEnumChatVisibility; getChatFlags
EntityPlayer z ()V resetIdleTimer
EntityPose a STANDING
EntityPose b FALL_FLYING
EntityPose c SLEEPING
EntityPose d SWIMMING
EntityPose e SPIN_ATTACK
EntityPose f SNEAKING
EntityPose g DYING
EntityPositionTypes$Surface a ON_GROUND
EntityPositionTypes$Surface b IN_WATER
EntityPositionTypes$Surface c NO_RESTRICTIONS
EntityPotion b (LItemStack;)V setItem
EntityPotion f ()LItemStack; getItem
EntityPotion i ()V splash
EntityPotion k ()Z isLingering
EntityProjectile ar shooterId
EntityProjectile b inGround
EntityProjectile c shake
EntityProjectile d shooter
EntityProjectile e blockX
EntityProjectile f blockY
EntityProjectile g blockZ
EntityProjectile m ()LEntityLiving; getShooter
EntityProjectileThrowable b (LItemStack;)V setItem
EntityProjectileThrowable k ()LItemStack; getItem
EntityPufferFish b (I)V setPuffState
EntityPufferFish dX ()I getPuffState
EntityRabbit dW ()LSoundEffect; getSoundJump
EntityRabbit dX ()I getRabbitType
EntityRabbit s (I)V setRabbitType
EntityRabbit$PathfinderGoalEatCarrots g entity
EntitySelector b (LCommandListenerWrapper;)Ljava/util/List; getEntities
EntitySelector m checkPermissions
EntitySheep b (LEnumColor;)V setColor
EntitySheep dV ()V shear
EntitySheep dW ()LEnumColor; getColor
EntitySheep dX ()Z isSheared
EntitySheep r (Z)V setSheared
EntityShulker bz COLOR
EntityShulkerBullet b shooter
EntityShulkerBullet c target
EntityShulkerBullet d dir
EntitySilverfish$PathfinderGoalSilverfishWakeOthers a silverfish
EntitySize a width
EntitySize b height
EntitySlime a (IZ)V setSize
EntitySlime dX ()LSoundEffect; getSoundSquish
EntitySlime dY ()LSoundEffect; getSoundJump
EntitySlime dZ ()I getSize
EntitySnowman l ()Z hasPumpkin
EntitySnowman r (Z)V setHasPumpkin
EntitySpectralArrow ar duration
EntityTNTPrimed a (I)V setFuseTicks
EntityTNTPrimed b FUSE_TICKS
EntityTNTPrimed c source
EntityTNTPrimed d fuseTicks
EntityTNTPrimed f ()LEntityLiving; getSource
EntityTNTPrimed k ()I getFuseTicks
EntityTNTPrimed l ()V explode
EntityTameableAnimal A_ ()Ljava/util/UUID; getOwnerUUID
EntityTameableAnimal b (Ljava/util/UUID;)V setOwnerUUID
EntityTameableAnimal bB goalSit
EntityTameableAnimal dV ()Z isTamed
EntityTameableAnimal dX ()Z isSitting
EntityTameableAnimal dY ()LEntityLiving; getOwner
EntityTameableAnimal dZ ()LPathfinderGoalSit; getGoalSit
EntityTameableAnimal e (LEntityHuman;)V tame
EntityTameableAnimal s (Z)V setTamed
EntityTameableAnimal t (Z)V setSitting
EntityThrownTrident at trident
EntityTippedArrow a (LMobEffect;)V addEffect
EntityTippedArrow ar COLOR
EntityTippedArrow as potionRegistry
EntityTippedArrow at effects
EntityTippedArrow au hasColor
EntityTippedArrow c (I)V setColor
EntityTippedArrow w ()I getColor
EntityTrackerEntry a (LPacket;)V broadcastIncludingSelf
EntityTrackerEntry c tracker
EntityTrackerEntry g xLoc
EntityTrackerEntry h yLoc
EntityTrackerEntry i zLoc
EntityTrackerEntry j yRot
EntityTrackerEntry k xRot
EntityTrackerEntry l headYaw
EntityTropicalFish ee ()I getVariant
EntityTropicalFish u (I)V setVariant
EntityTropicalFish$Variant a KOB
EntityTropicalFish$Variant b SUNSTREAK
EntityTropicalFish$Variant c SNOOPER
EntityTropicalFish$Variant d DASHER
EntityTropicalFish$Variant e BRINELY
EntityTropicalFish$Variant f SPOTTY
EntityTropicalFish$Variant g FLOPPER
EntityTropicalFish$Variant h STRIPEY
EntityTropicalFish$Variant i GLITTER
EntityTropicalFish$Variant j BLOCKFISH
EntityTropicalFish$Variant k BETTY
EntityTropicalFish$Variant l CLAYFISH
EntityTypes A FIREWORK_ROCKET
EntityTypes B FOX
EntityTypes C GHAST
EntityTypes D GIANT
EntityTypes E GUARDIAN
EntityTypes F HORSE
EntityTypes G HUSK
EntityTypes H ILLUSIONER
EntityTypes I ITEM
EntityTypes J ITEM_FRAME
EntityTypes K FIREBALL
EntityTypes L LEASH_KNOT
EntityTypes M LLAMA
EntityTypes N LLAMA_SPIT
EntityTypes O MAGMA_CUBE
EntityTypes P MINECART
EntityTypes Q CHEST_MINECART
EntityTypes R COMMAND_BLOCK_MINECART
EntityTypes S FURNACE_MINECART
EntityTypes T HOPPER_MINECART
EntityTypes U SPAWNER_MINECART
EntityTypes V TNT_MINECART
EntityTypes W MULE
EntityTypes X MOOSHROOM
EntityTypes Y OCELOT
EntityTypes Z PAINTING
EntityTypes a (LEntityTypes;)LMinecraftKey; getName
EntityTypes a (LWorld;LItemStack;LEntityHuman;LBlockPosition;LEnumMobSpawn;ZZ)LEntity; spawnCreature
EntityTypes a (LWorld;LNBTTagCompound;LIChatBaseComponent;LEntityHuman;LBlockPosition;LEnumMobSpawn;ZZ)LEntity; spawnCreature
EntityTypes a AREA_EFFECT_CLOUD
EntityTypes aA EGG
EntityTypes aB ENDER_PEARL
EntityTypes aC EXPERIENCE_BOTTLE
EntityTypes aD POTION
EntityTypes aE TRIDENT
EntityTypes aF VEX
EntityTypes aG VILLAGER
EntityTypes aH IRON_GOLEM
EntityTypes aI VINDICATOR
EntityTypes aJ PILLAGER
EntityTypes aK WANDERING_TRADER
EntityTypes aL WITCH
EntityTypes aM WITHER
EntityTypes aN WITHER_SKELETON
EntityTypes aO WITHER_SKULL
EntityTypes aP WOLF
EntityTypes aQ ZOMBIE
EntityTypes aR ZOMBIE_HORSE
EntityTypes aS ZOMBIE_VILLAGER
EntityTypes aT PHANTOM
EntityTypes aU RAVAGER
EntityTypes aV LIGHTNING_BOLT
EntityTypes aW PLAYER
EntityTypes aX FISHING_BOBBER
EntityTypes aa PANDA
EntityTypes ab PARROT
EntityTypes ac PIG
EntityTypes ad PUFFERFISH
EntityTypes ae ZOMBIE_PIGMAN
EntityTypes af POLAR_BEAR
EntityTypes ag TNT
EntityTypes ah RABBIT
EntityTypes ai SALMON
EntityTypes aj SHEEP
EntityTypes ak SHULKER
EntityTypes al SHULKER_BULLET
EntityTypes am SILVERFISH
EntityTypes an SKELETON
EntityTypes ao SKELETON_HORSE
EntityTypes ap SLIME
EntityTypes aq SMALL_FIREBALL
EntityTypes ar SNOW_GOLEM
EntityTypes as SNOWBALL
EntityTypes at SPECTRAL_ARROW
EntityTypes au SPIDER
EntityTypes av SQUID
EntityTypes aw STRAY
EntityTypes ax TRADER_LLAMA
EntityTypes ay TROPICAL_FISH
EntityTypes az TURTLE
EntityTypes b ARMOR_STAND
EntityTypes c ARROW
EntityTypes d BAT
EntityTypes e BLAZE
EntityTypes f BOAT
EntityTypes g CAT
EntityTypes h CAVE_SPIDER
EntityTypes i CHICKEN
EntityTypes j COD
EntityTypes k COW
EntityTypes l ()I getChunkRange
EntityTypes l CREEPER
EntityTypes m ()I getUpdateInterval
EntityTypes m DONKEY
EntityTypes n ()Z isDeltaTracking
EntityTypes n DOLPHIN
EntityTypes o DRAGON_FIREBALL
EntityTypes p DROWNED
EntityTypes q ELDER_GUARDIAN
EntityTypes r END_CRYSTAL
EntityTypes s ENDER_DRAGON
EntityTypes t ENDERMAN
EntityTypes u ENDERMITE
EntityTypes v EVOKER_FANGS
EntityTypes w EVOKER
EntityTypes x EXPERIENCE_ORB
EntityTypes y EYE_OF_ENDER
EntityTypes z FALLING_BLOCK
EntityVex dW ()Z isCharging
EntityVex r (Z)V setCharging
EntityVillager a (LVillagerData;)V setVillagerData
EntityVillager eC ()V populateTrades
EntityVillager en ()Z canBreed
EntityVillager t (I)V setExperience
EntityVillagerAbstract bB tradingPlayer
EntityVillagerAbstract bC inventory
EntityVillagerAbstract bz trades
EntityVillagerAbstract ee ()LInventorySubcontainer; getInventory
EntityWither a (II)V setHeadTarget
EntityWither bI bossBattle
EntityWither s (I)I getHeadTarget
EntityWitherSkull a (Z)V setCharged
EntityWitherSkull l ()Z isCharged
EntityWolf a (LEnumColor;)V setCollarColor
EntityWolf bD DATA_HEALTH
EntityWolf eg ()Z isAngry
EntityWolf eh ()LEnumColor; getCollarColor
EntityWolf u (Z)V setAngry
EntityZombie a (I)V startDrownedConversion
EntityZombie a (LDamageSource;F)Z damageEntity
EntityZombie bB DROWN_CONVERTING
EntityZombie bG drownedConversionTime
EntityZombie dW ()LSoundEffect; getSoundStep
EntityZombie ec ()Z isDrownConverting
EntityZombie t (Z)V setBaby
EntityZombieVillager a (LVillagerData;)V setVillagerData
EntityZombieVillager a (Ljava/util/UUID;I)V startConversion
EntityZombieVillager b CONVERTING
EntityZombieVillager bA conversionPlayer
EntityZombieVillager bz conversionTime
EntityZombieVillager ee ()Z isConverting
EntityZombieVillager ef ()LVillagerData; getVillagerData
EntityZombieVillager eh ()I getConversionProgress
EntityZombieVillager g (LNBTTagCompound;)V setOffers
EnumAnimation a NONE
EnumAnimation b EAT
EnumAnimation c DRINK
EnumAnimation d BLOCK
EnumAnimation e BOW
EnumAnimation f SPEAR
EnumAnimation g CROSSBOW
EnumArmorMaterial a LEATHER
EnumArmorMaterial b CHAIN
EnumArmorMaterial c IRON
EnumArmorMaterial d GOLD
EnumArmorMaterial e DIAMOND
EnumArmorMaterial f TURTLE
EnumAxisCycle a NONE
EnumAxisCycle b FORWARD
EnumAxisCycle c BACKWARD
EnumBannerPatternType A HALF_VERTICAL
EnumBannerPatternType B HALF_HORIZONTAL
EnumBannerPatternType C HALF_VERTICAL_MIRROR
EnumBannerPatternType D HALF_HORIZONTAL_MIRROR
EnumBannerPatternType E BORDER
EnumBannerPatternType F CURLY_BORDER
EnumBannerPatternType G GRADIENT
EnumBannerPatternType H GRADIENT_UP
EnumBannerPatternType I BRICKS
EnumBannerPatternType J GLOBE
EnumBannerPatternType K CREEPER
EnumBannerPatternType L SKULL
EnumBannerPatternType M FLOWER
EnumBannerPatternType N MOJANG
EnumBannerPatternType a BASE
EnumBannerPatternType b SQUARE_BOTTOM_LEFT
EnumBannerPatternType c SQUARE_BOTTOM_RIGHT
EnumBannerPatternType d SQUARE_TOP_LEFT
EnumBannerPatternType e SQUARE_TOP_RIGHT
EnumBannerPatternType f STRIPE_BOTTOM
EnumBannerPatternType g STRIPE_TOP
EnumBannerPatternType h STRIPE_LEFT
EnumBannerPatternType i STRIPE_RIGHT
EnumBannerPatternType j STRIPE_CENTER
EnumBannerPatternType k STRIPE_MIDDLE
EnumBannerPatternType l STRIPE_DOWNRIGHT
EnumBannerPatternType m STRIPE_DOWNLEFT
EnumBannerPatternType n STRIPE_SMALL
EnumBannerPatternType o CROSS
EnumBannerPatternType p STRAIGHT_CROSS
EnumBannerPatternType q TRIANGLE_BOTTOM
EnumBannerPatternType r TRIANGLE_TOP
EnumBannerPatternType s TRIANGLES_BOTTOM
EnumBannerPatternType t TRIANGLES_TOP
EnumBannerPatternType u DIAGONAL_LEFT
EnumBannerPatternType v DIAGONAL_RIGHT
EnumBannerPatternType w DIAGONAL_LEFT_MIRROR
EnumBannerPatternType x DIAGONAL_RIGHT_MIRROR
EnumBannerPatternType y CIRCLE_MIDDLE
EnumBannerPatternType z RHOMBUS_MIDDLE
EnumBlockMirror a NONE
EnumBlockMirror b LEFT_RIGHT
EnumBlockMirror c FRONT_BACK
EnumBlockRotation a NONE
EnumBlockRotation b CLOCKWISE_90
EnumBlockRotation c CLOCKWISE_180
EnumBlockRotation d COUNTERCLOCKWISE_90
EnumChatFormat a BLACK
EnumChatFormat b DARK_BLUE
EnumChatFormat c ()Z isFormat
EnumChatFormat c DARK_GREEN
EnumChatFormat d DARK_AQUA
EnumChatFormat e DARK_RED
EnumChatFormat f DARK_PURPLE
EnumChatFormat g GOLD
EnumChatFormat h GRAY
EnumChatFormat i DARK_GRAY
EnumChatFormat j BLUE
EnumChatFormat k GREEN
EnumChatFormat l AQUA
EnumChatFormat m RED
EnumChatFormat n LIGHT_PURPLE
EnumChatFormat o YELLOW
EnumChatFormat p WHITE
EnumChatFormat q OBFUSCATED
EnumChatFormat r BOLD
EnumChatFormat s STRIKETHROUGH
EnumChatFormat t UNDERLINE
EnumChatFormat u ITALIC
EnumChatFormat v RESET
EnumChatFormat z character
EnumChatVisibility a FULL
EnumChatVisibility b SYSTEM
EnumChatVisibility c HIDDEN
EnumColor a ()I getColorIndex
EnumColor a (I)LEnumColor; fromColorIndex
EnumColor a WHITE
EnumColor b ORANGE
EnumColor c MAGENTA
EnumColor d LIGHT_BLUE
EnumColor e YELLOW
EnumColor f LIME
EnumColor g PINK
EnumColor h GRAY
EnumColor i LIGHT_GRAY
EnumColor j CYAN
EnumColor k PURPLE
EnumColor l BLUE
EnumColor m BROWN
EnumColor n GREEN
EnumColor o RED
EnumColor p BLACK
EnumCreatureType a MONSTER
EnumCreatureType b CREATURE
EnumCreatureType c AMBIENT
EnumCreatureType d WATER_CREATURE
EnumCreatureType e MISC
EnumDifficulty a (I)LEnumDifficulty; getById
EnumDifficulty a PEACEFUL
EnumDifficulty b EASY
EnumDifficulty c NORMAL
EnumDifficulty d HARD
EnumDirection a (D)LEnumDirection; fromAngle
EnumDirection a (I)LEnumDirection; fromType1
EnumDirection a DOWN
EnumDirection b ()I get2DRotationValue
EnumDirection b (I)LEnumDirection; fromType2
EnumDirection b UP
EnumDirection c NORTH
EnumDirection d ()LEnumDirection; opposite
EnumDirection d SOUTH
EnumDirection e WEST
EnumDirection f EAST
EnumDirection g ()I getAdjacentX
EnumDirection h ()I getAdjacentY
EnumDirection i ()I getAdjacentZ
EnumDirection$EnumAxis a X
EnumDirection$EnumAxis b Y
EnumDirection$EnumAxis c Z
EnumDirection$EnumAxisDirection a POSITIVE
EnumDirection$EnumAxisDirection b NEGATIVE
EnumDirection$EnumDirectionLimit a HORIZONTAL
EnumDirection$EnumDirectionLimit b VERTICAL
EnumDirection8 a NORTH
EnumDirection8 b NORTH_EAST
EnumDirection8 c EAST
EnumDirection8 d SOUTH_EAST
EnumDirection8 e SOUTH
EnumDirection8 f SOUTH_WEST
EnumDirection8 g WEST
EnumDirection8 h NORTH_WEST
EnumDragonRespawn a START
EnumDragonRespawn b PREPARING_TO_SUMMON_PILLARS
EnumDragonRespawn c SUMMONING_PILLARS
EnumDragonRespawn d SUMMONING_DRAGON
EnumDragonRespawn e END
EnumGamemode a ()I getId
EnumGamemode a (I)LEnumGamemode; getById
EnumGamemode a NOT_SET
EnumGamemode b SURVIVAL
EnumGamemode c CREATIVE
EnumGamemode d ADVENTURE
EnumGamemode e ()Z isCreative
EnumGamemode e SPECTATOR
EnumHand a MAIN_HAND
EnumHand b OFF_HAND
EnumInteractionResult a SUCCESS
EnumInteractionResult b PASS
EnumInteractionResult c FAIL
EnumItemRarity a COMMON
EnumItemRarity b UNCOMMON
EnumItemRarity c RARE
EnumItemRarity d EPIC
EnumItemSlot a (Ljava/lang/String;)LEnumItemSlot; fromName
EnumItemSlot a MAINHAND
EnumItemSlot b OFFHAND
EnumItemSlot c FEET
EnumItemSlot d ()Ljava/lang/String; getSlotName
EnumItemSlot d LEGS
EnumItemSlot e CHEST
EnumItemSlot f HEAD
EnumItemSlot$Function a HAND
EnumItemSlot$Function b ARMOR
EnumMainHand a LEFT
EnumMainHand b RIGHT
EnumMobSpawn a NATURAL
EnumMobSpawn b CHUNK_GENERATION
EnumMobSpawn c SPAWNER
EnumMobSpawn d STRUCTURE
EnumMobSpawn e BREEDING
EnumMobSpawn f MOB_SUMMONED
EnumMobSpawn g JOCKEY
EnumMobSpawn h EVENT
EnumMobSpawn i CONVERSION
EnumMobSpawn j REINFORCEMENT
EnumMobSpawn k TRIGGERED
EnumMobSpawn l BUCKET
EnumMobSpawn m SPAWN_EGG
EnumMobSpawn n COMMAND
EnumMobSpawn o DISPENSER
EnumMobSpawn p PATROL
EnumMonsterType a UNDEFINED
EnumMonsterType b UNDEAD
EnumMonsterType c ARTHROPOD
EnumMonsterType d ILLAGER
EnumMoveType a SELF
EnumMoveType b PLAYER
EnumMoveType c PISTON
EnumMoveType d SHULKER_BOX
EnumMoveType e SHULKER
EnumPistonReaction a NORMAL
EnumPistonReaction b DESTROY
EnumPistonReaction c BLOCK
EnumPistonReaction d IGNORE
EnumPistonReaction e PUSH_ONLY
EnumProtocol a HANDSHAKING
EnumProtocol b PLAY
EnumProtocol c STATUS
EnumProtocol d LOGIN
EnumProtocolDirection a SERVERBOUND
EnumProtocolDirection b CLIENTBOUND
EnumRenderType a INVISIBLE
EnumRenderType b ENTITYBLOCK_ANIMATED
EnumRenderType c MODEL
EnumResourcePackType a CLIENT_RESOURCES
EnumResourcePackType b SERVER_DATA
EnumResourcePackVersion a TOO_OLD
EnumResourcePackVersion b TOO_NEW
EnumResourcePackVersion c COMPATIBLE
EnumSkyBlock a SKY
EnumSkyBlock b BLOCK
EnumToolMaterial a WOOD
EnumToolMaterial b STONE
EnumToolMaterial c IRON
EnumToolMaterial d DIAMOND
EnumToolMaterial e GOLD
ExpirableListEntry b ()Ljava/lang/String; getSource
ExpirableListEntry c ()Ljava/util/Date; getExpires
ExpirableListEntry d ()Ljava/lang/String; getReason
Explosion d ()LEntityLiving; getSource
Explosion d world
Explosion e ()V clearBlocks
Explosion e posX
Explosion f ()Ljava/util/List; getBlocks
Explosion f posY
Explosion g posZ
Explosion h source
Explosion i size
Explosion k blocks
Explosion$Effect a NONE
Explosion$Effect b BREAK
Explosion$Effect c DESTROY
Fluid a (LIBlockAccess;LBlockPosition;)F getHeight
Fluid c ()LFluidType; getType
Fluid d ()Z isSource
Fluid e ()Z isEmpty
Fluid i ()LIBlockData; getBlockData
FluidTypeFlowing a FALLING
FluidTypeFlowing b LEVEL
FluidTypes a EMPTY
FluidTypes b FLOWING_WATER
FluidTypes c WATER
FluidTypes d FLOWING_LAVA
FluidTypes e LAVA
FoodInfo a ()I getNutrition
FoodInfo b ()F getSaturationModifier
FoodMetaData a ()I getFoodLevel
FoodMetaData a (IF)V eat
FoodMetaData a foodLevel
FoodMetaData b saturationLevel
FoodMetaData c exhaustionLevel
FoodMetaData d foodTickTimer
FoodMetaData e ()F getSaturationLevel
GameProfileBanList a (Lcom/mojang/authlib/GameProfile;)Z isBanned
GameProfileSerializer a (LNBTTagCompound;)Lcom/mojang/authlib/GameProfile; deserialize
GameProfileSerializer a (LNBTTagCompound;Lcom/mojang/authlib/GameProfile;)LNBTTagCompound; serialize
GameProfilerFiller a (Ljava/lang/String;)V enter
GameProfilerFiller b (Ljava/lang/String;)V exitEnter
GameProfilerFiller c ()V exit
GameRules a (LGameRules$GameRuleKey;)LGameRules$GameRuleValue; get
GameRules a DO_FIRE_TICK
GameRules b (LGameRules$GameRuleKey;)Z getBoolean
GameRules b MOB_GRIEFING
GameRules c (LGameRules$GameRuleKey;)I getInt
GameRules c KEEP_INVENTORY
GameRules d DO_MOB_SPAWNING
GameRules e DO_MOB_LOOT
GameRules f DO_TILE_DROPS
GameRules g DO_ENTITY_DROPS
GameRules h COMMAND_BLOCK_OUTPUT
GameRules i NATURAL_REGENERATION
GameRules j DO_DAYLIGHT_CYCLE
GameRules k LOG_ADMIN_COMMANDS
GameRules l SHOW_DEATH_MESSAGES
GameRules m RANDOM_TICK_SPEED
GameRules n SEND_COMMAND_FEEDBACK
GameRules o REDUCED_DEBUG_INFO
GameRules p SPECTATORS_GENERATE_CHUNKS
GameRules q SPAWN_RADIUS
GameRules r DISABLE_ELYTRA_MOVEMENT_CHECK
GameRules s MAX_ENTITY_CRAMMING
GameRules t DO_WEATHER_CYCLE
GameRules u DO_LIMITED_CRAFTING
GameRules v MAX_COMMAND_CHAIN_LENGTH
GameRules w ANNOUNCE_ADVANCEMENTS
GameRules$GameRuleDefinition a ()LGameRules$GameRuleValue; getValue
GameRules$GameRuleValue a (Ljava/lang/String;)V setValue
GameRules$GameRuleValue a (Lnet/minecraft/server/MinecraftServer;)V onChange
GameRules$GameRuleValue b ()Ljava/lang/String; getValue
GameRules$GameRuleValue c ()I getIntValue
GenLayerCleaner a INSTANCE
GenLayerDeepOcean a INSTANCE
GenLayerDesert a INSTANCE
GenLayerIcePlains a INSTANCE
GenLayerIsland a INSTANCE
GenLayerJungle a INSTANCE
GenLayerMushroomIsland a INSTANCE
GenLayerMushroomShore a INSTANCE
GenLayerOcean a INSTANCE
GenLayerOceanEdge a INSTANCE
GenLayerPlains a INSTANCE
GenLayerRegionHills a INSTANCE
GenLayerRiver a INSTANCE
GenLayerRiverMix a INSTANCE
GenLayerSmooth a INSTANCE
GenLayerSpecial$Special1 a INSTANCE
GenLayerSpecial$Special2 a INSTANCE
GenLayerSpecial$Special3 a INSTANCE
GenLayerTopSoil a INSTANCE
GenLayerZoom a NORMAL
GenLayerZoom b FUZZY
GenLayerZoomVoronoi a INSTANCE
GeneratorAccess E ()LIChunkProvider; getChunkProvider
GeneratorAccess F ()LTickList; getFluidTickList
GeneratorAccess G ()LTickList; getBlockTickList
GeneratorAccess a (LBlockPosition;LBlock;)V update
GeneratorAccess a (LEntityHuman;LBlockPosition;LSoundEffect;LSoundCategory;FF)V playSound
GeneratorAccess a (LParticleParam;DDDDDD)V addParticle
GeneratorAccess ac ()LEnumDifficulty; getDifficulty
GeneratorAccess c (ILBlockPosition;I)V triggerEffect
GeneratorAccess e (LBlockPosition;)LDifficultyDamageScaler; getDamageScaler
GeneratorAccess k ()Ljava/util/Random; getRandom
GeneratorAccess m_ ()LWorld; getMinecraftWorld
GeneratorAccess n_ ()J getSeed
GeneratorAccess p_ ()LWorldData; getWorldData
GenericAttributes a MAX_HEALTH
GenericAttributes b FOLLOW_RANGE
GenericAttributes c KNOCKBACK_RESISTANCE
GenericAttributes d MOVEMENT_SPEED
GenericAttributes e FLYING_SPEED
GenericAttributes f ATTACK_DAMAGE
GenericAttributes g ATTACK_KNOCKBACK
GenericAttributes h ATTACK_SPEED
GenericAttributes i ARMOR
GenericAttributes j ARMOR_TOUGHNESS
GenericAttributes k LUCK
GlobalPos a ()LDimensionManager; getDimensionManager
GlobalPos a (LDimensionManager;LBlockPosition;)LGlobalPos; create
GlobalPos a dimensionManager
GlobalPos b ()LBlockPosition; getBlockPosition
GlobalPos b blockPosition
HeightMap$Type a WORLD_SURFACE_WG
HeightMap$Type b WORLD_SURFACE
HeightMap$Type c OCEAN_FLOOR_WG
HeightMap$Type d OCEAN_FLOOR
HeightMap$Type e MOTION_BLOCKING
HeightMap$Type f MOTION_BLOCKING_NO_LEAVES
HeightMap$Use a WORLDGEN
HeightMap$Use b LIVE_WORLD
HeightMap$Use c CLIENT
IAsyncTaskHandler a (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; executeFuture
IAsyncTaskHandler ax ()Z isNotMainThread
IAsyncTaskHandler ay ()Ljava/lang/Thread; getThread
IAsyncTaskHandler bd ()Z isMainThread
IAsyncTaskHandler bh ()V executeAll
IAsyncTaskHandler c (Ljava/lang/Runnable;)Z canExecute
IAsyncTaskHandler c (Ljava/util/function/BooleanSupplier;)V awaitTasks
IAsyncTaskHandler d (Ljava/lang/Runnable;)Ljava/lang/Runnable; postToMainThread
IAsyncTaskHandler f (Ljava/lang/Runnable;)V executeSync
IAsyncTaskHandler h (Ljava/lang/Runnable;)V executeTask
IAsyncTaskHandler q ()Z executeNext
IAsyncTaskHandlerReentrant b depth
IAsyncTaskHandlerReentrant bj ()Z isEntered
IAttribute a ()Ljava/lang/String; getName
IAttribute b ()D getDefault
IBlockAccess I ()I getBuildHeight
IBlockAccess a (LRayTrace;)LMovingObjectPositionBlock; rayTrace
IBlockAccess a (LVec3D;LVec3D;LBlockPosition;LVoxelShape;LIBlockData;)LMovingObjectPositionBlock; rayTrace
IBlockAccess b (LBlockPosition;)LFluid; getFluid
IBlockAccess d (LBlockPosition;)LTileEntity; getTileEntity
IBlockAccess e_ (LBlockPosition;)LIBlockData; getType
IBlockData a (LEntityHuman;LIBlockAccess;LBlockPosition;)F getDamage
IBlockData a (LEnumDirection;LIBlockData;LGeneratorAccess;LBlockPosition;LBlockPosition;)LIBlockData; updateState
IBlockData a (LIWorldReader;LBlockPosition;)Z canPlace
IBlockData a (LWorld;LBlockPosition;LBlock;LBlockPosition;Z)V doPhysics
IBlockData a (LWorld;LBlockPosition;LEntityHuman;)V attack
IBlockData a (LWorld;LBlockPosition;LIBlockData;Z)V onPlace
IBlockData a (LWorld;LBlockPosition;LItemStack;)V dropNaturally
IBlockData a (LWorld;LEntityHuman;LEnumHand;LMovingObjectPositionBlock;)Z interact
IBlockData b (LWorld;LBlockPosition;LIBlockData;Z)V remove
IBlockData d ()LBlock; getBlock
IBlockData e ()LMaterial; getMaterial
IBlockData e (LIBlockAccess;LBlockPosition;)Z isOccluding
IBlockData h (LIBlockAccess;LBlockPosition;)LVoxelShape; getShape
IBlockData i ()Z isAir
IBlockData i (LIBlockAccess;LBlockPosition;)LVoxelShape; getCollisionShape
IBlockData l ()Z isPowerSource
IBlockData m ()Z isComplexRedstone
IBlockData n ()LEnumPistonReaction; getPushReaction
IBlockDataHolder a (LIBlockState;Ljava/lang/Comparable;)Ljava/lang/Object; set
IBlockDataHolder b ()Lcom/google/common/collect/ImmutableMap; getStateMap
IBlockDataHolder c (LIBlockState;)Ljava/lang/Comparable; get
IBlockState d ()Ljava/util/Collection; getValues
IChatBaseComponent a ()Ljava/util/List; getSiblings
IChatBaseComponent a (LChatModifier;)LIChatBaseComponent; setChatModifier
IChatBaseComponent a (LIChatBaseComponent;)LIChatBaseComponent; addSibling
IChatBaseComponent b ()LChatModifier; getChatModifier
IChatBaseComponent d ()Ljava/lang/String; getText
IChunkAccess a (J)V setLastSaved
IChunkAccess a (LBlockPosition;LIBlockData;Z)LIBlockData; setType
IChunkAccess a (LBlockPosition;LTileEntity;)V setTileEntity
IChunkAccess a (Z)V setNeedsSaving
IChunkAccess c (LBlockPosition;)LBiomeBase; getBiome
IChunkAccess d ()[LChunkSection; getSections
IChunkAccess e (LBlockPosition;)V removeTileEntity
IChunkAccess g ()LChunkCoordIntPair; getPos
IChunkAccess i ()[LBiomeBase; getBiomeIndex
IChunkAccess j ()Z isNeedsSaving
IChunkAccess k ()LChunkStatus; getChunkStatus
IChunkLoader a (LDimensionManager;Ljava/util/function/Supplier;LNBTTagCompound;)LNBTTagCompound; getChunkData
IChunkProvider a (IILChunkStatus;Z)LIChunkAccess; getChunkAt
IChunkProvider a (IIZ)LChunk; getChunkAt
IChunkProvider e ()Ljava/lang/String; getName
IChunkProvider g ()LChunkGenerator; getChunkGenerator
IChunkProvider k ()LLightEngine; getLightEngine
ICommandListener H_ ()Z shouldBroadcastCommands
ICommandListener a ()Z shouldSendSuccess
ICommandListener a (LIChatBaseComponent;)V sendMessage
ICommandListener a_ DUMMY
ICommandListener b ()Z shouldSendFailure
ICompletionProvider c (I)Z hasPermission
IContainerProperties a (I)I getProperty
IContainerProperties a (II)V setProperty
ICrafting a (LContainer;II)V setContainerData
ICrossbow w ()LEntityLiving; getGoalTarget
IDispenseBehavior a NONE
IDragonController i ()LDragonControllerPhase; getControllerPhase
IEntityAccess A ()Ljava/util/List; getPlayers
IEntityAccess a (DDDD)Z isPlayerNearby
IEntityAccess a (LEntity;D)LEntityHuman; findNearbyPlayer
IEntityAccess a (LEntity;LAxisAlignedBB;)Ljava/util/List; getEntities
IEntityAccess a (LEntity;LAxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
IFluidContainer a (LGeneratorAccess;LBlockPosition;LIBlockData;LFluid;)Z place
IFluidContainer a (LIBlockAccess;LBlockPosition;LIBlockData;LFluidType;)Z canPlace
IFluidSource b (LGeneratorAccess;LBlockPosition;LIBlockData;)LFluidType; removeFluid
IHopper w ()LWorld; getWorld
IIBlockAccess a (LEnumSkyBlock;LBlockPosition;)I getBrightness
IIBlockAccess c (LBlockPosition;)LBiomeBase; getBiome
IInventory J_ ()I getMaxStackSize
IInventory M_ ()I getSize
IInventory a (I)LItemStack; getItem
IInventory a (II)LItemStack; splitStack
IInventory a (ILItemStack;)V setItem
IInventory a_ (LEntityHuman;)V startOpen
IInventory b (I)LItemStack; splitWithoutUpdate
IInventory b_ (LEntityHuman;)V closeContainer
IInventory c ()Z isNotEmpty
IInventory e ()V update
ILightAccess l ()LIBlockAccess; getWorld
IMaterial g ()LItem; getItem
IMerchant a (LEntityHuman;LIChatBaseComponent;I)V openTrade
IMerchant dW ()I getExperience
IMerchant dX ()LEntityHuman; getTrader
IMerchant dZ ()LMerchantRecipeList; getOffers
IMerchant e (LEntityHuman;)V setTradingPlayer
IMerchant eg ()LWorld; getWorld
IMinecraftServer A ()I getPlayerCount
IMinecraftServer B ()I getMaxPlayers
IMinecraftServer C ()[Ljava/lang/String; getPlayers
IMinecraftServer E ()Z isDebugging
IMinecraftServer K ()Ljava/lang/String; getWorld
IMinecraftServer a_ (Ljava/lang/String;)Ljava/lang/String; executeRemoteCommand
IMinecraftServer d_ ()LDedicatedServerProperties; getDedicatedServerProperties
IMinecraftServer e (Ljava/lang/String;)V info
IMinecraftServer f (Ljava/lang/String;)V warning
IMinecraftServer o ()Ljava/lang/String; getPlugins
IMinecraftServer z ()Ljava/lang/String; getVersion
INamable m ()Ljava/lang/String; getName
INamableTileEntity O ()LIChatBaseComponent; getDisplayName
INamableTileEntity P ()Z hasCustomName
INamableTileEntity Q ()LIChatBaseComponent; getCustomName
INamableTileEntity d ()LIChatBaseComponent; getScoreboardDisplayName
IPlayerFileData a (LEntityHuman;)V save
IPlayerFileData b (LEntityHuman;)LNBTTagCompound; load
IPosition a ()D getX
IPosition b ()D getY
IPosition c ()D getZ
IProjectile c (DDDFF)V shoot
IRecipe P_ ()Z isComplex
IRecipe Q_ ()LRecipeSerializer; getRecipeSerializer
IRecipe f ()LMinecraftKey; getKey
IRegistry A CHUNK_STATUS
IRegistry B STRUCTURE_FEATURE
IRegistry C STRUCTURE_PIECE
IRegistry D RULE_TEST
IRegistry E STRUCTURE_PROCESSOR
IRegistry F STRUCTURE_POOL_ELEMENT
IRegistry G MENU
IRegistry H RECIPE_TYPE
IRegistry I RECIPE_SERIALIZER
IRegistry J STATS
IRegistry K VILLAGER_TYPE
IRegistry L VILLAGER_PROFESSION
IRegistry M POINT_OF_INTEREST_TYPE
IRegistry N MEMORY_MODULE_TYPE
IRegistry O SENSOR_TYPE
IRegistry P SCHEDULE
IRegistry Q ACTIVITY
IRegistry a (LMinecraftKey;)Ljava/lang/Object; get
IRegistry b ()Ljava/util/Set; keySet
IRegistry b (LMinecraftKey;)Ljava/util/Optional; getOptional
IRegistry b (Ljava/lang/Object;)LMinecraftKey; getKey
IRegistry g SOUND_EVENT
IRegistry h FLUID
IRegistry i MOB_EFFECT
IRegistry j BLOCK
IRegistry k ENCHANTMENT
IRegistry l ENTITY_TYPE
IRegistry m ITEM
IRegistry n POTION
IRegistry o CARVER
IRegistry p SURFACE_BUILDER
IRegistry q FEATURE
IRegistry r DECORATOR
IRegistry s BIOME
IRegistry t PARTICLE_TYPE
IRegistry u BIOME_SOURCE_TYPE
IRegistry v BLOCK_ENTITY_TYPE
IRegistry w CHUNK_GENERATOR_TYPE
IRegistry x DIMENSION_TYPE
IRegistry y MOTIVE
IRegistry z CUSTOM_STAT
IScoreboardCriteria a criteria
IScoreboardCriteria b DUMMY
IScoreboardCriteria c ()Ljava/lang/String; getName
IScoreboardCriteria c TRIGGER
IScoreboardCriteria d ()Z isReadOnly
IScoreboardCriteria d DEATH_COUNT
IScoreboardCriteria e PLAYER_KILL_COUNT
IScoreboardCriteria f TOTAL_KILL_COUNT
IScoreboardCriteria g HEALTH
IScoreboardCriteria h FOOD
IScoreboardCriteria i AIR
IScoreboardCriteria j ARMOR
IScoreboardCriteria k XP
IScoreboardCriteria l LEVEL
IScoreboardCriteria$EnumScoreboardHealthDisplay a INTEGER
IScoreboardCriteria$EnumScoreboardHealthDisplay b HEARTS
ISource h ()LWorld; getWorld
ISourceBlock d ()LBlockPosition; getBlockPosition
ISourceBlock e ()LIBlockData; getBlockData
ISourceBlock g ()LTileEntity; getTileEntity
ITickable T_ ()V tick
ITileEntity a (LIBlockAccess;)LTileEntity; createTile
ITileInventory d ()LIChatBaseComponent; getScoreboardDisplayName
IWorldInventory a (ILItemStack;LEnumDirection;)Z canPlaceItemThroughFace
IWorldInventory a (LEnumDirection;)[I getSlotsForFace
IWorldInventory b (ILItemStack;LEnumDirection;)Z canTakeItemThroughFace
IWorldReader a (II)LIChunkAccess; getChunkAt
IWorldReader a (IIIIII)Z isAreaLoaded
IWorldReader a (IILChunkStatus;)LIChunkAccess; getChunkAt
IWorldReader a (IILChunkStatus;Z)LIChunkAccess; getChunkAt
IWorldReader a (LBlockPosition;LBlockPosition;)Z areChunksLoadedBetween
IWorldReader a (LHeightMap$Type;LBlockPosition;)LBlockPosition; getHighestBlockYAt
IWorldReader a_ (LBlockPosition;I)I getLightLevel
IWorldReader a_ (LEntity;LAxisAlignedBB;)Z getCubes
IWorldReader b (II)Z isChunkLoaded
IWorldReader d (LAxisAlignedBB;)Z containsLiquid
IWorldReader i ()I getSeaLevel
IWorldReader j (LEntity;)Z getCubes
IWorldReader q_ ()LWorldBorder; getWorldBorder
IWorldReader r_ ()LWorldProvider; getWorldProvider
IWorldReader t (LBlockPosition;)Z isEmpty
IWorldReader y (LBlockPosition;)I getLightLevel
IWorldReader z (LBlockPosition;)Z isLoaded
IWorldWriter a (LBlockPosition;LIBlockData;I)Z setTypeAndData
IWorldWriter c (LEntity;)Z addEntity
InventoryClickType a PICKUP
InventoryClickType b QUICK_MOVE
InventoryClickType c SWAP
InventoryClickType d CLONE
InventoryClickType e THROW
InventoryClickType f QUICK_CRAFT
InventoryClickType g PICKUP_ALL
InventoryCraftResult a items
InventoryCrafting a items
InventoryCrafting d container
InventoryLargeChest a left
InventoryLargeChest b right
InventoryMerchant a merchant
InventoryMerchant b itemsInSlots
InventoryMerchant c recipe
InventoryMerchant d selectedIndex
InventoryMerchant g ()LMerchantRecipe; getRecipe
InventorySubcontainer b items
InventorySubcontainer e ()V update
InventoryUtils a (LWorld;DDDLIInventory;)V dropInventory
InventoryUtils a (LWorld;DDDLItemStack;)V dropItem
InventoryUtils a (LWorld;LBlockPosition;LIInventory;)V dropInventory
InventoryUtils a (LWorld;LEntity;LIInventory;)V dropEntity
IpBanList a (Ljava/net/SocketAddress;)Z isBanned
IpBanList b (Ljava/net/SocketAddress;)LIpBanEntry; get
Item a ()Ljava/lang/String; getName
Item a (LBlock;)LItem; getItemOf
Item a (LItem;)I getId
Item a (LItemStack;LIBlockData;)F getDestroySpeed
Item b (I)LItem; getById
Item b (LIBlockData;)Z canDestroySpecialBlock
Item h ()I getMaxStackSize
Item i ()I getMaxDurability
Item j ()Z usesDurability
Item m maxStackSize
Item n durability
Item o craftingResult
Item p name
Item q foodInfo
Item r ()Z isFood
Item s ()LFoodInfo; getFoodInfo
ItemActionContext a ()LBlockPosition; getClickPosition
ItemActionContext g ()Z isSneaking
ItemActionContext i ()LEnumDirection; getClickedFace
ItemActionContext l ()LItemStack; getItemStack
ItemActionContext m ()LEntityHuman; getEntity
ItemActionContext o ()LWorld; getWorld
ItemBlock e ()LBlock; getBlock
ItemBlockWallable a wallBlock
ItemBucket a fluidType
ItemCooldown a (LItem;)Z hasCooldown
ItemCooldown a (LItem;I)V setCooldown
ItemCooldown a cooldowns
ItemCooldown b currentTick
ItemCooldown$Info c endTick
ItemFireworks$EffectType a SMALL_BALL
ItemFireworks$EffectType b LARGE_BALL
ItemFireworks$EffectType c STAR
ItemFireworks$EffectType d CREEPER
ItemFireworks$EffectType e BURST
ItemStack A ()I getRepairCost
ItemStack D ()I getCount
ItemStack G ()V checkEmpty
ItemStack a ()Z isEmpty
ItemStack a (I)LItemStack; cloneAndSubtract
ItemStack a (ILEntityLiving;Ljava/util/function/Consumer;)V damage
ItemStack a (ILjava/util/Random;LEntityPlayer;)Z isDamaged
ItemStack a (LEnchantment;I)V addEnchantment
ItemStack a (LItemActionContext;)LEnumInteractionResult; placeItem
ItemStack a (LItemStack;)Z doMaterialsMatch
ItemStack a (LItemStack;LItemStack;)Z equals
ItemStack b ()LItem; getItem
ItemStack b (I)V setDamage
ItemStack b (LItemStack;LItemStack;)Z matches
ItemStack b (LNBTTagCompound;)LNBTTagCompound; save
ItemStack c ()I getMaxStackSize
ItemStack c (I)V setRepairCost
ItemStack c (LNBTTagCompound;)V setTag
ItemStack c (Ljava/lang/String;)V removeTag
ItemStack d ()Z isStackable
ItemStack d count
ItemStack e (I)V setCount
ItemStack f (I)V add
ItemStack f item
ItemStack g ()I getDamage
ItemStack g (I)V subtract
ItemStack g tag
ItemStack i ()LItemStack; cloneItemStack
ItemStack n ()Z hasTag
ItemStack o ()LNBTTagCompound; getTag
ItemStack p ()LNBTTagCompound; getOrCreateTag
ItemStack q ()LNBTTagList; getEnchantments
ItemStack r ()LIChatBaseComponent; getName
ItemStack t ()Z hasName
ItemStack w ()Z canEnchant
ItemStack x ()Z hasEnchantments
ItemWorldMap a (LWorld;IIBZZ)LItemStack; createFilledMapView
ItemWorldMap a (LWorld;LItemStack;)V applySepiaFilter
ItemWorldMap b (LItemStack;LWorld;)LWorldMap; getSavedMap
Items a AIR
Items iY TURTLE_HELMET
Items iZ SCUTE
Items jA BOWL
Items jB MUSHROOM_STEW
Items jC GOLDEN_SWORD
Items jD GOLDEN_SHOVEL
Items jE GOLDEN_PICKAXE
Items jF GOLDEN_AXE
Items jG STRING
Items jH FEATHER
Items jI GUNPOWDER
Items jJ WOODEN_HOE
Items jK STONE_HOE
Items jL IRON_HOE
Items jM DIAMOND_HOE
Items jN GOLDEN_HOE
Items jO WHEAT_SEEDS
Items jP WHEAT
Items jQ BREAD
Items jR LEATHER_HELMET
Items jS LEATHER_CHESTPLATE
Items jT LEATHER_LEGGINGS
Items jU LEATHER_BOOTS
Items jV CHAINMAIL_HELMET
Items jW CHAINMAIL_CHESTPLATE
Items jX CHAINMAIL_LEGGINGS
Items jY CHAINMAIL_BOOTS
Items jZ IRON_HELMET
Items ja IRON_SHOVEL
Items jb IRON_PICKAXE
Items jc IRON_AXE
Items jd FLINT_AND_STEEL
Items je APPLE
Items jf BOW
Items jg ARROW
Items jh COAL
Items ji CHARCOAL
Items jj DIAMOND
Items jk IRON_INGOT
Items jl GOLD_INGOT
Items jm IRON_SWORD
Items jn WOODEN_SWORD
Items jo WOODEN_SHOVEL
Items jp WOODEN_PICKAXE
Items jq WOODEN_AXE
Items jr STONE_SWORD
Items js STONE_SHOVEL
Items jt STONE_PICKAXE
Items ju STONE_AXE
Items jv DIAMOND_SWORD
Items jw DIAMOND_SHOVEL
Items jx DIAMOND_PICKAXE
Items jy DIAMOND_AXE
Items jz STICK
Items kA MINECART
Items kB SADDLE
Items kC REDSTONE
Items kD SNOWBALL
Items kE OAK_BOAT
Items kF LEATHER
Items kG MILK_BUCKET
Items kH PUFFERFISH_BUCKET
Items kI SALMON_BUCKET
Items kJ COD_BUCKET
Items kK TROPICAL_FISH_BUCKET
Items kL BRICK
Items kM CLAY_BALL
Items kR PAPER
Items kS BOOK
Items kT SLIME_BALL
Items kU CHEST_MINECART
Items kV FURNACE_MINECART
Items kW EGG
Items kX COMPASS
Items kY FISHING_ROD
Items kZ CLOCK
Items ka IRON_CHESTPLATE
Items kb IRON_LEGGINGS
Items kc IRON_BOOTS
Items kd DIAMOND_HELMET
Items ke DIAMOND_CHESTPLATE
Items kf DIAMOND_LEGGINGS
Items kg DIAMOND_BOOTS
Items kh GOLDEN_HELMET
Items ki GOLDEN_CHESTPLATE
Items kj GOLDEN_LEGGINGS
Items kk GOLDEN_BOOTS
Items kl FLINT
Items km PORKCHOP
Items kn COOKED_PORKCHOP
Items ko PAINTING
Items kp GOLDEN_APPLE
Items kq ENCHANTED_GOLDEN_APPLE
Items kr OAK_SIGN
Items ks SPRUCE_SIGN
Items kt BIRCH_SIGN
Items ku JUNGLE_SIGN
Items kv ACACIA_SIGN
Items kw DARK_OAK_SIGN
Items kx BUCKET
Items ky WATER_BUCKET
Items kz LAVA_BUCKET
Items lA WHITE_DYE
Items lB BONE
Items lC SUGAR
Items lE WHITE_BED
Items lF ORANGE_BED
Items lG MAGENTA_BED
Items lH LIGHT_BLUE_BED
Items lI YELLOW_BED
Items lJ LIME_BED
Items lK PINK_BED
Items lL GRAY_BED
Items lM LIGHT_GRAY_BED
Items lN CYAN_BED
Items lO PURPLE_BED
Items lP BLUE_BED
Items lQ BROWN_BED
Items lR GREEN_BED
Items lS RED_BED
Items lT BLACK_BED
Items lU COOKIE
Items lV FILLED_MAP
Items lW SHEARS
Items lX MELON_SLICE
Items lY DRIED_KELP
Items lZ PUMPKIN_SEEDS
Items la GLOWSTONE_DUST
Items lb COD
Items lc SALMON
Items ld TROPICAL_FISH
Items le PUFFERFISH
Items lf COOKED_COD
Items lg COOKED_SALMON
Items lh INK_SAC
Items li RED_DYE
Items lj GREEN_DYE
Items lk COCOA_BEANS
Items ll LAPIS_LAZULI
Items lm PURPLE_DYE
Items ln CYAN_DYE
Items lo LIGHT_GRAY_DYE
Items lp GRAY_DYE
Items lq PINK_DYE
Items lr LIME_DYE
Items ls YELLOW_DYE
Items lt LIGHT_BLUE_DYE
Items lu MAGENTA_DYE
Items lv ORANGE_DYE
Items lw BONE_MEAL
Items lx BLUE_DYE
Items ly BROWN_DYE
Items lz BLACK_DYE
Items mA COD_SPAWN_EGG
Items mB COW_SPAWN_EGG
Items mC CREEPER_SPAWN_EGG
Items mD DOLPHIN_SPAWN_EGG
Items mE DONKEY_SPAWN_EGG
Items mF DROWNED_SPAWN_EGG
Items mG ELDER_GUARDIAN_SPAWN_EGG
Items mH ENDERMAN_SPAWN_EGG
Items mI ENDERMITE_SPAWN_EGG
Items mJ EVOKER_SPAWN_EGG
Items mK FOX_SPAWN_EGG
Items mL GHAST_SPAWN_EGG
Items mM GUARDIAN_SPAWN_EGG
Items mN HORSE_SPAWN_EGG
Items mO HUSK_SPAWN_EGG
Items mP LLAMA_SPAWN_EGG
Items mQ MAGMA_CUBE_SPAWN_EGG
Items mR MOOSHROOM_SPAWN_EGG
Items mS MULE_SPAWN_EGG
Items mT OCELOT_SPAWN_EGG
Items mU PANDA_SPAWN_EGG
Items mV PARROT_SPAWN_EGG
Items mW PHANTOM_SPAWN_EGG
Items mX PIG_SPAWN_EGG
Items mY PILLAGER_SPAWN_EGG
Items mZ POLAR_BEAR_SPAWN_EGG
Items ma MELON_SEEDS
Items mb BEEF
Items mc COOKED_BEEF
Items md CHICKEN
Items me COOKED_CHICKEN
Items mf ROTTEN_FLESH
Items mg ENDER_PEARL
Items mh BLAZE_ROD
Items mi GHAST_TEAR
Items mj GOLD_NUGGET
Items mk NETHER_WART
Items ml POTION
Items mm GLASS_BOTTLE
Items mn SPIDER_EYE
Items mo FERMENTED_SPIDER_EYE
Items mp BLAZE_POWDER
Items mq MAGMA_CREAM
Items mt ENDER_EYE
Items mu GLISTERING_MELON_SLICE
Items mv BAT_SPAWN_EGG
Items mw BLAZE_SPAWN_EGG
Items mx CAT_SPAWN_EGG
Items my CAVE_SPIDER_SPAWN_EGG
Items mz CHICKEN_SPAWN_EGG
Items nA ZOMBIE_VILLAGER_SPAWN_EGG
Items nB EXPERIENCE_BOTTLE
Items nC FIRE_CHARGE
Items nD WRITABLE_BOOK
Items nE WRITTEN_BOOK
Items nF EMERALD
Items nG ITEM_FRAME
Items nI CARROT
Items nJ POTATO
Items nK BAKED_POTATO
Items nL POISONOUS_POTATO
Items nM MAP
Items nN GOLDEN_CARROT
Items nO SKELETON_SKULL
Items nP WITHER_SKELETON_SKULL
Items nQ PLAYER_HEAD
Items nR ZOMBIE_HEAD
Items nS CREEPER_HEAD
Items nT DRAGON_HEAD
Items nU CARROT_ON_A_STICK
Items nV NETHER_STAR
Items nW PUMPKIN_PIE
Items nX FIREWORK_ROCKET
Items nY FIREWORK_STAR
Items nZ ENCHANTED_BOOK
Items na PUFFERFISH_SPAWN_EGG
Items nb RABBIT_SPAWN_EGG
Items nc RAVAGER_SPAWN_EGG
Items nd SALMON_SPAWN_EGG
Items ne SHEEP_SPAWN_EGG
Items nf SHULKER_SPAWN_EGG
Items ng SILVERFISH_SPAWN_EGG
Items nh SKELETON_SPAWN_EGG
Items ni SKELETON_HORSE_SPAWN_EGG
Items nj SLIME_SPAWN_EGG
Items nk SPIDER_SPAWN_EGG
Items nl SQUID_SPAWN_EGG
Items nm STRAY_SPAWN_EGG
Items nn TRADER_LLAMA_SPAWN_EGG
Items no TROPICAL_FISH_SPAWN_EGG
Items np TURTLE_SPAWN_EGG
Items nq VEX_SPAWN_EGG
Items nr VILLAGER_SPAWN_EGG
Items ns VINDICATOR_SPAWN_EGG
Items nt WANDERING_TRADER_SPAWN_EGG
Items nu WITCH_SPAWN_EGG
Items nv WITHER_SKELETON_SPAWN_EGG
Items nw WOLF_SPAWN_EGG
Items nx ZOMBIE_SPAWN_EGG
Items ny ZOMBIE_HORSE_SPAWN_EGG
Items nz ZOMBIE_PIGMAN_SPAWN_EGG
Items oA LIME_BANNER
Items oB PINK_BANNER
Items oC GRAY_BANNER
Items oD LIGHT_GRAY_BANNER
Items oE CYAN_BANNER
Items oF PURPLE_BANNER
Items oG BLUE_BANNER
Items oH BROWN_BANNER
Items oI GREEN_BANNER
Items oJ RED_BANNER
Items oK BLACK_BANNER
Items oL END_CRYSTAL
Items oM CHORUS_FRUIT
Items oN POPPED_CHORUS_FRUIT
Items oO BEETROOT
Items oP BEETROOT_SEEDS
Items oQ BEETROOT_SOUP
Items oR DRAGON_BREATH
Items oS SPLASH_POTION
Items oT SPECTRAL_ARROW
Items oU TIPPED_ARROW
Items oV LINGERING_POTION
Items oW SHIELD
Items oX ELYTRA
Items oY SPRUCE_BOAT
Items oZ BIRCH_BOAT
Items oa NETHER_BRICK
Items ob QUARTZ
Items oc TNT_MINECART
Items od HOPPER_MINECART
Items oe PRISMARINE_SHARD
Items of PRISMARINE_CRYSTALS
Items og RABBIT
Items oh COOKED_RABBIT
Items oi RABBIT_STEW
Items oj RABBIT_FOOT
Items ok RABBIT_HIDE
Items ol ARMOR_STAND
Items om IRON_HORSE_ARMOR
Items on GOLDEN_HORSE_ARMOR
Items oo DIAMOND_HORSE_ARMOR
Items op LEATHER_HORSE_ARMOR
Items oq LEAD
Items or NAME_TAG
Items os COMMAND_BLOCK_MINECART
Items ot MUTTON
Items ou COOKED_MUTTON
Items ov WHITE_BANNER
Items ow ORANGE_BANNER
Items ox MAGENTA_BANNER
Items oy LIGHT_BLUE_BANNER
Items oz YELLOW_BANNER
Items pB FLOWER_BANNER_PATTERN
Items pC CREEPER_BANNER_PATTERN
Items pD SKULL_BANNER_PATTERN
Items pE MOJANG_BANNER_PATTERN
Items pF GLOBE_BANNER_PATTERN
Items pR SWEET_BERRIES
Items pa JUNGLE_BOAT
Items pb ACACIA_BOAT
Items pc DARK_OAK_BOAT
Items pd TOTEM_OF_UNDYING
Items pe SHULKER_SHELL
Items pf IRON_NUGGET
Items pg KNOWLEDGE_BOOK
Items ph DEBUG_STICK
Items pi MUSIC_DISC_13
Items pj MUSIC_DISC_CAT
Items pk MUSIC_DISC_BLOCKS
Items pl MUSIC_DISC_CHIRP
Items pm MUSIC_DISC_FAR
Items pn MUSIC_DISC_MALL
Items po MUSIC_DISC_MELLOHI
Items pp MUSIC_DISC_STAL
Items pq MUSIC_DISC_STRAD
Items pr MUSIC_DISC_WARD
Items ps MUSIC_DISC_11
Items pt MUSIC_DISC_WAIT
Items pu TRIDENT
Items pv PHANTOM_MEMBRANE
Items pw NAUTILUS_SHELL
Items px HEART_OF_THE_SEA
Items py CROSSBOW
Items pz SUSPICIOUS_STEW
JsonList a ()[Ljava/lang/String; getEntries
JsonList a (LJsonListEntry;)V add
JsonList b ()Z isEnabled
JsonList b (Ljava/lang/Object;)LJsonListEntry; get
JsonList c (Ljava/lang/Object;)V remove
JsonList d ()Z isEmpty
JsonList f ()V save
JsonList g ()V load
JsonListEntry f ()Z hasExpired
JsonListEntry g ()Ljava/lang/Object; getKey
LayerIsland a INSTANCE
LightEngineLayerEventListener$Void a INSTANCE
LightEngineThreaded z_ ()V queueUpdate
LightEngineThreaded$Update a PRE_UPDATE
LightEngineThreaded$Update b POST_UPDATE
LoginListener a networkManager
LoginListener b ()V tick
LoginListener b (LIChatBaseComponent;)V disconnect
LoginListener d random
LoginListener f server
LoginListener k loginKey
LoginListener$EnumProtocolState a HELLO
LoginListener$EnumProtocolState b KEY
LoginListener$EnumProtocolState c AUTHENTICATING
LoginListener$EnumProtocolState d NEGOTIATING
LoginListener$EnumProtocolState e READY_TO_ACCEPT
LoginListener$EnumProtocolState f DELAY_ACCEPT
LoginListener$EnumProtocolState g ACCEPTED
LootContextParameterSets a EMPTY
LootContextParameterSets b CHEST
LootContextParameterSets c FISHING
LootContextParameterSets d ENTITY
LootContextParameterSets e GIFT
LootContextParameterSets f ADVANCEMENT_REWARD
LootContextParameterSets g GENERIC
LootContextParameterSets h BLOCK
LootContextParameters a THIS_ENTITY
LootContextParameters b LAST_DAMAGE_PLAYER
LootContextParameters c DAMAGE_SOURCE
LootContextParameters d KILLER_ENTITY
LootContextParameters e DIRECT_KILLER_ENTITY
LootContextParameters f POSITION
LootContextParameters g BLOCK_STATE
LootContextParameters h BLOCK_ENTITY
LootContextParameters i TOOL
LootContextParameters j EXPLOSION_RADIUS
LootItemFunctionCopyNBT$Action a REPLACE
LootItemFunctionCopyNBT$Action b APPEND
LootItemFunctionCopyNBT$Action c MERGE
LootItemFunctionCopyNBT$Source a THIS
LootItemFunctionCopyNBT$Source b KILLER
LootItemFunctionCopyNBT$Source c KILLER_PLAYER
LootItemFunctionCopyNBT$Source d BLOCK_ENTITY
LootItemFunctionCopyName$Source a THIS
LootItemFunctionCopyName$Source b KILLER
LootItemFunctionCopyName$Source c KILLER_PLAYER
LootItemFunctionCopyName$Source d BLOCK_ENTITY
LootTable a ()LLootContextParameterSet; getLootContextParameterSet
LootTable a (LIInventory;LLootTableInfo;)V fillInventory
LootTable a (LLootTableInfo;)Ljava/util/List; populateLoot
LootTable a (LLootTableInfo;Ljava/util/function/Consumer;)V populateLootDirect
LootTable b (LLootTableInfo;Ljava/util/function/Consumer;)V populateLoot
LootTableInfo a (LLootContextParameter;)Z hasContextParameter
LootTableInfo c (LLootContextParameter;)Ljava/lang/Object; getContextParameter
LootTableInfo$Builder a (LLootContextParameter;Ljava/lang/Object;)LLootTableInfo$Builder; set
LootTableInfo$Builder a (LLootContextParameterSet;)LLootTableInfo; build
LootTableInfo$Builder b (LLootContextParameter;Ljava/lang/Object;)LLootTableInfo$Builder; setOptional
LootTableInfo$EntityTarget a THIS
LootTableInfo$EntityTarget b KILLER
LootTableInfo$EntityTarget c DIRECT_KILLER
LootTableInfo$EntityTarget d KILLER_PLAYER
LootTableRegistry a (LMinecraftKey;)LLootTable; getLootTable
MapIcon a ()B getType
MapIcon a type
MapIcon b ()LMapIcon$Type; getType
MapIcon b x
MapIcon c ()B getX
MapIcon c y
MapIcon d ()B getY
MapIcon d rotation
MapIcon e ()B getRotation
MapIcon e name
MapIcon g ()LIChatBaseComponent; getName
MapIcon$Type A RED_X
MapIcon$Type a PLAYER
MapIcon$Type b FRAME
MapIcon$Type c RED_MARKER
MapIcon$Type d BLUE_MARKER
MapIcon$Type e TARGET_X
MapIcon$Type f TARGET_POINT
MapIcon$Type g PLAYER_OFF_MAP
MapIcon$Type h PLAYER_OFF_LIMITS
MapIcon$Type i MANSION
MapIcon$Type j MONUMENT
MapIcon$Type k BANNER_WHITE
MapIcon$Type l BANNER_ORANGE
MapIcon$Type m BANNER_MAGENTA
MapIcon$Type n BANNER_LIGHT_BLUE
MapIcon$Type o BANNER_YELLOW
MapIcon$Type p BANNER_LIME
MapIcon$Type q BANNER_PINK
MapIcon$Type r BANNER_GRAY
MapIcon$Type s BANNER_LIGHT_GRAY
MapIcon$Type t BANNER_CYAN
MapIcon$Type u BANNER_PURPLE
MapIcon$Type v BANNER_BLUE
MapIcon$Type w BANNER_BROWN
MapIcon$Type x BANNER_GREEN
MapIcon$Type y BANNER_RED
MapIcon$Type z BANNER_BLACK
Material A CLOTH
Material B TNT
Material C LEAVES
Material D SHATTERABLE
Material E ICE
Material F CACTUS
Material G STONE
Material H ORE
Material I SNOW_BLOCK
Material J HEAVY
Material K BANNER
Material L PISTON
Material M CORAL
Material N PUMPKIN
Material O DRAGON_EGG
Material P CAKE
Material T canBurn
Material a ()Z isLiquid
Material a AIR
Material b ()Z isBuildable
Material b STRUCTURE_VOID
Material c ()Z isSolid
Material c PORTAL
Material d ()Z isBurnable
Material d WOOL
Material e ()Z isReplaceable
Material e PLANT
Material f WATER_PLANT
Material g ()Z isAlwaysDestroyable
Material g REPLACEABLE_PLANT
Material h ()LEnumPistonReaction; getPushReaction
Material h REPLACEABLE_WATER_PLANT
Material i WATER
Material j BUBBLE_COLUMN
Material k LAVA
Material l PACKED_ICE
Material m FIRE
Material n ORIENTABLE
Material o WEB
Material p BUILDABLE_GLASS
Material q CLAY
Material r EARTH
Material s GRASS
Material t SNOW_LAYER
Material u SAND
Material v SPONGE
Material w SHULKER_SHELL
Material x WOOD
Material y BAMBOO_SAPLING
Material z BAMBOO
MaterialMapColor ab rgb
MathHelper a (D)F sqrt
MathHelper a (F)F sin
MathHelper a (III)I clamp
MathHelper a (Ljava/util/Random;II)I nextInt
MathHelper b (F)F cos
MathHelper c (D)I floor
MemoryModuleType A LAST_WORKED_AT_POI
MemoryModuleType a ()Ljava/util/Optional; getSerializer
MemoryModuleType a DUMMY
MemoryModuleType b HOME
MemoryModuleType c JOB_SITE
MemoryModuleType d MEETING_POINT
MemoryModuleType e SECONDARY_JOB_SITE
MemoryModuleType f MOBS
MemoryModuleType g VISIBLE_MOBS
MemoryModuleType h VISIBLE_VILLAGER_BABIES
MemoryModuleType i NEAREST_PLAYERS
MemoryModuleType j NEAREST_VISIBLE_PLAYER
MemoryModuleType k WALK_TARGET
MemoryModuleType l LOOK_TARGET
MemoryModuleType m INTERACTION_TARGET
MemoryModuleType n BREED_TARGET
MemoryModuleType o PATH
MemoryModuleType p INTERACTABLE_DOORS
MemoryModuleType q OPENED_DOORS
MemoryModuleType r NEAREST_BED
MemoryModuleType s HURT_BY
MemoryModuleType t HURT_BY_ENTITY
MemoryModuleType u NEAREST_HOSTILE
MemoryModuleType v HIDING_PLACE
MemoryModuleType w HEARD_BELL_TIME
MemoryModuleType x CANT_REACH_WALK_TARGET_SINCE
MemoryModuleType y GOLEM_LAST_SEEN_TIME
MemoryModuleType z LAST_SLEPT
MemoryStatus a VALUE_PRESENT
MemoryStatus b VALUE_ABSENT
MemoryStatus c REGISTERED
MerchantRecipe a (I)V increaseSpecialPrice
MerchantRecipe a buyingItem1
MerchantRecipe b ()LItemStack; getBuyItem1
MerchantRecipe b (I)V setSpecialPrice
MerchantRecipe b buyingItem2
MerchantRecipe c ()LItemStack; getBuyItem2
MerchantRecipe c sellingItem
MerchantRecipe d ()LItemStack; getSellingItem
MerchantRecipe d uses
MerchantRecipe e maxUses
MerchantRecipe f rewardExp
MerchantRecipe g ()I getUses
MerchantRecipe g specialPrice
MerchantRecipe h ()V resetUses
MerchantRecipe h demand
MerchantRecipe i ()I getMaxUses
MerchantRecipe i priceMultiplier
MerchantRecipe j ()V increaseUses
MerchantRecipe j xp
MerchantRecipe l ()V setSpecialPrice
MerchantRecipe m ()I getSpecialPrice
MerchantRecipe n ()F getPriceMultiplier
MerchantRecipe o ()I getXp
MerchantRecipe p ()Z isFullyUsed
MerchantRecipe r ()Z isRewardExp
MinecraftEncryption a (ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher; a
MinecraftEncryption a (ILjava/security/Key;)Ljavax/crypto/Cipher; a
MinecraftEncryption a (Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B a
MinecraftEncryption a (Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey; a
MinecraftKey a ()Ljava/lang/String; getKey
MinecraftKey a namespace
MinecraftKey b ()Ljava/lang/String; getNamespace
MinecraftKey b key
MobEffect a ()LMobEffectList; getMobEffect
MobEffect a (LEntityLiving;)Z tick
MobEffect b ()I getDuration
MobEffect c ()I getAmplifier
MobEffect c duration
MobEffect d ()Z isAmbient
MobEffect d amplification
MobEffect e ()Z isShowParticles
MobEffect e splash
MobEffect f ambient
MobEffectInfo a BENEFICIAL
MobEffectInfo b HARMFUL
MobEffectInfo c NEUTRAL
MobEffectList a ()Z isInstant
MobEffectList a (I)LMobEffectList; fromId
MobEffectList a (LEntity;LEntity;LEntityLiving;ID)V applyInstantEffect
MobEffectList a (LEntityLiving;I)V tick
MobEffectList a (LMobEffectList;)I getId
MobEffectList f ()I getColor
MobEffects A UNLUCK
MobEffects B SLOW_FALLING
MobEffects C CONDUIT_POWER
MobEffects D DOLPHINS_GRACE
MobEffects E BAD_OMEN
MobEffects F HERO_OF_THE_VILLAGE
MobEffects a FASTER_MOVEMENT
MobEffects b SLOWER_MOVEMENT
MobEffects c FASTER_DIG
MobEffects d SLOWER_DIG
MobEffects e INCREASE_DAMAGE
MobEffects f HEAL
MobEffects g HARM
MobEffects h JUMP
MobEffects i CONFUSION
MobEffects j REGENERATION
MobEffects k RESISTANCE
MobEffects l FIRE_RESISTANCE
MobEffects m WATER_BREATHING
MobEffects n INVISIBILITY
MobEffects o BLINDNESS
MobEffects p NIGHT_VISION
MobEffects q HUNGER
MobEffects r WEAKNESS
MobEffects s POISON
MobEffects t WITHER
MobEffects u HEALTH_BOOST
MobEffects v ABSORBTION
MobEffects w SATURATION
MobEffects x GLOWING
MobEffects y LEVITATION
MobEffects z LUCK
MobSpawnerAbstract a (LEntityTypes;)V setMobName
MobSpawnerAbstract a (LMobSpawnerData;)V setSpawnData
MobSpawnerAbstract b spawnDelay
MobSpawnerAbstract c mobs
MobSpawnerAbstract d spawnData
MobSpawnerAbstract g ()LMinecraftKey; getMobName
MobSpawnerAbstract g minSpawnDelay
MobSpawnerAbstract h maxSpawnDelay
MobSpawnerAbstract i spawnCount
MobSpawnerAbstract k maxNearbyEntities
MobSpawnerAbstract l requiredPlayerRange
MobSpawnerAbstract m spawnRange
MobSpawnerData b ()LNBTTagCompound; getEntity
MobSpawnerData b entity
MojangsonParser a (Ljava/lang/String;)LNBTTagCompound; parse
MojangsonParser b (Ljava/lang/String;)LNBTBase; parseLiteral
MojangsonParser h ()LNBTBase; parseArray
MovingObjectPosition a pos
MovingObjectPosition c ()LMovingObjectPosition$EnumMovingObjectType; getType
MovingObjectPosition e ()LVec3D; getPos
MovingObjectPosition$EnumMovingObjectType a MISS
MovingObjectPosition$EnumMovingObjectType b BLOCK
MovingObjectPosition$EnumMovingObjectType c ENTITY
MovingObjectPositionBlock a ()LBlockPosition; getBlockPosition
MovingObjectPositionBlock b ()LEnumDirection; getDirection
MovingObjectPositionEntity a ()LEntity; getEntity
NBTBase a ()B getTypeId
NBTBase a (B)LNBTBase; createTag
NBTBase a (Ljava/io/DataInput;ILNBTReadLimiter;)V load
NBTBase a (Ljava/io/DataOutput;)V write
NBTBase b ()LNBTBase; clone
NBTBase c_ ()Ljava/lang/String; asString
NBTBase isEmpty ()Z isEmpty
NBTList d (ILNBTBase;)LNBTBase; set
NBTNumber d ()J asLong
NBTNumber e ()I asInt
NBTNumber f ()S asShort
NBTNumber g ()B asByte
NBTNumber h ()D asDouble
NBTNumber i ()F asFloat
NBTTagByte f data
NBTTagByteArray c ()[B getBytes
NBTTagByteArray f data
NBTTagCompound a (Ljava/lang/String;B)V setByte
NBTTagCompound a (Ljava/lang/String;D)V setDouble
NBTTagCompound a (Ljava/lang/String;F)V setFloat
NBTTagCompound a (Ljava/lang/String;J)V setLong
NBTTagCompound a (Ljava/lang/String;LNBTBase;)LNBTBase; set
NBTTagCompound a (Ljava/lang/String;Ljava/lang/String;)V setString
NBTTagCompound a (Ljava/lang/String;S)V setShort
NBTTagCompound a (Ljava/lang/String;Z)V setBoolean
NBTTagCompound a (Ljava/lang/String;[B)V setByteArray
NBTTagCompound a (Ljava/lang/String;[I)V setIntArray
NBTTagCompound b (Ljava/lang/String;I)V setInt
NBTTagCompound c ()Ljava/util/Set; getKeys
NBTTagCompound c (Ljava/lang/String;)LNBTBase; get
NBTTagCompound c (Ljava/lang/String;I)Z hasKeyOfType
NBTTagCompound d (Ljava/lang/String;I)LNBTTagList; getList
NBTTagCompound e (Ljava/lang/String;)Z hasKey
NBTTagCompound f ()LNBTTagCompound; clone
NBTTagCompound f (Ljava/lang/String;)B getByte
NBTTagCompound g (Ljava/lang/String;)S getShort
NBTTagCompound h (Ljava/lang/String;)I getInt
NBTTagCompound h map
NBTTagCompound i (Ljava/lang/String;)J getLong
NBTTagCompound j (Ljava/lang/String;)F getFloat
NBTTagCompound k (Ljava/lang/String;)D getDouble
NBTTagCompound l (Ljava/lang/String;)Ljava/lang/String; getString
NBTTagCompound m (Ljava/lang/String;)[B getByteArray
NBTTagCompound n (Ljava/lang/String;)[I getIntArray
NBTTagCompound o (Ljava/lang/String;)[J getLongArray
NBTTagCompound p (Ljava/lang/String;)LNBTTagCompound; getCompound
NBTTagCompound q (Ljava/lang/String;)Z getBoolean
NBTTagCompound r (Ljava/lang/String;)V remove
NBTTagDouble f data
NBTTagFloat f data
NBTTagInt f data
NBTTagIntArray f ()[I getInts
NBTTagIntArray f data
NBTTagList a (I)LNBTTagCompound; getCompound
NBTTagList c (I)LNBTBase; remove
NBTTagList f list
NBTTagList g type
NBTTagList j (I)Ljava/lang/String; getString
NBTTagList size ()I size
NBTTagLong f data
NBTTagLongArray f ()[J getLongs
NBTTagShort f data
NBTTagString f data
NameReferencingFileConverter g (Lnet/minecraft/server/MinecraftServer;)Ljava/io/File; getPlayersFolder
NetworkManager a (I)V setCompressionLevel
NetworkManager a (LEnumProtocol;)V setProtocol
NetworkManager a (LIChatBaseComponent;)V close
NetworkManager a (LPacket;)V sendPacket
NetworkManager a (LPacket;Lio/netty/util/concurrent/GenericFutureListener;)V sendPacket
NetworkManager a (LPacketListener;)V setPacketListener
NetworkManager b ()Ljava/net/SocketAddress; getSocketAddress
NetworkManager c ()Z isLocal
NetworkManager g ()Z isConnected
NetworkManager i packetQueue
NetworkManager j channel
NetworkManager k ()V stopReading
NetworkManager k socketAddress
NetworkManager l ()V handleDisconnection
NetworkManager l packetListener
NibbleArray a ()[B asBytes
OperatorBoolean a FALSE
OperatorBoolean b NOT_OR
OperatorBoolean c ONLY_SECOND
OperatorBoolean d NOT_FIRST
OperatorBoolean e ONLY_FIRST
OperatorBoolean f NOT_SECOND
OperatorBoolean g NOT_SAME
OperatorBoolean h NOT_AND
OperatorBoolean i AND
OperatorBoolean j SAME
OperatorBoolean k SECOND
OperatorBoolean l CAUSES
OperatorBoolean m FIRST
OperatorBoolean n CAUSED_BY
OperatorBoolean o OR
OperatorBoolean p TRUE
PacketHandshakingInSetProtocol b hostname
PacketHandshakingInSetProtocol c port
PacketLoginInEncryptionBegin a (Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey; a
PacketPlayInAbilities c ()Z isFlying
PacketPlayInAdvancements$Status a OPENED_TAB
PacketPlayInAdvancements$Status b CLOSED_SCREEN
PacketPlayInBlockDig$EnumPlayerDigType a START_DESTROY_BLOCK
PacketPlayInBlockDig$EnumPlayerDigType b ABORT_DESTROY_BLOCK
PacketPlayInBlockDig$EnumPlayerDigType c STOP_DESTROY_BLOCK
PacketPlayInBlockDig$EnumPlayerDigType d DROP_ALL_ITEMS
PacketPlayInBlockDig$EnumPlayerDigType e DROP_ITEM
PacketPlayInBlockDig$EnumPlayerDigType f RELEASE_USE_ITEM
PacketPlayInBlockDig$EnumPlayerDigType g SWAP_HELD_ITEMS
PacketPlayInClientCommand$EnumClientCommand a PERFORM_RESPAWN
PacketPlayInClientCommand$EnumClientCommand b REQUEST_STATS
PacketPlayInCloseWindow a id
PacketPlayInCustomPayload b tag
PacketPlayInCustomPayload c data
PacketPlayInEntityAction b animation
PacketPlayInEntityAction$EnumPlayerAction a START_SNEAKING
PacketPlayInEntityAction$EnumPlayerAction b STOP_SNEAKING
PacketPlayInEntityAction$EnumPlayerAction c STOP_SLEEPING
PacketPlayInEntityAction$EnumPlayerAction d START_SPRINTING
PacketPlayInEntityAction$EnumPlayerAction e STOP_SPRINTING
PacketPlayInEntityAction$EnumPlayerAction f START_RIDING_JUMP
PacketPlayInEntityAction$EnumPlayerAction g STOP_RIDING_JUMP
PacketPlayInEntityAction$EnumPlayerAction h OPEN_INVENTORY
PacketPlayInEntityAction$EnumPlayerAction i START_FALL_FLYING
PacketPlayInFlying a x
PacketPlayInFlying b y
PacketPlayInFlying c z
PacketPlayInFlying d yaw
PacketPlayInFlying e pitch
PacketPlayInFlying g hasPos
PacketPlayInFlying h hasLook
PacketPlayInHeldItemSlot a itemInHandIndex
PacketPlayInRecipeDisplayed$Status a SHOWN
PacketPlayInRecipeDisplayed$Status b SETTINGS
PacketPlayInResourcePackStatus a status
PacketPlayInResourcePackStatus$EnumResourcePackStatus a SUCCESSFULLY_LOADED
PacketPlayInResourcePackStatus$EnumResourcePackStatus b DECLINED
PacketPlayInResourcePackStatus$EnumResourcePackStatus c FAILED_DOWNLOAD
PacketPlayInResourcePackStatus$EnumResourcePackStatus d ACCEPTED
PacketPlayInSetCreativeSlot a slot
PacketPlayInSetCreativeSlot c ()LItemStack; getItemStack
PacketPlayInSettings b viewDistance
PacketPlayInSettings g ()LEnumMainHand; getMainHand
PacketPlayInUseEntity b action
PacketPlayInUseEntity$EnumEntityUseAction a INTERACT
PacketPlayInUseEntity$EnumEntityUseAction b ATTACK
PacketPlayInUseEntity$EnumEntityUseAction c INTERACT_AT
PacketPlayInVehicleMove b ()D getX
PacketPlayInVehicleMove c ()D getY
PacketPlayInVehicleMove d ()D getZ
PacketPlayInVehicleMove e ()F getYaw
PacketPlayInVehicleMove f ()F getPitch
PacketPlayInWindowClick b slot
PacketPlayInWindowClick c button
PacketPlayInWindowClick e item
PacketPlayInWindowClick f shift
PacketPlayOutBlockChange b block
PacketPlayOutBoss$Action a ADD
PacketPlayOutBoss$Action b REMOVE
PacketPlayOutBoss$Action c UPDATE_PCT
PacketPlayOutBoss$Action d UPDATE_NAME
PacketPlayOutBoss$Action e UPDATE_STYLE
PacketPlayOutBoss$Action f UPDATE_PROPERTIES
PacketPlayOutCombatEvent$EnumCombatEventType a ENTER_COMBAT
PacketPlayOutCombatEvent$EnumCombatEventType b END_COMBAT
PacketPlayOutCombatEvent$EnumCombatEventType c ENTITY_DIED
PacketPlayOutPlayerInfo$EnumPlayerInfoAction a ADD_PLAYER
PacketPlayOutPlayerInfo$EnumPlayerInfoAction b UPDATE_GAME_MODE
PacketPlayOutPlayerInfo$EnumPlayerInfoAction c UPDATE_LATENCY
PacketPlayOutPlayerInfo$EnumPlayerInfoAction d UPDATE_DISPLAY_NAME
PacketPlayOutPlayerInfo$EnumPlayerInfoAction e REMOVE_PLAYER
PacketPlayOutPlayerListHeaderFooter a header
PacketPlayOutPlayerListHeaderFooter b footer
PacketPlayOutPosition$EnumPlayerTeleportFlags a X
PacketPlayOutPosition$EnumPlayerTeleportFlags b Y
PacketPlayOutPosition$EnumPlayerTeleportFlags c Z
PacketPlayOutPosition$EnumPlayerTeleportFlags d Y_ROT
PacketPlayOutPosition$EnumPlayerTeleportFlags e X_ROT
PacketPlayOutRecipes$Action a INIT
PacketPlayOutRecipes$Action b ADD
PacketPlayOutRecipes$Action c REMOVE
PacketPlayOutSpawnPosition a position
PacketPlayOutTitle$EnumTitleAction a TITLE
PacketPlayOutTitle$EnumTitleAction b SUBTITLE
PacketPlayOutTitle$EnumTitleAction c ACTIONBAR
PacketPlayOutTitle$EnumTitleAction d TIMES
PacketPlayOutTitle$EnumTitleAction e CLEAR
PacketPlayOutTitle$EnumTitleAction f RESET
PacketPlayOutWorldBorder$EnumWorldBorderAction a SET_SIZE
PacketPlayOutWorldBorder$EnumWorldBorderAction b LERP_SIZE
PacketPlayOutWorldBorder$EnumWorldBorderAction c SET_CENTER
PacketPlayOutWorldBorder$EnumWorldBorderAction d INITIALIZE
PacketPlayOutWorldBorder$EnumWorldBorderAction e SET_WARNING_TIME
PacketPlayOutWorldBorder$EnumWorldBorderAction f SET_WARNING_BLOCKS
PacketStatusListener b minecraftServer
PacketStatusListener c networkManager
Paintings a ()I getWidth
Paintings b ()I getHeight
ParticleParam b ()LParticle; getParticle
Particles A FLAME
Particles B FLASH
Particles C HAPPY_VILLAGER
Particles D COMPOSTER
Particles E HEART
Particles F INSTANT_EFFECT
Particles G ITEM
Particles H ITEM_SLIME
Particles I ITEM_SNOWBALL
Particles J LARGE_SMOKE
Particles K LAVA
Particles L MYCELIUM
Particles M NOTE
Particles N POOF
Particles O PORTAL
Particles P RAIN
Particles Q SMOKE
Particles R SNEEZE
Particles S SPIT
Particles T SQUID_INK
Particles U SWEEP_ATTACK
Particles V TOTEM_OF_UNDYING
Particles W UNDERWATER
Particles X SPLASH
Particles Y WITCH
Particles Z BUBBLE_POP
Particles a AMBIENT_ENTITY_EFFECT
Particles aa CURRENT_DOWN
Particles ab BUBBLE_COLUMN_UP
Particles ac NAUTILUS
Particles ad DOLPHIN
Particles ae CAMPFIRE_COSY_SMOKE
Particles af CAMPFIRE_SIGNAL_SMOKE
Particles b ANGRY_VILLAGER
Particles c BARRIER
Particles d BLOCK
Particles e BUBBLE
Particles f CLOUD
Particles g CRIT
Particles h DAMAGE_INDICATOR
Particles i DRAGON_BREATH
Particles j DRIPPING_LAVA
Particles k FALLING_LAVA
Particles l LANDING_LAVA
Particles m DRIPPING_WATER
Particles n FALLING_WATER
Particles o DUST
Particles p EFFECT
Particles q ELDER_GUARDIAN
Particles r ENCHANTED_HIT
Particles s ENCHANT
Particles t END_ROD
Particles u ENTITY_EFFECT
Particles v EXPLOSION_EMITTER
Particles w EXPLOSION
Particles x FALLING_DUST
Particles y FIREWORK
Particles z FISHING
PathMode a LAND
PathMode b WATER
PathMode c AIR
PathType a BLOCKED
PathType b OPEN
PathType c WALKABLE
PathType d TRAPDOOR
PathType e FENCE
PathType f LAVA
PathType g WATER
PathType h WATER_BORDER
PathType i RAIL
PathType j DANGER_FIRE
PathType k DAMAGE_FIRE
PathType l DANGER_CACTUS
PathType m DAMAGE_CACTUS
PathType n DANGER_OTHER
PathType o DAMAGE_OTHER
PathType p DOOR_OPEN
PathType q DOOR_WOOD_CLOSED
PathType r DOOR_IRON_CLOSED
PathType s BREACH
PathType t LEAVES
PathfinderGoal$Type a MOVE
PathfinderGoal$Type b LOOK
PathfinderGoal$Type c JUMP
PathfinderGoal$Type d TARGET
PathfinderGoalBoat a GO_TO_BOAT
PathfinderGoalBoat b GO_IN_BOAT_DIRECTION
PathfinderGoalBreed a animal
PathfinderGoalBreed c partner
PathfinderGoalCrossbowAttack$State a UNCHARGED
PathfinderGoalCrossbowAttack$State b CHARGING
PathfinderGoalCrossbowAttack$State c CHARGED
PathfinderGoalCrossbowAttack$State d READY_TO_ATTACK
PathfinderGoalDoorInteract d entity
PathfinderGoalDoorInteract e door
PathfinderGoalRandomStroll a (I)V setTimeBetweenMovement
PathfinderGoalRemoveBlock h entity
PathfinderGoalSelector a ()V doTick
PathfinderGoalSit a (Z)V setSitting
PathfinderGoalSit a entity
PathfinderGoalSit b willSit
PathfinderGoalTame a entity
PathfinderGoalTempt b target
PersistentBase b id
PersistentBase d ()Ljava/lang/String; getId
PistonExtendsChecker c ()Ljava/util/List; getMovedBlocks
PistonExtendsChecker d ()Ljava/util/List; getBrokenBlocks
PlayerAbilities a isInvulnerable
PlayerAbilities b isFlying
PlayerAbilities c canFly
PlayerAbilities d canInstantlyBuild
PlayerAbilities e mayBuild
PlayerAbilities f flySpeed
PlayerAbilities g walkSpeed
PlayerChunk a (LChunkStatus;)Ljava/util/concurrent/CompletableFuture; getStatusFutureUnchecked
PlayerChunk a UNLOADED_CHUNK_ACCESS
PlayerChunk b (I)LChunkStatus; getChunkStatus
PlayerChunk b UNLOADED_CHUNK_ACCESS_FUTURE
PlayerChunk c (I)LPlayerChunk$State; getChunkState
PlayerChunk c UNLOADED_CHUNK
PlayerChunk d ()LChunk; getChunk
PlayerChunk d UNLOADED_CHUNK_FUTURE
PlayerChunk e CHUNK_STATUSES
PlayerChunk f CHUNK_STATES
PlayerChunk g ()Ljava/util/concurrent/CompletableFuture; getChunkSave
PlayerChunk g statusFutures
PlayerChunk h fullChunkFuture
PlayerChunk i tickingFuture
PlayerChunk j ()I getTicketLevel
PlayerChunk j entityTickingFuture
PlayerChunk k chunkSave
PlayerChunk l ()Z hasBeenLoaded
PlayerChunk l oldTicketLevel
PlayerChunk m ticketLevel
PlayerChunk o location
PlayerChunk p dirtyBlocks
PlayerChunk q dirtyCount
PlayerChunk v lightEngine
PlayerChunk x players
PlayerChunk y hasBeenLoaded
PlayerChunk$State a (LPlayerChunk$State;)Z isAtLeast
PlayerChunk$State a INACCESSIBLE
PlayerChunk$State b BORDER
PlayerChunk$State c TICKING
PlayerChunk$State d ENTITY_TICKING
PlayerChunkMap B viewDistance
PlayerChunkMap a (I)V setViewDistance
PlayerChunkMap a (J)LPlayerChunk; getUpdatingChunk
PlayerChunkMap a (LEntity;)V addEntity
PlayerChunkMap a (LEntity;LPacket;)V broadcast
PlayerChunkMap a (LEntityPlayer;)V movePlayer
PlayerChunkMap a (LEntityPlayer;LChunkCoordIntPair;[LPacket;ZZ)V sendChunk
PlayerChunkMap a (LIChunkAccess;)Z saveChunk
PlayerChunkMap a (Ljava/util/function/BooleanSupplier;)V unloadChunks
PlayerChunkMap a (Z)V save
PlayerChunkMap a GOLDEN_TICKET
PlayerChunkMap b (J)LPlayerChunk; getVisibleChunk
PlayerChunkMap b (LEntity;)V removeEntity
PlayerChunkMap b (LEntity;LPacket;)V broadcastIncludingSelf
PlayerChunkMap d (LChunkCoordIntPair;)Z isOutsideOfRange
PlayerChunkMap e updatingChunks
PlayerChunkMap f visibleChunks
PlayerChunkMap g (LChunkCoordIntPair;)LNBTTagCompound; readChunkData
PlayerChunkMap g pendingUnload
PlayerChunkMap h loadedChunks
PlayerChunkMap i world
PlayerChunkMap j lightEngine
PlayerChunkMap k executor
PlayerChunkMap l chunkGenerator
PlayerChunkMap o unloadQueue
PlayerChunkMap p updatingChunksModified
PlayerChunkMap r mailboxWorldGen
PlayerChunkMap s mailboxMain
PlayerChunkMap t worldLoadListener
PlayerChunkMap u chunkDistanceManager
PlayerChunkMap w definedStructureManager
PlayerChunkMap y playerMap
PlayerChunkMap z trackedEntities
PlayerChunkMap$EntityTracker a (LEntityPlayer;)V clear
PlayerChunkMap$EntityTracker a (LPacket;)V broadcast
PlayerChunkMap$EntityTracker a (Ljava/util/List;)V track
PlayerChunkMap$EntityTracker b (LEntityPlayer;)V updatePlayer
PlayerChunkMap$EntityTracker b (LPacket;)V broadcastIncludingSelf
PlayerChunkMap$EntityTracker b trackerEntry
PlayerChunkMap$EntityTracker c tracker
PlayerChunkMap$EntityTracker d trackingDistance
PlayerChunkMap$EntityTracker f trackedPlayers
PlayerConnection F receivedMovePackets
PlayerConnection G processedMovePackets
PlayerConnection a (LPacket;)V sendPacket
PlayerConnection a networkManager
PlayerConnection b ()V tick
PlayerConnection b (LIChatBaseComponent;)V disconnect
PlayerConnection b player
PlayerConnection c ()V syncPosition
PlayerConnection c (Ljava/lang/String;)V handleCommand
PlayerConnection d ()Z isExemptPlayer
PlayerConnection d minecraftServer
PlayerConnection f lastKeepAlive
PlayerConnection g awaitingKeepAlive
PlayerConnection i chatThrottle
PlayerConnection y teleportPos
PlayerConnection z teleportAwait
PlayerConnectionUtils a (LPacket;LPacketListener;LIAsyncTaskHandler;)V ensureMainThread
PlayerConnectionUtils a (LPacket;LPacketListener;LWorldServer;)V ensureMainThread
PlayerInteractManager a (LBlockPosition;)Z breakBlock
PlayerInteractManager a (LEnumGamemode;)V setGameMode
PlayerInteractManager a world
PlayerInteractManager b ()LEnumGamemode; getGameMode
PlayerInteractManager b player
PlayerInteractManager d ()Z isCreative
PlayerInteractManager d gamemode
PlayerInteractManager f lastDigTick
PlayerInteractManager h currentTick
PlayerInventory a items
PlayerInventory b armor
PlayerInventory c extraSlots
PlayerInventory d (LItemStack;)I firstPartial
PlayerInventory d itemInHandIndex
PlayerInventory e (LItemStack;)Z pickup
PlayerInventory e player
PlayerInventory f ()LItemStack; getItemInHand
PlayerInventory g ()I getHotbarSize
PlayerInventory g (LItemStack;)V setCarried
PlayerInventory g carried
PlayerInventory h ()I getFirstEmptySlotIndex
PlayerInventory k ()V dropContents
PlayerInventory m ()LItemStack; getCarried
PlayerList a ()V reloadWhitelist
PlayerList a (LEntityHuman;)LServerStatisticManager; getStatisticManager
PlayerList a (LEntityHuman;DDDDLDimensionManager;LPacket;)V sendPacketNearby
PlayerList a (LEntityPlayer;LDimensionManager;Z)LEntityPlayer; moveToWorld
PlayerList a (LIChatBaseComponent;)V sendMessage
PlayerList a (LIChatBaseComponent;Z)V sendMessage
PlayerList a (LPacket;)V sendAll
PlayerList a (LScoreboardServer;LEntityPlayer;)V sendScoreboard
PlayerList a (LWorldServer;)V setPlayerFileData
PlayerList a (Lcom/mojang/authlib/GameProfile;)V addOp
PlayerList a (Ljava/lang/String;)LEntityPlayer; getPlayer
PlayerList a (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)LIChatBaseComponent; attemptLogin
PlayerList a (Z)V setHasWhitelist
PlayerList b (LEntityPlayer;)V savePlayerFile
PlayerList b (Lcom/mojang/authlib/GameProfile;)V removeOp
PlayerList c ()Lnet/minecraft/server/MinecraftServer; getServer
PlayerList c (LEntityPlayer;)V disconnect
PlayerList d ()V tick
PlayerList e (LEntityPlayer;)V updateClient
PlayerList e (Lcom/mojang/authlib/GameProfile;)Z isWhitelisted
PlayerList e maxPlayers
PlayerList g ()LGameProfileBanList; getProfileBans
PlayerList g (Lcom/mojang/authlib/GameProfile;)LEntityPlayer; processLogin
PlayerList h ()LIpBanList; getIPBans
PlayerList h (Lcom/mojang/authlib/GameProfile;)Z isOp
PlayerList h server
PlayerList i ()V savePlayers
PlayerList i players
PlayerList j ()LWhiteList; getWhitelist
PlayerList k ()[Ljava/lang/String; getWhitelisted
PlayerList l ()LOpList; getOPs
PlayerList m operators
PlayerList n ()I getPlayerCount
PlayerList n whitelist
PlayerList o ()I getMaxPlayers
PlayerList p ()Z getHasWhitelist
PlayerList q ()I getViewDistance
PlayerList q playerFileData
PlayerList r hasWhitelist
PlayerList s ()V shutdown
PlayerList s viewDistance
PlayerList t ()Ljava/util/List; getPlayers
PlayerList u ()V reload
PlayerListBox a ()V tick
PortalTravelAgent c world
PotionUtil a (LItemStack;)Ljava/util/List; getEffects
Potions A STRONG_HEALING
Potions B HARMING
Potions C STRONG_HARMING
Potions D POISON
Potions E LONG_POISON
Potions F STRONG_POISON
Potions G REGENERATION
Potions H LONG_REGENERATION
Potions I STRONG_REGENERATION
Potions J STRENGTH
Potions K LONG_STRENGTH
Potions L STRONG_STRENGTH
Potions M WEAKNESS
Potions N LONG_WEAKNESS
Potions O LUCK
Potions P SLOW_FALLING
Potions Q LONG_SLOW_FALLING
Potions a EMPTY
Potions b WATER
Potions c MUNDANE
Potions d THICK
Potions e AWKWARD
Potions f NIGHT_VISION
Potions g LONG_NIGHT_VISION
Potions h INVISIBILITY
Potions i LONG_INVISIBILITY
Potions j LEAPING
Potions k LONG_LEAPING
Potions l STRONG_LEAPING
Potions m FIRE_RESISTANCE
Potions n LONG_FIRE_RESISTANCE
Potions o SWIFTNESS
Potions p LONG_SWIFTNESS
Potions q STRONG_SWIFTNESS
Potions r SLOWNESS
Potions s LONG_SLOWNESS
Potions t STRONG_SLOWNESS
Potions u TURTLE_MASTER
Potions v LONG_TURTLE_MASTER
Potions w STRONG_TURTLE_MASTER
Potions x WATER_BREATHING
Potions y LONG_WATER_BREATHING
Potions z HEALING
PropertyManager a (Ljava/lang/String;I)I getInt
PropertyManager a (Ljava/lang/String;J)J getLong
PropertyManager a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getString
PropertyManager a (Ljava/lang/String;Z)Z getBoolean
PropertyManager b (Ljava/nio/file/Path;)Ljava/util/Properties; loadPropertiesFile
PropertyManager b (Ljava/util/Properties;)LPropertyManager; reload
PropertyManager b properties
PropertyManager c (Ljava/nio/file/Path;)V savePropertiesFile
PropertyManager$EditableProperty a (Ljava/lang/Object;)LPropertyManager; set
Raid$Status a ONGOING
Raid$Status b VICTORY
Raid$Status c LOSS
Raid$Status d STOPPED
Raid$Wave a VINDICATOR
Raid$Wave b EVOKER
Raid$Wave c PILLAGER
Raid$Wave d WITCH
Raid$Wave e RAVAGER
RayTrace$BlockCollisionOption a COLLIDER
RayTrace$BlockCollisionOption b OUTLINE
RayTrace$FluidCollisionOption a NONE
RayTrace$FluidCollisionOption b SOURCE_ONLY
RayTrace$FluidCollisionOption c ANY
RayTrace$FluidCollisionOption d predicate
RecipeBookServer i ()LNBTTagCompound; save
RecipeCooking b key
RecipeCooking c group
RecipeCooking d ingredient
RecipeCooking e result
RecipeCooking f experience
RecipeCooking g cookingTime
RecipeItemStack d choices
RecipeItemStack f ()V buildChoices
RecipeSingleItem a ingredient
RecipeSingleItem b result
RecipeSingleItem c key
RecipeSingleItem d group
Recipes a CRAFTING
Recipes b SMELTING
Recipes c BLASTING
Recipes d SMOKING
Recipes e CAMPFIRE_COOKING
Recipes f STONECUTTING
RegionFile close ()V close
RegionFile e (LChunkCoordIntPair;)I getOffset
RegionFileCache a (LChunkCoordIntPair;LNBTTagCompound;)V write
RegionFileCache c cache
RegionFileCache e (LChunkCoordIntPair;)LNBTTagCompound; read
Registry a (I)Ljava/lang/Object; fromId
RegistryBlockID a (I)Ljava/lang/Object; fromId
RegistryBlockID a (Ljava/lang/Object;)I getId
RegistryID a (I)Ljava/lang/Object; fromId
RegistryID a (Ljava/lang/Object;)I getId
RemoteControlCommandListener b buffer
RemoteControlCommandListener c server
RemoteControlCommandListener d ()V clearMessages
RemoteControlCommandListener e ()Ljava/lang/String; getMessages
RemoteControlCommandListener f ()LCommandListenerWrapper; getWrapper
RemoteStatusListener$RemoteStatusChallenge b time
RemoteStatusListener$RemoteStatusChallenge c token
RemoteStatusListener$RemoteStatusChallenge d identity
ReputationType a MAJOR_NEGATIVE
ReputationType b MINOR_NEGATIVE
ReputationType c MINOR_POSITIVE
ReputationType d MAJOR_POSITIVE
ReputationType e TRADING
ResourcePackLoader$Position a TOP
ResourcePackLoader$Position b BOTTOM
ResourcePackSourceFolder b file
Schedule a EMPTY
Schedule b SIMPLE
Schedule c VILLAGER_BABY
Schedule d VILLAGER_DEFAULT
Scoreboard a (I)LScoreboardObjective; getObjectiveForSlot
Scoreboard a (ILScoreboardObjective;)V setDisplaySlot
Scoreboard a (LIScoreboardCriteria;Ljava/lang/String;Ljava/util/function/Consumer;)V getObjectivesForCriteria
Scoreboard a (LScoreboardObjective;)V handleObjectiveAdded
Scoreboard a (LScoreboardScore;)V handleScoreChanged
Scoreboard a (LScoreboardTeam;)V handleTeamAdded
Scoreboard a (Ljava/lang/String;)V handlePlayerRemoved
Scoreboard a (Ljava/lang/String;LIScoreboardCriteria;LIChatBaseComponent;LIScoreboardCriteria$EnumScoreboardHealthDisplay;)LScoreboardObjective; registerObjective
Scoreboard a (Ljava/lang/String;LScoreboardTeam;)Z addPlayerToTeam
Scoreboard a objectivesByName
Scoreboard b (I)Ljava/lang/String; getSlotName
Scoreboard b (LScoreboardObjective;)V handleObjectiveChanged
Scoreboard b (LScoreboardTeam;)V handleTeamChanged
Scoreboard b (Ljava/lang/String;LScoreboardTeam;)V removePlayerFromTeam
Scoreboard b objectivesByCriteria
Scoreboard c ()Ljava/util/Collection; getObjectives
Scoreboard c (LScoreboardObjective;)V handleObjectiveRemoved
Scoreboard c (LScoreboardTeam;)V handleTeamRemoved
Scoreboard c (Ljava/lang/String;LScoreboardObjective;)LScoreboardScore; getPlayerScoreForObjective
Scoreboard c playerScores
Scoreboard d (LScoreboardTeam;)V removeTeam
Scoreboard d (Ljava/lang/String;)LScoreboardObjective; getObjective
Scoreboard d (Ljava/lang/String;LScoreboardObjective;)V resetPlayerScores
Scoreboard d displaySlots
Scoreboard e ()Ljava/util/Collection; getPlayers
Scoreboard e (Ljava/lang/String;)Ljava/util/Map; getPlayerObjectives
Scoreboard e teamsByName
Scoreboard f (Ljava/lang/String;)LScoreboardTeam; getTeam
Scoreboard f teamsByPlayer
Scoreboard g ()Ljava/util/Collection; getTeams
Scoreboard g (Ljava/lang/String;)LScoreboardTeam; createTeam
Scoreboard h (Ljava/lang/String;)Z removePlayerFromTeam
Scoreboard i (LScoreboardObjective;)Ljava/util/Collection; getScoresForObjective
Scoreboard i (Ljava/lang/String;)LScoreboardTeam; getPlayerTeam
Scoreboard j (LScoreboardObjective;)V unregisterObjective
Scoreboard j (Ljava/lang/String;)I getSlotForName
ScoreboardObjective a (LIChatBaseComponent;)V setDisplayName
ScoreboardObjective a (LIScoreboardCriteria$EnumScoreboardHealthDisplay;)V setRenderType
ScoreboardObjective b ()Ljava/lang/String; getName
ScoreboardObjective c ()LIScoreboardCriteria; getCriteria
ScoreboardObjective d ()LIChatBaseComponent; getDisplayName
ScoreboardObjective d displayName
ScoreboardObjective f ()LIScoreboardCriteria$EnumScoreboardHealthDisplay; getRenderType
ScoreboardScore a ()V incrementScore
ScoreboardScore a (I)V addScore
ScoreboardScore b ()I getScore
ScoreboardScore c (I)V setScore
ScoreboardScore d ()LScoreboardObjective; getObjective
ScoreboardScore d playerName
ScoreboardScore e ()Ljava/lang/String; getPlayerName
ScoreboardScore e score
ScoreboardServer d (LScoreboardObjective;)Ljava/util/List; getScoreboardScorePacketsForObjective
ScoreboardServer$Action a CHANGE
ScoreboardServer$Action b REMOVE
ScoreboardTeam a (LEnumChatFormat;)V setColor
ScoreboardTeam a (LIChatBaseComponent;)V setDisplayName
ScoreboardTeam a (LScoreboardTeamBase$EnumNameTagVisibility;)V setNameTagVisibility
ScoreboardTeam a (LScoreboardTeamBase$EnumTeamPush;)V setCollisionRule
ScoreboardTeam a (Z)V setAllowFriendlyFire
ScoreboardTeam b (LIChatBaseComponent;)V setPrefix
ScoreboardTeam b (LScoreboardTeamBase$EnumNameTagVisibility;)V setDeathMessageVisibility
ScoreboardTeam b (Z)V setCanSeeFriendlyInvisibles
ScoreboardTeam c ()LIChatBaseComponent; getDisplayName
ScoreboardTeam c (LIChatBaseComponent;)V setSuffix
ScoreboardTeam e ()LIChatBaseComponent; getPrefix
ScoreboardTeam f ()LIChatBaseComponent; getSuffix
ScoreboardTeam i ()Z canSeeFriendlyInvisibles
ScoreboardTeam j ()LScoreboardTeamBase$EnumNameTagVisibility; getNameTagVisibility
ScoreboardTeam m ()I packOptionData
ScoreboardTeamBase a (LScoreboardTeamBase;)Z isAlly
ScoreboardTeamBase b ()Ljava/lang/String; getName
ScoreboardTeamBase d (LIChatBaseComponent;)LIChatBaseComponent; getFormattedName
ScoreboardTeamBase g ()Ljava/util/Collection; getPlayerNameSet
ScoreboardTeamBase h ()Z allowFriendlyFire
ScoreboardTeamBase k ()LScoreboardTeamBase$EnumNameTagVisibility; getDeathMessageVisibility
ScoreboardTeamBase l ()LScoreboardTeamBase$EnumTeamPush; getCollisionRule
ScoreboardTeamBase n ()LEnumChatFormat; getColor
ScoreboardTeamBase$EnumNameTagVisibility a ALWAYS
ScoreboardTeamBase$EnumNameTagVisibility b NEVER
ScoreboardTeamBase$EnumNameTagVisibility c HIDE_FOR_OTHER_TEAMS
ScoreboardTeamBase$EnumNameTagVisibility d HIDE_FOR_OWN_TEAM
ScoreboardTeamBase$EnumTeamPush a ALWAYS
ScoreboardTeamBase$EnumTeamPush b NEVER
ScoreboardTeamBase$EnumTeamPush c PUSH_OTHER_TEAMS
ScoreboardTeamBase$EnumTeamPush d PUSH_OWN_TEAM
ServerCommand a command
ServerCommand b source
ServerPing a (LIChatBaseComponent;)V setMOTD
ServerPing a (LServerPing$ServerData;)V setServerInfo
ServerPing a (LServerPing$ServerPingPlayerSample;)V setPlayerSample
ServerPing a (Ljava/lang/String;)V setFavicon
ServerPing c ()LServerPing$ServerData; getServerData
ServerPing$ServerData b ()I getProtocolVersion
ShapeDetector$Shape a position
ShapeDetector$Shape b velocity
ShapeDetector$Shape c yaw
ShapeDetector$ShapeDetectorCollection b ()LEnumDirection; getFacing
ShapeDetectorBlock d ()LBlockPosition; getPosition
ShapedRecipes a width
ShapedRecipes b height
ShapedRecipes c items
ShapedRecipes d result
ShapedRecipes e key
ShapedRecipes f group
ShapelessRecipes a key
ShapelessRecipes b group
ShapelessRecipes c result
ShapelessRecipes d ingredients
SharedConstants a (C)Z isAllowedChatCharacter
SharedConstants c allowedCharacters
Slot a ()I getMaxStackSize
Slot a (LEntityHuman;)Z isAllowed
Slot a (LItemStack;)Z isAllowed
Slot a index
Slot b (LItemStack;)I getMaxStackSize
Slot c inventory
Slot d (LItemStack;)V set
Slot d rawSlotIndex
Slot e ()LItemStack; getItem
Slot f ()Z hasItem
SoundCategory a MASTER
SoundCategory b MUSIC
SoundCategory c RECORDS
SoundCategory d WEATHER
SoundCategory e BLOCKS
SoundCategory f HOSTILE
SoundCategory g NEUTRAL
SoundCategory h PLAYERS
SoundCategory i AMBIENT
SoundCategory j VOICE
SoundEffects A ENTITY_ARMOR_STAND_PLACE
SoundEffects B ENTITY_ARROW_HIT
SoundEffects C ENTITY_ARROW_HIT_PLAYER
SoundEffects D ENTITY_ARROW_SHOOT
SoundEffects E ITEM_AXE_STRIP
SoundEffects F BLOCK_BAMBOO_BREAK
SoundEffects G BLOCK_BAMBOO_FALL
SoundEffects H BLOCK_BAMBOO_HIT
SoundEffects I BLOCK_BAMBOO_PLACE
SoundEffects J BLOCK_BAMBOO_STEP
SoundEffects K BLOCK_BAMBOO_SAPLING_BREAK
SoundEffects L BLOCK_BAMBOO_SAPLING_HIT
SoundEffects M BLOCK_BAMBOO_SAPLING_PLACE
SoundEffects N BLOCK_BARREL_CLOSE
SoundEffects O BLOCK_BARREL_OPEN
SoundEffects P ENTITY_BAT_AMBIENT
SoundEffects Q ENTITY_BAT_DEATH
SoundEffects R ENTITY_BAT_HURT
SoundEffects S ENTITY_BAT_LOOP
SoundEffects T ENTITY_BAT_TAKEOFF
SoundEffects U BLOCK_BEACON_ACTIVATE
SoundEffects V BLOCK_BEACON_AMBIENT
SoundEffects W BLOCK_BEACON_DEACTIVATE
SoundEffects X BLOCK_BEACON_POWER_SELECT
SoundEffects Y BLOCK_BELL_USE
SoundEffects Z BLOCK_BELL_RESONATE
SoundEffects a AMBIENT_CAVE
SoundEffects aA ITEM_BUCKET_FILL_FISH
SoundEffects aB ITEM_BUCKET_FILL_LAVA
SoundEffects aC BLOCK_CAMPFIRE_CRACKLE
SoundEffects aD ENTITY_CAT_AMBIENT
SoundEffects aE ENTITY_CAT_STRAY_AMBIENT
SoundEffects aF ENTITY_CAT_DEATH
SoundEffects aG ENTITY_CAT_EAT
SoundEffects aH ENTITY_CAT_HISS
SoundEffects aI ENTITY_CAT_BEG_FOR_FOOD
SoundEffects aJ ENTITY_CAT_HURT
SoundEffects aK ENTITY_CAT_PURR
SoundEffects aL ENTITY_CAT_PURREOW
SoundEffects aM BLOCK_CHEST_CLOSE
SoundEffects aN BLOCK_CHEST_LOCKED
SoundEffects aO BLOCK_CHEST_OPEN
SoundEffects aP ENTITY_CHICKEN_AMBIENT
SoundEffects aQ ENTITY_CHICKEN_DEATH
SoundEffects aR ENTITY_CHICKEN_EGG
SoundEffects aS ENTITY_CHICKEN_HURT
SoundEffects aT ENTITY_CHICKEN_STEP
SoundEffects aU BLOCK_CHORUS_FLOWER_DEATH
SoundEffects aV BLOCK_CHORUS_FLOWER_GROW
SoundEffects aW ITEM_CHORUS_FRUIT_TELEPORT
SoundEffects aX BLOCK_WOOL_BREAK
SoundEffects aY BLOCK_WOOL_FALL
SoundEffects aZ BLOCK_WOOL_HIT
SoundEffects aa ENTITY_BLAZE_AMBIENT
SoundEffects ab ENTITY_BLAZE_BURN
SoundEffects ac ENTITY_BLAZE_DEATH
SoundEffects ad ENTITY_BLAZE_HURT
SoundEffects ae ENTITY_BLAZE_SHOOT
SoundEffects af ENTITY_BOAT_PADDLE_LAND
SoundEffects ag ENTITY_BOAT_PADDLE_WATER
SoundEffects ah ITEM_BOOK_PAGE_TURN
SoundEffects ai ITEM_BOOK_PUT
SoundEffects aj ENTITY_FISHING_BOBBER_RETRIEVE
SoundEffects ak ENTITY_FISHING_BOBBER_SPLASH
SoundEffects al ENTITY_FISHING_BOBBER_THROW
SoundEffects am BLOCK_BLASTFURNACE_FIRE_CRACKLE
SoundEffects an ITEM_BOTTLE_EMPTY
SoundEffects ao ITEM_BOTTLE_FILL
SoundEffects ap ITEM_BOTTLE_FILL_DRAGONBREATH
SoundEffects aq BLOCK_BREWING_STAND_BREW
SoundEffects ar BLOCK_BUBBLE_COLUMN_BUBBLE_POP
SoundEffects as BLOCK_BUBBLE_COLUMN_UPWARDS_AMBIENT
SoundEffects at BLOCK_BUBBLE_COLUMN_UPWARDS_INSIDE
SoundEffects au BLOCK_BUBBLE_COLUMN_WHIRLPOOL_AMBIENT
SoundEffects av BLOCK_BUBBLE_COLUMN_WHIRLPOOL_INSIDE
SoundEffects aw ITEM_BUCKET_EMPTY
SoundEffects ax ITEM_BUCKET_EMPTY_FISH
SoundEffects ay ITEM_BUCKET_EMPTY_LAVA
SoundEffects az ITEM_BUCKET_FILL
SoundEffects b AMBIENT_UNDERWATER_ENTER
SoundEffects bA ITEM_CROSSBOW_HIT
SoundEffects bB ITEM_CROSSBOW_LOADING_END
SoundEffects bC ITEM_CROSSBOW_LOADING_MIDDLE
SoundEffects bD ITEM_CROSSBOW_LOADING_START
SoundEffects bE ITEM_CROSSBOW_QUICK_CHARGE_1
SoundEffects bF ITEM_CROSSBOW_QUICK_CHARGE_2
SoundEffects bG ITEM_CROSSBOW_QUICK_CHARGE_3
SoundEffects bH ITEM_CROSSBOW_SHOOT
SoundEffects bI BLOCK_DISPENSER_DISPENSE
SoundEffects bJ BLOCK_DISPENSER_FAIL
SoundEffects bK BLOCK_DISPENSER_LAUNCH
SoundEffects bL ENTITY_DOLPHIN_AMBIENT
SoundEffects bM ENTITY_DOLPHIN_AMBIENT_WATER
SoundEffects bN ENTITY_DOLPHIN_ATTACK
SoundEffects bO ENTITY_DOLPHIN_DEATH
SoundEffects bP ENTITY_DOLPHIN_EAT
SoundEffects bQ ENTITY_DOLPHIN_HURT
SoundEffects bR ENTITY_DOLPHIN_JUMP
SoundEffects bS ENTITY_DOLPHIN_PLAY
SoundEffects bT ENTITY_DOLPHIN_SPLASH
SoundEffects bU ENTITY_DOLPHIN_SWIM
SoundEffects bV ENTITY_DONKEY_AMBIENT
SoundEffects bW ENTITY_DONKEY_ANGRY
SoundEffects bX ENTITY_DONKEY_CHEST
SoundEffects bY ENTITY_DONKEY_DEATH
SoundEffects bZ ENTITY_DONKEY_HURT
SoundEffects ba BLOCK_WOOL_PLACE
SoundEffects bb BLOCK_WOOL_STEP
SoundEffects bc ENTITY_COD_AMBIENT
SoundEffects bd ENTITY_COD_DEATH
SoundEffects be ENTITY_COD_FLOP
SoundEffects bf ENTITY_COD_HURT
SoundEffects bg BLOCK_COMPARATOR_CLICK
SoundEffects bh BLOCK_COMPOSTER_EMPTY
SoundEffects bi BLOCK_COMPOSTER_FILL
SoundEffects bj BLOCK_COMPOSTER_FILL_SUCCESS
SoundEffects bk BLOCK_COMPOSTER_READY
SoundEffects bl BLOCK_CONDUIT_ACTIVATE
SoundEffects bm BLOCK_CONDUIT_AMBIENT
SoundEffects bn BLOCK_CONDUIT_AMBIENT_SHORT
SoundEffects bo BLOCK_CONDUIT_ATTACK_TARGET
SoundEffects bp BLOCK_CONDUIT_DEACTIVATE
SoundEffects bq ENTITY_COW_AMBIENT
SoundEffects br ENTITY_COW_DEATH
SoundEffects bs ENTITY_COW_HURT
SoundEffects bt ENTITY_COW_MILK
SoundEffects bu ENTITY_COW_STEP
SoundEffects bv ENTITY_CREEPER_DEATH
SoundEffects bw ENTITY_CREEPER_HURT
SoundEffects bx ENTITY_CREEPER_PRIMED
SoundEffects by BLOCK_CROP_BREAK
SoundEffects bz ITEM_CROP_PLANT
SoundEffects c AMBIENT_UNDERWATER_EXIT
SoundEffects cA ENTITY_ENDER_DRAGON_GROWL
SoundEffects cB ENTITY_ENDER_DRAGON_HURT
SoundEffects cC ENTITY_ENDER_DRAGON_SHOOT
SoundEffects cD ENTITY_ENDER_EYE_DEATH
SoundEffects cE ENTITY_ENDER_EYE_LAUNCH
SoundEffects cF ENTITY_ENDERMAN_AMBIENT
SoundEffects cG ENTITY_ENDERMAN_DEATH
SoundEffects cH ENTITY_ENDERMAN_HURT
SoundEffects cI ENTITY_ENDERMAN_SCREAM
SoundEffects cJ ENTITY_ENDERMAN_STARE
SoundEffects cK ENTITY_ENDERMAN_TELEPORT
SoundEffects cL ENTITY_ENDERMITE_AMBIENT
SoundEffects cM ENTITY_ENDERMITE_DEATH
SoundEffects cN ENTITY_ENDERMITE_HURT
SoundEffects cO ENTITY_ENDERMITE_STEP
SoundEffects cP ENTITY_ENDER_PEARL_THROW
SoundEffects cQ BLOCK_END_GATEWAY_SPAWN
SoundEffects cR BLOCK_END_PORTAL_FRAME_FILL
SoundEffects cS BLOCK_END_PORTAL_SPAWN
SoundEffects cT ENTITY_EVOKER_AMBIENT
SoundEffects cU ENTITY_EVOKER_CAST_SPELL
SoundEffects cV ENTITY_EVOKER_CELEBRATE
SoundEffects cW ENTITY_EVOKER_DEATH
SoundEffects cX ENTITY_EVOKER_FANGS_ATTACK
SoundEffects cY ENTITY_EVOKER_HURT
SoundEffects cZ ENTITY_EVOKER_PREPARE_ATTACK
SoundEffects ca ENTITY_DROWNED_AMBIENT
SoundEffects cb ENTITY_DROWNED_AMBIENT_WATER
SoundEffects cc ENTITY_DROWNED_DEATH
SoundEffects cd ENTITY_DROWNED_DEATH_WATER
SoundEffects ce ENTITY_DROWNED_HURT
SoundEffects cf ENTITY_DROWNED_HURT_WATER
SoundEffects cg ENTITY_DROWNED_SHOOT
SoundEffects ch ENTITY_DROWNED_STEP
SoundEffects ci ENTITY_DROWNED_SWIM
SoundEffects cj ENTITY_EGG_THROW
SoundEffects ck ENTITY_ELDER_GUARDIAN_AMBIENT
SoundEffects cl ENTITY_ELDER_GUARDIAN_AMBIENT_LAND
SoundEffects cm ENTITY_ELDER_GUARDIAN_CURSE
SoundEffects cn ENTITY_ELDER_GUARDIAN_DEATH
SoundEffects co ENTITY_ELDER_GUARDIAN_DEATH_LAND
SoundEffects cp ENTITY_ELDER_GUARDIAN_FLOP
SoundEffects cq ENTITY_ELDER_GUARDIAN_HURT
SoundEffects cr ENTITY_ELDER_GUARDIAN_HURT_LAND
SoundEffects cs ITEM_ELYTRA_FLYING
SoundEffects ct BLOCK_ENCHANTMENT_TABLE_USE
SoundEffects cu BLOCK_ENDER_CHEST_CLOSE
SoundEffects cv BLOCK_ENDER_CHEST_OPEN
SoundEffects cw ENTITY_ENDER_DRAGON_AMBIENT
SoundEffects cx ENTITY_ENDER_DRAGON_DEATH
SoundEffects cy ENTITY_DRAGON_FIREBALL_EXPLODE
SoundEffects cz ENTITY_ENDER_DRAGON_FLAP
SoundEffects d AMBIENT_UNDERWATER_LOOP
SoundEffects dA ENTITY_FOX_SLEEP
SoundEffects dB ENTITY_FOX_SNIFF
SoundEffects dC ENTITY_FOX_SPIT
SoundEffects dD BLOCK_FURNACE_FIRE_CRACKLE
SoundEffects dE ENTITY_GENERIC_BIG_FALL
SoundEffects dF ENTITY_GENERIC_BURN
SoundEffects dG ENTITY_GENERIC_DEATH
SoundEffects dH ENTITY_GENERIC_DRINK
SoundEffects dI ENTITY_GENERIC_EAT
SoundEffects dJ ENTITY_GENERIC_EXPLODE
SoundEffects dK ENTITY_GENERIC_EXTINGUISH_FIRE
SoundEffects dL ENTITY_GENERIC_HURT
SoundEffects dM ENTITY_GENERIC_SMALL_FALL
SoundEffects dN ENTITY_GENERIC_SPLASH
SoundEffects dO ENTITY_GENERIC_SWIM
SoundEffects dP ENTITY_GHAST_AMBIENT
SoundEffects dQ ENTITY_GHAST_DEATH
SoundEffects dR ENTITY_GHAST_HURT
SoundEffects dS ENTITY_GHAST_SCREAM
SoundEffects dT ENTITY_GHAST_SHOOT
SoundEffects dU ENTITY_GHAST_WARN
SoundEffects dV BLOCK_GLASS_BREAK
SoundEffects dW BLOCK_GLASS_FALL
SoundEffects dX BLOCK_GLASS_HIT
SoundEffects dY BLOCK_GLASS_PLACE
SoundEffects dZ BLOCK_GLASS_STEP
SoundEffects da ENTITY_EVOKER_PREPARE_SUMMON
SoundEffects db ENTITY_EVOKER_PREPARE_WOLOLO
SoundEffects dc ENTITY_EXPERIENCE_BOTTLE_THROW
SoundEffects dd ENTITY_EXPERIENCE_ORB_PICKUP
SoundEffects de BLOCK_FENCE_GATE_CLOSE
SoundEffects df BLOCK_FENCE_GATE_OPEN
SoundEffects dg ITEM_FIRECHARGE_USE
SoundEffects dh ENTITY_FIREWORK_ROCKET_BLAST
SoundEffects di ENTITY_FIREWORK_ROCKET_BLAST_FAR
SoundEffects dj ENTITY_FIREWORK_ROCKET_LARGE_BLAST
SoundEffects dk ENTITY_FIREWORK_ROCKET_LARGE_BLAST_FAR
SoundEffects dl ENTITY_FIREWORK_ROCKET_LAUNCH
SoundEffects dm ENTITY_FIREWORK_ROCKET_SHOOT
SoundEffects dn ENTITY_FIREWORK_ROCKET_TWINKLE
SoundEffects do ENTITY_FIREWORK_ROCKET_TWINKLE_FAR
SoundEffects dp BLOCK_FIRE_AMBIENT
SoundEffects dq BLOCK_FIRE_EXTINGUISH
SoundEffects dr ENTITY_FISH_SWIM
SoundEffects ds ITEM_FLINTANDSTEEL_USE
SoundEffects dt ENTITY_FOX_AGGRO
SoundEffects du ENTITY_FOX_AMBIENT
SoundEffects dv ENTITY_FOX_BITE
SoundEffects dw ENTITY_FOX_DEATH
SoundEffects dx ENTITY_FOX_EAT
SoundEffects dy ENTITY_FOX_HURT
SoundEffects dz ENTITY_FOX_SCREECH
SoundEffects e AMBIENT_UNDERWATER_LOOP_ADDITIONS
SoundEffects eA ENTITY_GUARDIAN_FLOP
SoundEffects eB ENTITY_GUARDIAN_HURT
SoundEffects eC ENTITY_GUARDIAN_HURT_LAND
SoundEffects eD ITEM_HOE_TILL
SoundEffects eE ENTITY_HORSE_AMBIENT
SoundEffects eF ENTITY_HORSE_ANGRY
SoundEffects eG ENTITY_HORSE_ARMOR
SoundEffects eH ENTITY_HORSE_BREATHE
SoundEffects eI ENTITY_HORSE_DEATH
SoundEffects eJ ENTITY_HORSE_EAT
SoundEffects eK ENTITY_HORSE_GALLOP
SoundEffects eL ENTITY_HORSE_HURT
SoundEffects eM ENTITY_HORSE_JUMP
SoundEffects eN ENTITY_HORSE_LAND
SoundEffects eO ENTITY_HORSE_SADDLE
SoundEffects eP ENTITY_HORSE_STEP
SoundEffects eQ ENTITY_HORSE_STEP_WOOD
SoundEffects eR ENTITY_HOSTILE_BIG_FALL
SoundEffects eS ENTITY_HOSTILE_DEATH
SoundEffects eT ENTITY_HOSTILE_HURT
SoundEffects eU ENTITY_HOSTILE_SMALL_FALL
SoundEffects eV ENTITY_HOSTILE_SPLASH
SoundEffects eW ENTITY_HOSTILE_SWIM
SoundEffects eX ENTITY_HUSK_AMBIENT
SoundEffects eY ENTITY_HUSK_CONVERTED_TO_ZOMBIE
SoundEffects eZ ENTITY_HUSK_DEATH
SoundEffects ea BLOCK_GRASS_BREAK
SoundEffects eb BLOCK_GRASS_FALL
SoundEffects ec BLOCK_GRASS_HIT
SoundEffects ed BLOCK_GRASS_PLACE
SoundEffects ee BLOCK_GRASS_STEP
SoundEffects ef BLOCK_WET_GRASS_BREAK
SoundEffects eg BLOCK_WET_GRASS_FALL
SoundEffects eh BLOCK_WET_GRASS_HIT
SoundEffects ei BLOCK_WET_GRASS_PLACE
SoundEffects ej BLOCK_WET_GRASS_STEP
SoundEffects ek BLOCK_CORAL_BLOCK_BREAK
SoundEffects el BLOCK_CORAL_BLOCK_FALL
SoundEffects em BLOCK_CORAL_BLOCK_HIT
SoundEffects en BLOCK_CORAL_BLOCK_PLACE
SoundEffects eo BLOCK_CORAL_BLOCK_STEP
SoundEffects ep BLOCK_GRAVEL_BREAK
SoundEffects eq BLOCK_GRAVEL_FALL
SoundEffects er BLOCK_GRAVEL_HIT
SoundEffects es BLOCK_GRAVEL_PLACE
SoundEffects et BLOCK_GRAVEL_STEP
SoundEffects eu BLOCK_GRINDSTONE_USE
SoundEffects ev ENTITY_GUARDIAN_AMBIENT
SoundEffects ew ENTITY_GUARDIAN_AMBIENT_LAND
SoundEffects ex ENTITY_GUARDIAN_ATTACK
SoundEffects ey ENTITY_GUARDIAN_DEATH
SoundEffects ez ENTITY_GUARDIAN_DEATH_LAND
SoundEffects f AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE
SoundEffects fA ENTITY_ITEM_FRAME_BREAK
SoundEffects fB ENTITY_ITEM_FRAME_PLACE
SoundEffects fC ENTITY_ITEM_FRAME_REMOVE_ITEM
SoundEffects fD ENTITY_ITEM_FRAME_ROTATE_ITEM
SoundEffects fE ENTITY_ITEM_BREAK
SoundEffects fF ENTITY_ITEM_PICKUP
SoundEffects fG BLOCK_LADDER_BREAK
SoundEffects fH BLOCK_LADDER_FALL
SoundEffects fI BLOCK_LADDER_HIT
SoundEffects fJ BLOCK_LADDER_PLACE
SoundEffects fK BLOCK_LADDER_STEP
SoundEffects fL BLOCK_LANTERN_BREAK
SoundEffects fM BLOCK_LANTERN_FALL
SoundEffects fN BLOCK_LANTERN_HIT
SoundEffects fO BLOCK_LANTERN_PLACE
SoundEffects fP BLOCK_LANTERN_STEP
SoundEffects fQ BLOCK_LAVA_AMBIENT
SoundEffects fR BLOCK_LAVA_EXTINGUISH
SoundEffects fS BLOCK_LAVA_POP
SoundEffects fT ENTITY_LEASH_KNOT_BREAK
SoundEffects fU ENTITY_LEASH_KNOT_PLACE
SoundEffects fV BLOCK_LEVER_CLICK
SoundEffects fW ENTITY_LIGHTNING_BOLT_IMPACT
SoundEffects fX ENTITY_LIGHTNING_BOLT_THUNDER
SoundEffects fY ENTITY_LINGERING_POTION_THROW
SoundEffects fZ ENTITY_LLAMA_AMBIENT
SoundEffects fa ENTITY_HUSK_HURT
SoundEffects fb ENTITY_HUSK_STEP
SoundEffects fc ENTITY_RAVAGER_AMBIENT
SoundEffects fd ENTITY_RAVAGER_ATTACK
SoundEffects fe ENTITY_RAVAGER_CELEBRATE
SoundEffects ff ENTITY_RAVAGER_DEATH
SoundEffects fg ENTITY_RAVAGER_HURT
SoundEffects fh ENTITY_RAVAGER_STEP
SoundEffects fi ENTITY_RAVAGER_STUNNED
SoundEffects fj ENTITY_RAVAGER_ROAR
SoundEffects fk ENTITY_ILLUSIONER_AMBIENT
SoundEffects fl ENTITY_ILLUSIONER_CAST_SPELL
SoundEffects fm ENTITY_ILLUSIONER_DEATH
SoundEffects fn ENTITY_ILLUSIONER_HURT
SoundEffects fo ENTITY_ILLUSIONER_MIRROR_MOVE
SoundEffects fp ENTITY_ILLUSIONER_PREPARE_BLINDNESS
SoundEffects fq ENTITY_ILLUSIONER_PREPARE_MIRROR
SoundEffects fr BLOCK_IRON_DOOR_CLOSE
SoundEffects fs BLOCK_IRON_DOOR_OPEN
SoundEffects ft ENTITY_IRON_GOLEM_ATTACK
SoundEffects fu ENTITY_IRON_GOLEM_DEATH
SoundEffects fv ENTITY_IRON_GOLEM_HURT
SoundEffects fw ENTITY_IRON_GOLEM_STEP
SoundEffects fx BLOCK_IRON_TRAPDOOR_CLOSE
SoundEffects fy BLOCK_IRON_TRAPDOOR_OPEN
SoundEffects fz ENTITY_ITEM_FRAME_ADD_ITEM
SoundEffects g AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE
SoundEffects gA ENTITY_MULE_AMBIENT
SoundEffects gB ENTITY_MULE_CHEST
SoundEffects gC ENTITY_MULE_DEATH
SoundEffects gD ENTITY_MULE_HURT
SoundEffects gE MUSIC_CREATIVE
SoundEffects gF MUSIC_CREDITS
SoundEffects gG MUSIC_DRAGON
SoundEffects gH MUSIC_END
SoundEffects gI MUSIC_GAME
SoundEffects gJ MUSIC_MENU
SoundEffects gK MUSIC_NETHER
SoundEffects gL MUSIC_UNDER_WATER
SoundEffects gM BLOCK_NETHER_WART_BREAK
SoundEffects gN ITEM_NETHER_WART_PLANT
SoundEffects gO BLOCK_NOTE_BLOCK_BASEDRUM
SoundEffects gP BLOCK_NOTE_BLOCK_BASS
SoundEffects gQ BLOCK_NOTE_BLOCK_BELL
SoundEffects gR BLOCK_NOTE_BLOCK_CHIME
SoundEffects gS BLOCK_NOTE_BLOCK_FLUTE
SoundEffects gT BLOCK_NOTE_BLOCK_GUITAR
SoundEffects gU BLOCK_NOTE_BLOCK_HARP
SoundEffects gV BLOCK_NOTE_BLOCK_HAT
SoundEffects gW BLOCK_NOTE_BLOCK_PLING
SoundEffects gX BLOCK_NOTE_BLOCK_SNARE
SoundEffects gY BLOCK_NOTE_BLOCK_XYLOPHONE
SoundEffects gZ BLOCK_NOTE_BLOCK_IRON_XYLOPHONE
SoundEffects ga ENTITY_LLAMA_ANGRY
SoundEffects gb ENTITY_LLAMA_CHEST
SoundEffects gc ENTITY_LLAMA_DEATH
SoundEffects gd ENTITY_LLAMA_EAT
SoundEffects ge ENTITY_LLAMA_HURT
SoundEffects gf ENTITY_LLAMA_SPIT
SoundEffects gg ENTITY_LLAMA_STEP
SoundEffects gh ENTITY_LLAMA_SWAG
SoundEffects gi ENTITY_MAGMA_CUBE_DEATH
SoundEffects gj ENTITY_MAGMA_CUBE_HURT
SoundEffects gk ENTITY_MAGMA_CUBE_JUMP
SoundEffects gl ENTITY_MAGMA_CUBE_SQUISH
SoundEffects gm BLOCK_METAL_BREAK
SoundEffects gn BLOCK_METAL_FALL
SoundEffects go BLOCK_METAL_HIT
SoundEffects gp BLOCK_METAL_PLACE
SoundEffects gq BLOCK_METAL_PRESSURE_PLATE_CLICK_OFF
SoundEffects gr BLOCK_METAL_PRESSURE_PLATE_CLICK_ON
SoundEffects gs BLOCK_METAL_STEP
SoundEffects gt ENTITY_MINECART_INSIDE
SoundEffects gu ENTITY_MINECART_RIDING
SoundEffects gv ENTITY_MOOSHROOM_CONVERT
SoundEffects gw ENTITY_MOOSHROOM_EAT
SoundEffects gx ENTITY_MOOSHROOM_MILK
SoundEffects gy ENTITY_MOOSHROOM_SUSPICIOUS_MILK
SoundEffects gz ENTITY_MOOSHROOM_SHEAR
SoundEffects h BLOCK_ANVIL_BREAK
SoundEffects hA ENTITY_PARROT_IMITATE_CREEPER
SoundEffects hB ENTITY_PARROT_IMITATE_DROWNED
SoundEffects hC ENTITY_PARROT_IMITATE_ELDER_GUARDIAN
SoundEffects hD ENTITY_PARROT_IMITATE_ENDER_DRAGON
SoundEffects hE ENTITY_PARROT_IMITATE_ENDERMAN
SoundEffects hF ENTITY_PARROT_IMITATE_ENDERMITE
SoundEffects hG ENTITY_PARROT_IMITATE_EVOKER
SoundEffects hH ENTITY_PARROT_IMITATE_GHAST
SoundEffects hI ENTITY_PARROT_IMITATE_GUARDIAN
SoundEffects hJ ENTITY_PARROT_IMITATE_HUSK
SoundEffects hK ENTITY_PARROT_IMITATE_ILLUSIONER
SoundEffects hL ENTITY_PARROT_IMITATE_MAGMA_CUBE
SoundEffects hM ENTITY_PARROT_IMITATE_PANDA
SoundEffects hN ENTITY_PARROT_IMITATE_PHANTOM
SoundEffects hO ENTITY_PARROT_IMITATE_PILLAGER
SoundEffects hP ENTITY_PARROT_IMITATE_POLAR_BEAR
SoundEffects hQ ENTITY_PARROT_IMITATE_RAVAGER
SoundEffects hR ENTITY_PARROT_IMITATE_SHULKER
SoundEffects hS ENTITY_PARROT_IMITATE_SILVERFISH
SoundEffects hT ENTITY_PARROT_IMITATE_SKELETON
SoundEffects hU ENTITY_PARROT_IMITATE_SLIME
SoundEffects hV ENTITY_PARROT_IMITATE_SPIDER
SoundEffects hW ENTITY_PARROT_IMITATE_STRAY
SoundEffects hX ENTITY_PARROT_IMITATE_VEX
SoundEffects hY ENTITY_PARROT_IMITATE_VINDICATOR
SoundEffects hZ ENTITY_PARROT_IMITATE_WITCH
SoundEffects ha BLOCK_NOTE_BLOCK_COW_BELL
SoundEffects hb BLOCK_NOTE_BLOCK_DIDGERIDOO
SoundEffects hc BLOCK_NOTE_BLOCK_BIT
SoundEffects hd BLOCK_NOTE_BLOCK_BANJO
SoundEffects he ENTITY_OCELOT_HURT
SoundEffects hf ENTITY_OCELOT_AMBIENT
SoundEffects hg ENTITY_OCELOT_DEATH
SoundEffects hh ENTITY_PAINTING_BREAK
SoundEffects hi ENTITY_PAINTING_PLACE
SoundEffects hj ENTITY_PANDA_PRE_SNEEZE
SoundEffects hk ENTITY_PANDA_SNEEZE
SoundEffects hl ENTITY_PANDA_AMBIENT
SoundEffects hm ENTITY_PANDA_DEATH
SoundEffects hn ENTITY_PANDA_EAT
SoundEffects ho ENTITY_PANDA_STEP
SoundEffects hp ENTITY_PANDA_CANT_BREED
SoundEffects hq ENTITY_PANDA_AGGRESSIVE_AMBIENT
SoundEffects hr ENTITY_PANDA_WORRIED_AMBIENT
SoundEffects hs ENTITY_PANDA_HURT
SoundEffects ht ENTITY_PANDA_BITE
SoundEffects hu ENTITY_PARROT_AMBIENT
SoundEffects hv ENTITY_PARROT_DEATH
SoundEffects hw ENTITY_PARROT_EAT
SoundEffects hx ENTITY_PARROT_FLY
SoundEffects hy ENTITY_PARROT_HURT
SoundEffects hz ENTITY_PARROT_IMITATE_BLAZE
SoundEffects i BLOCK_ANVIL_DESTROY
SoundEffects iA ENTITY_PLAYER_ATTACK_NODAMAGE
SoundEffects iB ENTITY_PLAYER_ATTACK_STRONG
SoundEffects iC ENTITY_PLAYER_ATTACK_SWEEP
SoundEffects iD ENTITY_PLAYER_ATTACK_WEAK
SoundEffects iE ENTITY_PLAYER_BIG_FALL
SoundEffects iF ENTITY_PLAYER_BREATH
SoundEffects iG ENTITY_PLAYER_BURP
SoundEffects iH ENTITY_PLAYER_DEATH
SoundEffects iI ENTITY_PLAYER_HURT
SoundEffects iJ ENTITY_PLAYER_HURT_DROWN
SoundEffects iK ENTITY_PLAYER_HURT_ON_FIRE
SoundEffects iL ENTITY_PLAYER_HURT_SWEET_BERRY_BUSH
SoundEffects iM ENTITY_PLAYER_LEVELUP
SoundEffects iN ENTITY_PLAYER_SMALL_FALL
SoundEffects iO ENTITY_PLAYER_SPLASH
SoundEffects iP ENTITY_PLAYER_SPLASH_HIGH_SPEED
SoundEffects iQ ENTITY_PLAYER_SWIM
SoundEffects iR ENTITY_POLAR_BEAR_AMBIENT
SoundEffects iS ENTITY_POLAR_BEAR_AMBIENT_BABY
SoundEffects iT ENTITY_POLAR_BEAR_DEATH
SoundEffects iU ENTITY_POLAR_BEAR_HURT
SoundEffects iV ENTITY_POLAR_BEAR_STEP
SoundEffects iW ENTITY_POLAR_BEAR_WARNING
SoundEffects iX BLOCK_PORTAL_AMBIENT
SoundEffects iY BLOCK_PORTAL_TRAVEL
SoundEffects iZ BLOCK_PORTAL_TRIGGER
SoundEffects ia ENTITY_PARROT_IMITATE_WITHER
SoundEffects ib ENTITY_PARROT_IMITATE_WITHER_SKELETON
SoundEffects ic ENTITY_PARROT_IMITATE_WOLF
SoundEffects id ENTITY_PARROT_IMITATE_ZOMBIE
SoundEffects ie ENTITY_PARROT_IMITATE_ZOMBIE_PIGMAN
SoundEffects if ENTITY_PARROT_IMITATE_ZOMBIE_VILLAGER
SoundEffects ig ENTITY_PARROT_STEP
SoundEffects ih ENTITY_PHANTOM_AMBIENT
SoundEffects ii ENTITY_PHANTOM_BITE
SoundEffects ij ENTITY_PHANTOM_DEATH
SoundEffects ik ENTITY_PHANTOM_FLAP
SoundEffects il ENTITY_PHANTOM_HURT
SoundEffects im ENTITY_PHANTOM_SWOOP
SoundEffects in ENTITY_PIG_AMBIENT
SoundEffects io ENTITY_PIG_DEATH
SoundEffects ip ENTITY_PIG_HURT
SoundEffects iq ENTITY_PIG_SADDLE
SoundEffects ir ENTITY_PIG_STEP
SoundEffects is ENTITY_PILLAGER_AMBIENT
SoundEffects it ENTITY_PILLAGER_CELEBRATE
SoundEffects iu ENTITY_PILLAGER_DEATH
SoundEffects iv ENTITY_PILLAGER_HURT
SoundEffects iw BLOCK_PISTON_CONTRACT
SoundEffects ix BLOCK_PISTON_EXTEND
SoundEffects iy ENTITY_PLAYER_ATTACK_CRIT
SoundEffects iz ENTITY_PLAYER_ATTACK_KNOCKBACK
SoundEffects j BLOCK_ANVIL_FALL
SoundEffects jA BLOCK_REDSTONE_TORCH_BURNOUT
SoundEffects jB ENTITY_SALMON_AMBIENT
SoundEffects jC ENTITY_SALMON_DEATH
SoundEffects jD ENTITY_SALMON_FLOP
SoundEffects jE ENTITY_SALMON_HURT
SoundEffects jF BLOCK_SAND_BREAK
SoundEffects jG BLOCK_SAND_FALL
SoundEffects jH BLOCK_SAND_HIT
SoundEffects jI BLOCK_SAND_PLACE
SoundEffects jJ BLOCK_SAND_STEP
SoundEffects jK BLOCK_SCAFFOLDING_BREAK
SoundEffects jL BLOCK_SCAFFOLDING_FALL
SoundEffects jM BLOCK_SCAFFOLDING_HIT
SoundEffects jN BLOCK_SCAFFOLDING_PLACE
SoundEffects jO BLOCK_SCAFFOLDING_STEP
SoundEffects jP ENTITY_SHEEP_AMBIENT
SoundEffects jQ ENTITY_SHEEP_DEATH
SoundEffects jR ENTITY_SHEEP_HURT
SoundEffects jS ENTITY_SHEEP_SHEAR
SoundEffects jT ENTITY_SHEEP_STEP
SoundEffects jU ITEM_SHIELD_BLOCK
SoundEffects jV ITEM_SHIELD_BREAK
SoundEffects jW ITEM_SHOVEL_FLATTEN
SoundEffects jX ENTITY_SHULKER_AMBIENT
SoundEffects jY BLOCK_SHULKER_BOX_CLOSE
SoundEffects jZ BLOCK_SHULKER_BOX_OPEN
SoundEffects ja ENTITY_PUFFER_FISH_AMBIENT
SoundEffects jb ENTITY_PUFFER_FISH_BLOW_OUT
SoundEffects jc ENTITY_PUFFER_FISH_BLOW_UP
SoundEffects jd ENTITY_PUFFER_FISH_DEATH
SoundEffects je ENTITY_PUFFER_FISH_FLOP
SoundEffects jf ENTITY_PUFFER_FISH_HURT
SoundEffects jg ENTITY_PUFFER_FISH_STING
SoundEffects jh BLOCK_PUMPKIN_CARVE
SoundEffects ji ENTITY_RABBIT_AMBIENT
SoundEffects jj ENTITY_RABBIT_ATTACK
SoundEffects jk ENTITY_RABBIT_DEATH
SoundEffects jl ENTITY_RABBIT_HURT
SoundEffects jm ENTITY_RABBIT_JUMP
SoundEffects jn EVENT_RAID_HORN
SoundEffects jo MUSIC_DISC_11
SoundEffects jp MUSIC_DISC_13
SoundEffects jq MUSIC_DISC_BLOCKS
SoundEffects jr MUSIC_DISC_CAT
SoundEffects js MUSIC_DISC_CHIRP
SoundEffects jt MUSIC_DISC_FAR
SoundEffects ju MUSIC_DISC_MALL
SoundEffects jv MUSIC_DISC_MELLOHI
SoundEffects jw MUSIC_DISC_STAL
SoundEffects jx MUSIC_DISC_STRAD
SoundEffects jy MUSIC_DISC_WAIT
SoundEffects jz MUSIC_DISC_WARD
SoundEffects k BLOCK_ANVIL_HIT
SoundEffects kA ENTITY_SLIME_ATTACK
SoundEffects kB ENTITY_SLIME_DEATH
SoundEffects kC ENTITY_SLIME_HURT
SoundEffects kD ENTITY_SLIME_JUMP
SoundEffects kE ENTITY_SLIME_SQUISH
SoundEffects kF BLOCK_SLIME_BLOCK_BREAK
SoundEffects kG BLOCK_SLIME_BLOCK_FALL
SoundEffects kH BLOCK_SLIME_BLOCK_HIT
SoundEffects kI BLOCK_SLIME_BLOCK_PLACE
SoundEffects kJ BLOCK_SLIME_BLOCK_STEP
SoundEffects kK ENTITY_MAGMA_CUBE_DEATH_SMALL
SoundEffects kL ENTITY_MAGMA_CUBE_HURT_SMALL
SoundEffects kM ENTITY_MAGMA_CUBE_SQUISH_SMALL
SoundEffects kN ENTITY_SLIME_DEATH_SMALL
SoundEffects kO ENTITY_SLIME_HURT_SMALL
SoundEffects kP ENTITY_SLIME_JUMP_SMALL
SoundEffects kQ ENTITY_SLIME_SQUISH_SMALL
SoundEffects kR BLOCK_SMOKER_SMOKE
SoundEffects kS ENTITY_SNOWBALL_THROW
SoundEffects kT BLOCK_SNOW_BREAK
SoundEffects kU BLOCK_SNOW_FALL
SoundEffects kV ENTITY_SNOW_GOLEM_AMBIENT
SoundEffects kW ENTITY_SNOW_GOLEM_DEATH
SoundEffects kX ENTITY_SNOW_GOLEM_HURT
SoundEffects kY ENTITY_SNOW_GOLEM_SHOOT
SoundEffects kZ BLOCK_SNOW_HIT
SoundEffects ka ENTITY_SHULKER_BULLET_HIT
SoundEffects kb ENTITY_SHULKER_BULLET_HURT
SoundEffects kc ENTITY_SHULKER_CLOSE
SoundEffects kd ENTITY_SHULKER_DEATH
SoundEffects ke ENTITY_SHULKER_HURT
SoundEffects kf ENTITY_SHULKER_HURT_CLOSED
SoundEffects kg ENTITY_SHULKER_OPEN
SoundEffects kh ENTITY_SHULKER_SHOOT
SoundEffects ki ENTITY_SHULKER_TELEPORT
SoundEffects kj ENTITY_SILVERFISH_AMBIENT
SoundEffects kk ENTITY_SILVERFISH_DEATH
SoundEffects kl ENTITY_SILVERFISH_HURT
SoundEffects km ENTITY_SILVERFISH_STEP
SoundEffects kn ENTITY_SKELETON_AMBIENT
SoundEffects ko ENTITY_SKELETON_DEATH
SoundEffects kp ENTITY_SKELETON_HORSE_AMBIENT
SoundEffects kq ENTITY_SKELETON_HORSE_DEATH
SoundEffects kr ENTITY_SKELETON_HORSE_HURT
SoundEffects ks ENTITY_SKELETON_HORSE_SWIM
SoundEffects kt ENTITY_SKELETON_HORSE_AMBIENT_WATER
SoundEffects ku ENTITY_SKELETON_HORSE_GALLOP_WATER
SoundEffects kv ENTITY_SKELETON_HORSE_JUMP_WATER
SoundEffects kw ENTITY_SKELETON_HORSE_STEP_WATER
SoundEffects kx ENTITY_SKELETON_HURT
SoundEffects ky ENTITY_SKELETON_SHOOT
SoundEffects kz ENTITY_SKELETON_STEP
SoundEffects l BLOCK_ANVIL_LAND
SoundEffects lA BLOCK_SWEET_BERRY_BUSH_PLACE
SoundEffects lB ITEM_SWEET_BERRIES_PICK_FROM_BUSH
SoundEffects lC ENCHANT_THORNS_HIT
SoundEffects lD ENTITY_TNT_PRIMED
SoundEffects lE ITEM_TOTEM_USE
SoundEffects lF ITEM_TRIDENT_HIT
SoundEffects lG ITEM_TRIDENT_HIT_GROUND
SoundEffects lH ITEM_TRIDENT_RETURN
SoundEffects lI ITEM_TRIDENT_RIPTIDE_1
SoundEffects lJ ITEM_TRIDENT_RIPTIDE_2
SoundEffects lK ITEM_TRIDENT_RIPTIDE_3
SoundEffects lL ITEM_TRIDENT_THROW
SoundEffects lM ITEM_TRIDENT_THUNDER
SoundEffects lN BLOCK_TRIPWIRE_ATTACH
SoundEffects lO BLOCK_TRIPWIRE_CLICK_OFF
SoundEffects lP BLOCK_TRIPWIRE_CLICK_ON
SoundEffects lQ BLOCK_TRIPWIRE_DETACH
SoundEffects lR ENTITY_TROPICAL_FISH_AMBIENT
SoundEffects lS ENTITY_TROPICAL_FISH_DEATH
SoundEffects lT ENTITY_TROPICAL_FISH_FLOP
SoundEffects lU ENTITY_TROPICAL_FISH_HURT
SoundEffects lV ENTITY_TURTLE_AMBIENT_LAND
SoundEffects lW ENTITY_TURTLE_DEATH
SoundEffects lX ENTITY_TURTLE_DEATH_BABY
SoundEffects lY ENTITY_TURTLE_EGG_BREAK
SoundEffects lZ ENTITY_TURTLE_EGG_CRACK
SoundEffects la BLOCK_SNOW_PLACE
SoundEffects lb BLOCK_SNOW_STEP
SoundEffects lc ENTITY_SPIDER_AMBIENT
SoundEffects ld ENTITY_SPIDER_DEATH
SoundEffects le ENTITY_SPIDER_HURT
SoundEffects lf ENTITY_SPIDER_STEP
SoundEffects lg ENTITY_SPLASH_POTION_BREAK
SoundEffects lh ENTITY_SPLASH_POTION_THROW
SoundEffects li ENTITY_SQUID_AMBIENT
SoundEffects lj ENTITY_SQUID_DEATH
SoundEffects lk ENTITY_SQUID_HURT
SoundEffects ll ENTITY_SQUID_SQUIRT
SoundEffects lm BLOCK_STONE_BREAK
SoundEffects ln BLOCK_STONE_BUTTON_CLICK_OFF
SoundEffects lo BLOCK_STONE_BUTTON_CLICK_ON
SoundEffects lp BLOCK_STONE_FALL
SoundEffects lq BLOCK_STONE_HIT
SoundEffects lr BLOCK_STONE_PLACE
SoundEffects ls BLOCK_STONE_PRESSURE_PLATE_CLICK_OFF
SoundEffects lt BLOCK_STONE_PRESSURE_PLATE_CLICK_ON
SoundEffects lu BLOCK_STONE_STEP
SoundEffects lv ENTITY_STRAY_AMBIENT
SoundEffects lw ENTITY_STRAY_DEATH
SoundEffects lx ENTITY_STRAY_HURT
SoundEffects ly ENTITY_STRAY_STEP
SoundEffects lz BLOCK_SWEET_BERRY_BUSH_BREAK
SoundEffects m BLOCK_ANVIL_PLACE
SoundEffects mA ENTITY_VILLAGER_YES
SoundEffects mB ENTITY_VILLAGER_WORK_ARMORER
SoundEffects mC ENTITY_VILLAGER_WORK_BUTCHER
SoundEffects mD ENTITY_VILLAGER_WORK_CARTOGRAPHER
SoundEffects mE ENTITY_VILLAGER_WORK_CLERIC
SoundEffects mF ENTITY_VILLAGER_WORK_FARMER
SoundEffects mG ENTITY_VILLAGER_WORK_FISHERMAN
SoundEffects mH ENTITY_VILLAGER_WORK_FLETCHER
SoundEffects mI ENTITY_VILLAGER_WORK_LEATHERWORKER
SoundEffects mJ ENTITY_VILLAGER_WORK_LIBRARIAN
SoundEffects mK ENTITY_VILLAGER_WORK_MASON
SoundEffects mL ENTITY_VILLAGER_WORK_SHEPHERD
SoundEffects mM ENTITY_VILLAGER_WORK_TOOLSMITH
SoundEffects mN ENTITY_VILLAGER_WORK_WEAPONSMITH
SoundEffects mO ENTITY_VINDICATOR_AMBIENT
SoundEffects mP ENTITY_VINDICATOR_CELEBRATE
SoundEffects mQ ENTITY_VINDICATOR_DEATH
SoundEffects mR ENTITY_VINDICATOR_HURT
SoundEffects mS BLOCK_LILY_PAD_PLACE
SoundEffects mT ENTITY_WANDERING_TRADER_AMBIENT
SoundEffects mU ENTITY_WANDERING_TRADER_DEATH
SoundEffects mV ENTITY_WANDERING_TRADER_DISAPPEARED
SoundEffects mW ENTITY_WANDERING_TRADER_DRINK_MILK
SoundEffects mX ENTITY_WANDERING_TRADER_DRINK_POTION
SoundEffects mY ENTITY_WANDERING_TRADER_HURT
SoundEffects mZ ENTITY_WANDERING_TRADER_NO
SoundEffects ma ENTITY_TURTLE_EGG_HATCH
SoundEffects mb ENTITY_TURTLE_HURT
SoundEffects mc ENTITY_TURTLE_HURT_BABY
SoundEffects md ENTITY_TURTLE_LAY_EGG
SoundEffects me ENTITY_TURTLE_SHAMBLE
SoundEffects mf ENTITY_TURTLE_SHAMBLE_BABY
SoundEffects mg ENTITY_TURTLE_SWIM
SoundEffects mh UI_BUTTON_CLICK
SoundEffects mi UI_LOOM_SELECT_PATTERN
SoundEffects mj UI_LOOM_TAKE_RESULT
SoundEffects mk UI_CARTOGRAPHY_TABLE_TAKE_RESULT
SoundEffects ml UI_STONECUTTER_TAKE_RESULT
SoundEffects mm UI_STONECUTTER_SELECT_RECIPE
SoundEffects mn UI_TOAST_CHALLENGE_COMPLETE
SoundEffects mo UI_TOAST_IN
SoundEffects mp UI_TOAST_OUT
SoundEffects mq ENTITY_VEX_AMBIENT
SoundEffects mr ENTITY_VEX_CHARGE
SoundEffects ms ENTITY_VEX_DEATH
SoundEffects mt ENTITY_VEX_HURT
SoundEffects mu ENTITY_VILLAGER_AMBIENT
SoundEffects mv ENTITY_VILLAGER_CELEBRATE
SoundEffects mw ENTITY_VILLAGER_DEATH
SoundEffects mx ENTITY_VILLAGER_HURT
SoundEffects my ENTITY_VILLAGER_NO
SoundEffects mz ENTITY_VILLAGER_TRADE
SoundEffects n BLOCK_ANVIL_STEP
SoundEffects nA ENTITY_WOLF_HURT
SoundEffects nB ENTITY_WOLF_PANT
SoundEffects nC ENTITY_WOLF_SHAKE
SoundEffects nD ENTITY_WOLF_STEP
SoundEffects nE ENTITY_WOLF_WHINE
SoundEffects nF BLOCK_WOODEN_DOOR_CLOSE
SoundEffects nG BLOCK_WOODEN_DOOR_OPEN
SoundEffects nH BLOCK_WOODEN_TRAPDOOR_CLOSE
SoundEffects nI BLOCK_WOODEN_TRAPDOOR_OPEN
SoundEffects nJ BLOCK_WOOD_BREAK
SoundEffects nK BLOCK_WOODEN_BUTTON_CLICK_OFF
SoundEffects nL BLOCK_WOODEN_BUTTON_CLICK_ON
SoundEffects nM BLOCK_WOOD_FALL
SoundEffects nN BLOCK_WOOD_HIT
SoundEffects nO BLOCK_WOOD_PLACE
SoundEffects nP BLOCK_WOODEN_PRESSURE_PLATE_CLICK_OFF
SoundEffects nQ BLOCK_WOODEN_PRESSURE_PLATE_CLICK_ON
SoundEffects nR BLOCK_WOOD_STEP
SoundEffects nS ENTITY_ZOMBIE_AMBIENT
SoundEffects nT ENTITY_ZOMBIE_ATTACK_WOODEN_DOOR
SoundEffects nU ENTITY_ZOMBIE_ATTACK_IRON_DOOR
SoundEffects nV ENTITY_ZOMBIE_BREAK_WOODEN_DOOR
SoundEffects nW ENTITY_ZOMBIE_CONVERTED_TO_DROWNED
SoundEffects nX ENTITY_ZOMBIE_DEATH
SoundEffects nY ENTITY_ZOMBIE_DESTROY_EGG
SoundEffects nZ ENTITY_ZOMBIE_HORSE_AMBIENT
SoundEffects na ENTITY_WANDERING_TRADER_REAPPEARED
SoundEffects nb ENTITY_WANDERING_TRADER_TRADE
SoundEffects nc ENTITY_WANDERING_TRADER_YES
SoundEffects nd BLOCK_WATER_AMBIENT
SoundEffects ne WEATHER_RAIN
SoundEffects nf WEATHER_RAIN_ABOVE
SoundEffects ng ENTITY_WITCH_AMBIENT
SoundEffects nh ENTITY_WITCH_CELEBRATE
SoundEffects ni ENTITY_WITCH_DEATH
SoundEffects nj ENTITY_WITCH_DRINK
SoundEffects nk ENTITY_WITCH_HURT
SoundEffects nl ENTITY_WITCH_THROW
SoundEffects nm ENTITY_WITHER_AMBIENT
SoundEffects nn ENTITY_WITHER_BREAK_BLOCK
SoundEffects no ENTITY_WITHER_DEATH
SoundEffects np ENTITY_WITHER_HURT
SoundEffects nq ENTITY_WITHER_SHOOT
SoundEffects nr ENTITY_WITHER_SKELETON_AMBIENT
SoundEffects ns ENTITY_WITHER_SKELETON_DEATH
SoundEffects nt ENTITY_WITHER_SKELETON_HURT
SoundEffects nu ENTITY_WITHER_SKELETON_STEP
SoundEffects nv ENTITY_WITHER_SPAWN
SoundEffects nw ENTITY_WOLF_AMBIENT
SoundEffects nx ENTITY_WOLF_DEATH
SoundEffects ny ENTITY_WOLF_GROWL
SoundEffects nz ENTITY_WOLF_HOWL
SoundEffects o BLOCK_ANVIL_USE
SoundEffects oa ENTITY_ZOMBIE_HORSE_DEATH
SoundEffects ob ENTITY_ZOMBIE_HORSE_HURT
SoundEffects oc ENTITY_ZOMBIE_HURT
SoundEffects od ENTITY_ZOMBIE_INFECT
SoundEffects oe ENTITY_ZOMBIE_PIGMAN_AMBIENT
SoundEffects of ENTITY_ZOMBIE_PIGMAN_ANGRY
SoundEffects og ENTITY_ZOMBIE_PIGMAN_DEATH
SoundEffects oh ENTITY_ZOMBIE_PIGMAN_HURT
SoundEffects oi ENTITY_ZOMBIE_STEP
SoundEffects oj ENTITY_ZOMBIE_VILLAGER_AMBIENT
SoundEffects ok ENTITY_ZOMBIE_VILLAGER_CONVERTED
SoundEffects ol ENTITY_ZOMBIE_VILLAGER_CURE
SoundEffects om ENTITY_ZOMBIE_VILLAGER_DEATH
SoundEffects on ENTITY_ZOMBIE_VILLAGER_HURT
SoundEffects oo ENTITY_ZOMBIE_VILLAGER_STEP
SoundEffects p ITEM_ARMOR_EQUIP_CHAIN
SoundEffects q ITEM_ARMOR_EQUIP_DIAMOND
SoundEffects r ITEM_ARMOR_EQUIP_ELYTRA
SoundEffects s ITEM_ARMOR_EQUIP_GENERIC
SoundEffects t ITEM_ARMOR_EQUIP_GOLD
SoundEffects u ITEM_ARMOR_EQUIP_IRON
SoundEffects v ITEM_ARMOR_EQUIP_LEATHER
SoundEffects w ITEM_ARMOR_EQUIP_TURTLE
SoundEffects x ENTITY_ARMOR_STAND_BREAK
SoundEffects y ENTITY_ARMOR_STAND_FALL
SoundEffects z ENTITY_ARMOR_STAND_HIT
SpawnerCreature a (LWorld;LChunk;)LBlockPosition; getRandomPosition
Statistic a ()LStatisticWrapper; getWrapper
StatisticList A AVIATE_ONE_CM
StatisticList B SWIM_ONE_CM
StatisticList C JUMP
StatisticList D DROP
StatisticList E DAMAGE_DEALT
StatisticList F DAMAGE_DEALT_ABSORBED
StatisticList G DAMAGE_DEALT_RESISTED
StatisticList H DAMAGE_TAKEN
StatisticList I DAMAGE_BLOCKED_BY_SHIELD
StatisticList J DAMAGE_ABSORBED
StatisticList K DAMAGE_RESISTED
StatisticList L DEATHS
StatisticList M MOB_KILLS
StatisticList N ANIMALS_BRED
StatisticList O PLAYER_KILLS
StatisticList P FISH_CAUGHT
StatisticList Q TALKED_TO_VILLAGER
StatisticList R TRADED_WITH_VILLAGER
StatisticList S EAT_CAKE_SLICE
StatisticList T FILL_CAULDRON
StatisticList U USE_CAULDRON
StatisticList V CLEAN_ARMOR
StatisticList W CLEAN_BANNER
StatisticList X CLEAN_SHULKER_BOX
StatisticList Y INTERACT_WITH_BREWINGSTAND
StatisticList Z INTERACT_WITH_BEACON
StatisticList a BLOCK_MINED
StatisticList aa INSPECT_DROPPER
StatisticList ab INSPECT_HOPPER
StatisticList ac INSPECT_DISPENSER
StatisticList ad PLAY_NOTEBLOCK
StatisticList ae TUNE_NOTEBLOCK
StatisticList af POT_FLOWER
StatisticList ag TRIGGER_TRAPPED_CHEST
StatisticList ah OPEN_ENDERCHEST
StatisticList ai ENCHANT_ITEM
StatisticList aj PLAY_RECORD
StatisticList ak INTERACT_WITH_FURNACE
StatisticList al INTERACT_WITH_CRAFTING_TABLE
StatisticList am OPEN_CHEST
StatisticList an SLEEP_IN_BED
StatisticList ao OPEN_SHULKER_BOX
StatisticList ap OPEN_BARREL
StatisticList aq INTERACT_WITH_BLAST_FURNACE
StatisticList ar INTERACT_WITH_SMOKER
StatisticList as INTERACT_WITH_LECTERN
StatisticList at INTERACT_WITH_CAMPFIRE
StatisticList au INTERACT_WITH_CARTOGRAPHY_TABLE
StatisticList av INTERACT_WITH_LOOM
StatisticList aw INTERACT_WITH_STONECUTTER
StatisticList ax BELL_RING
StatisticList ay RAID_TRIGGER
StatisticList az RAID_WIN
StatisticList b ITEM_CRAFTED
StatisticList c ITEM_USED
StatisticList d ITEM_BROKEN
StatisticList e ITEM_PICKED_UP
StatisticList f ITEM_DROPPED
StatisticList g ENTITY_KILLED
StatisticList h ENTITY_KILLED_BY
StatisticList i CUSTOM
StatisticList j LEAVE_GAME
StatisticList k PLAY_ONE_MINUTE
StatisticList l TIME_SINCE_DEATH
StatisticList m TIME_SINCE_REST
StatisticList n SNEAK_TIME
StatisticList o WALK_ONE_CM
StatisticList p CROUCH_ONE_CM
StatisticList q SPRINT_ONE_CM
StatisticList r WALK_ON_WATER_ONE_CM
StatisticList s FALL_ONE_CM
StatisticList t CLIMB_ONE_CM
StatisticList u FLY_ONE_CM
StatisticList v WALK_UNDER_WATER_ONE_CM
StatisticList w MINECART_ONE_CM
StatisticList x BOAT_ONE_CM
StatisticList y PIG_ONE_CM
StatisticList z HORSE_ONE_CM
StatisticManager a (LEntityHuman;LStatistic;I)V setStatistic
StatisticManager a (LStatistic;)I getStatisticValue
StatisticWrapper a ()LIRegistry; getRegistry
StructureGenerator a (LWorld;LChunkGenerator;LBlockPosition;IZ)LBlockPosition; getNearestGeneratedFeature
SystemUtils b ()J getMonotonicMillis
SystemUtils c ()J getMonotonicNanos
SystemUtils d ()J getTimeMillis
SystemUtils$IdentityHashingStrategy a INSTANCE
SystemUtils$OS a LINUX
SystemUtils$OS b SOLARIS
SystemUtils$OS c WINDOWS
SystemUtils$OS d OSX
SystemUtils$OS e UNKNOWN
Tag a (Ljava/lang/Object;)Z isTagged
TagRegistry a ()LTagsServer; getBlockTags
TagRegistry a blockTags
TagRegistry b ()LTagsServer; getItemTags
TagRegistry b itemTags
TagRegistry c ()LTagsServer; getFluidTags
TagRegistry c fluidTags
TagRegistry d ()LTagsServer; getEntityTags
TagRegistry d entityTags
TagsBlock A ANVIL
TagsBlock B RAILS
TagsBlock C LEAVES
TagsBlock D TRAPDOORS
TagsBlock E SMALL_FLOWERS
TagsBlock F BEDS
TagsBlock G FENCES
TagsBlock H FLOWER_POTS
TagsBlock I ENDERMAN_HOLDABLE
TagsBlock J ICE
TagsBlock K VALID_SPAWN
TagsBlock L IMPERMEABLE
TagsBlock M UNDERWATER_BONEMEALS
TagsBlock N CORAL_BLOCKS
TagsBlock O WALL_CORALS
TagsBlock P CORAL_PLANTS
TagsBlock Q CORALS
TagsBlock R BAMBOO_PLANTABLE_ON
TagsBlock S DIRT_LIKE
TagsBlock T STANDING_SIGNS
TagsBlock U WALL_SIGNS
TagsBlock V SIGNS
TagsBlock W DRAGON_IMMUNE
TagsBlock X WITHER_IMMUNE
TagsBlock a WOOL
TagsBlock b PLANKS
TagsBlock c STONE_BRICKS
TagsBlock d WOODEN_BUTTONS
TagsBlock e BUTTONS
TagsBlock f CARPETS
TagsBlock g WOODEN_DOORS
TagsBlock h WOODEN_STAIRS
TagsBlock i WOODEN_SLABS
TagsBlock j WOODEN_FENCES
TagsBlock k WOODEN_PRESSURE_PLATES
TagsBlock l WOODEN_TRAPDOORS
TagsBlock m DOORS
TagsBlock n SAPLINGS
TagsBlock o LOGS
TagsBlock p DARK_OAK_LOGS
TagsBlock q OAK_LOGS
TagsBlock r BIRCH_LOGS
TagsBlock s ACACIA_LOGS
TagsBlock t JUNGLE_LOGS
TagsBlock u SPRUCE_LOGS
TagsBlock v BANNERS
TagsBlock w SAND
TagsBlock x STAIRS
TagsBlock y SLABS
TagsBlock z WALLS
TagsEntity a SKELETONS
TagsEntity b RADIERS
TagsFluid a WATER
TagsFluid b LAVA
TagsItem A ANVIL
TagsItem B RAILS
TagsItem C LEAVES
TagsItem D TRAPDOORS
TagsItem E SMALL_FLOWERS
TagsItem F BEDS
TagsItem G FENCES
TagsItem H BOATS
TagsItem I FISHES
TagsItem J SIGNS
TagsItem K MUSIC_DISCS
TagsItem L COALS
TagsItem M ARROWS
TagsItem a WOOL
TagsItem b PLANKS
TagsItem c STONE_BRICKS
TagsItem d WOODEN_BUTTONS
TagsItem e BUTTONS
TagsItem f CARPETS
TagsItem g WOODEN_DOORS
TagsItem h WOODEN_STAIRS
TagsItem i WOODEN_SLABS
TagsItem j WOODEN_FENCES
TagsItem k WOODEN_PRESSURE_PLATES
TagsItem l WOODEN_TRAPDOORS
TagsItem m DOORS
TagsItem n SAPLINGS
TagsItem o LOGS
TagsItem p DARK_OAK_LOGS
TagsItem q OAK_LOGS
TagsItem r BIRCH_LOGS
TagsItem s ACACIA_LOGS
TagsItem t JUNGLE_LOGS
TagsItem u SPRUCE_LOGS
TagsItem v BANNERS
TagsItem w SAND
TagsItem x STAIRS
TagsItem y SLABS
TagsItem z WALLS
TextureType a SOLID
TextureType b CUTOUT_MIPPED
TextureType c CUTOUT
TextureType d TRANSLUCENT
TickListPriority a EXTREMELY_HIGH
TickListPriority b VERY_HIGH
TickListPriority c HIGH
TickListPriority d NORMAL
TickListPriority e LOW
TickListPriority f VERY_LOW
TickListPriority g EXTREMELY_LOW
TickListServer d nextTickListHash
TickListServer e nextTickList
Ticket a ()LTicketType; getTicketType
Ticket c identifier
TicketType a START
TicketType b DRAGON
TicketType c PLAYER
TicketType d FORCED
TicketType e LIGHT
TicketType f PORTAL
TicketType g POST_TELEPORT
TicketType h UNKNOWN
TicketType k loadPeriod
TileEntity a ()LPacketPlayOutTileEntityData; getUpdatePacket
TileEntity a (LBlockPosition;)V setPosition
TileEntity a (LNBTTagCompound;)V load
TileEntity a (LWorld;)V setWorld
TileEntity a_ (II)Z setProperty
TileEntity b (LNBTTagCompound;)LNBTTagCompound; save
TileEntity c (LNBTTagCompound;)LTileEntity; create
TileEntity d world
TileEntity e ()V update
TileEntity e position
TileEntity j ()Z hasWorld
TileEntity k ()LBlockPosition; getPosition
TileEntity l ()LIBlockData; getBlock
TileEntity m ()Z isRemoved
TileEntity o ()V invalidateBlockCache
TileEntity p ()Z isFilteredNBT
TileEntity w ()LWorld; getWorld
TileEntityBanner b color
TileEntityBanner c patterns
TileEntityBarrel a items
TileEntityBeacon a (LIChatBaseComponent;)V setCustomName
TileEntityBeacon h levels
TileEntityBeacon j primaryEffect
TileEntityBeacon k secondaryEffect
TileEntityBeacon l customName
TileEntityBeacon m chestLock
TileEntityBeacon n containerProperties
TileEntityBeacon s ()V applyEffects
TileEntityBed a color
TileEntityBrewingStand h items
TileEntityBrewingStand i brewTime
TileEntityBrewingStand l fuelLevel
TileEntityCampfire a items
TileEntityCampfire b cookingTimes
TileEntityCampfire c cookingTotalTimes
TileEntityCampfire d ()LNonNullList; getItems
TileEntityChest c viewingCount
TileEntityChest h ()V onOpen
TileEntityChest i items
TileEntityCommand d ()LCommandBlockListenerAbstract; getCommandBlock
TileEntityCommand$Type a SEQUENCE
TileEntityCommand$Type b AUTO
TileEntityCommand$Type c REDSTONE
TileEntityConduit j target
TileEntityContainer a (ILPlayerInventory;)LContainer; createContainer
TileEntityContainer a (LIChatBaseComponent;)V setCustomName
TileEntityContainer a chestLock
TileEntityContainer b customName
TileEntityContainer g ()LIChatBaseComponent; getContainerName
TileEntityDispenser a (LItemStack;)I addItem
TileEntityDispenser b items
TileEntityEnchantTable a (LIChatBaseComponent;)V setCustomName
TileEntityEndGateway b age
TileEntityEndGateway g exitPortal
TileEntityEndGateway h exactTeleport
TileEntityFurnace a (LItemStack;)I fuelTime
TileEntityFurnace a items
TileEntityFurnace b (LIRecipe;)Z canBurn
TileEntityFurnace b (LItemStack;)Z isFuel
TileEntityFurnace c (LIRecipe;)V burn
TileEntityFurnace h ()I getRecipeCookingTime
TileEntityFurnace j burnTime
TileEntityFurnace k ticksForCurrentFuel
TileEntityFurnace l cookTime
TileEntityFurnace m cookTimeTotal
TileEntityFurnace s ()Z isBurning
TileEntityHopper a (LIInventory;LIInventory;LItemStack;LEnumDirection;)LItemStack; addItem
TileEntityHopper c (I)V setCooldown
TileEntityHopper i items
TileEntityJukeBox a (LItemStack;)V setRecord
TileEntityJukeBox d ()LItemStack; getRecord
TileEntityLectern a (I)V setPage
TileEntityLectern a (LItemStack;)V setBook
TileEntityLectern a inventory
TileEntityLectern b containerProperties
TileEntityLectern c book
TileEntityLectern f ()LItemStack; getBook
TileEntityLectern g ()Z hasBook
TileEntityLectern g page
TileEntityLectern h ()I getPage
TileEntityLectern h maxPage
TileEntityLootable a (LMinecraftKey;J)V setLootTable
TileEntityLootable g lootTable
TileEntityLootable h lootTableSeed
TileEntityMobSpawner d ()LMobSpawnerAbstract; getSpawner
TileEntityShulkerBox b contents
TileEntityShulkerBox$AnimationPhase a CLOSED
TileEntityShulkerBox$AnimationPhase b OPENING
TileEntityShulkerBox$AnimationPhase c OPENED
TileEntityShulkerBox$AnimationPhase d CLOSING
TileEntitySign a (LEnumColor;)Z setColor
TileEntitySign a lines
TileEntitySign g ()LEnumColor; getColor
TileEntitySign i isEditable
TileEntitySign l color
TileEntitySkull a (Lcom/mojang/authlib/GameProfile;)V setGameProfile
TileEntitySkull a gameProfile
TileEntitySkull g userCache
TileEntitySkull h sessionService
TileEntityStructure a (LBlockPropertyStructureMode;)V setUsageMode
TileEntityStructure a (LEntityLiving;)V setAuthor
TileEntityStructure a (Ljava/lang/String;)V setStructureName
TileEntityStructure a structureName
TileEntityStructure b author
TileEntityStructure c metadata
TileEntityStructure d ()Ljava/lang/String; getStructureName
TileEntityStructure g relativePosition
TileEntityStructure h size
TileEntityStructure i mirror
TileEntityStructure j rotation
TileEntityStructure k usageMode
TileEntityStructure l ignoreEntities
TileEntityStructure m powered
TileEntityStructure n showAir
TileEntityStructure o showBoundingBox
TileEntityStructure p integrity
TileEntityStructure q seed
TileEntityStructure v ()LBlockPropertyStructureMode; getUsageMode
TileEntityStructure$UpdateType a UPDATE_DATA
TileEntityStructure$UpdateType b SAVE_AREA
TileEntityStructure$UpdateType c LOAD_AREA
TileEntityStructure$UpdateType d SCAN_AREA
TileEntityTypes A SMOKER
TileEntityTypes B BLAST_FURNACE
TileEntityTypes C LECTERN
TileEntityTypes D BELL
TileEntityTypes E JIGSAW
TileEntityTypes F CAMPFIRE
TileEntityTypes a FURNACE
TileEntityTypes b CHEST
TileEntityTypes c TRAPPED_CHEST
TileEntityTypes d ENDER_CHEST
TileEntityTypes e JUKEBOX
TileEntityTypes f DISPENSER
TileEntityTypes g DROPPER
TileEntityTypes h SIGN
TileEntityTypes i MOB_SPAWNER
TileEntityTypes j PISTON
TileEntityTypes k BREWING_STAND
TileEntityTypes l ENCHANTING_TABLE
TileEntityTypes m END_PORTAL
TileEntityTypes n BEACON
TileEntityTypes o SKULL
TileEntityTypes p DAYLIGHT_DETECTOR
TileEntityTypes q HOPPER
TileEntityTypes r COMPARATOR
TileEntityTypes s BANNER
TileEntityTypes t STRUCTURE_BLOCK
TileEntityTypes u END_GATEWAY
TileEntityTypes v COMMAND_BLOCK
TileEntityTypes w SHULKER_BOX
TileEntityTypes x BED
TileEntityTypes y CONDUIT
TileEntityTypes z BARREL
Unit a INSTANCE
UserCache a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; getProfile
Vec3D b (DDD)LVec3D; add
Vec3D b x
Vec3D c y
Vec3D d z
Vec3D g (LVec3D;)D distanceSquared
Vector3f a x
Vector3f b ()F getX
Vector3f b y
Vector3f c ()F getY
Vector3f c z
Vector3f d ()F getZ
VillagePlace$Occupancy a HAS_SPACE
VillagePlace$Occupancy b IS_OCCUPIED
VillagePlace$Occupancy c ANY
VillageSiege$State a SIEGE_CAN_ACTIVATE
VillageSiege$State b SIEGE_TONIGHT
VillageSiege$State c SIEGE_DONE
VillagerData a ()LVillagerType; getType
VillagerData a (I)LVillagerData; withLevel
VillagerData a (LVillagerProfession;)LVillagerData; withProfession
VillagerData a (LVillagerType;)LVillagerData; withType
VillagerData b ()LVillagerProfession; getProfession
VillagerData c ()I getLevel
VillagerDataHolder ef ()LVillagerData; getVillagerData
VillagerProfession a NONE
VillagerProfession b ARMORER
VillagerProfession c BUTCHER
VillagerProfession d CARTOGRAPHER
VillagerProfession e CLERIC
VillagerProfession f FARMER
VillagerProfession g FISHERMAN
VillagerProfession h FLETCHER
VillagerProfession i LEATHERWORKER
VillagerProfession j LIBRARIAN
VillagerProfession k MASON
VillagerProfession l NITWIT
VillagerProfession m SHEPHERD
VillagerProfession n TOOLSMITH
VillagerProfession o WEAPONSMITH
VillagerType a DESERT
VillagerType b JUNGLE
VillagerType c PLAINS
VillagerType d SAVANNA
VillagerType e SNOW
VillagerType f SWAMP
VillagerType g TAIGA
VirtualLevelReadable a (LHeightMap$Type;LBlockPosition;)LBlockPosition; getHighestBlockYAt
VoxelShape a ()LAxisAlignedBB; getBoundingBox
VoxelShape a (LVec3D;LVec3D;LBlockPosition;)LMovingObjectPositionBlock; rayTrace
VoxelShape b ()Z isEmpty
VoxelShapes a (DDDDDD)LVoxelShape; create
WeightedRandomEnchant b enchantment
WeightedRandomEnchant c level
WhiteList a (Lcom/mojang/authlib/GameProfile;)Z isWhitelisted
World D ()LScoreboard; getScoreboard
World K ()V tickBlockEntities
World R ()J getTime
World S ()J getDayTime
World T ()LGameRules; getGameRules
World V ()Z isRaining
World W ()I getHeight
World Z ()LGameProfilerFiller; getMethodProfiler
World a (I)LEntity; getEntity
World a (LBlockPosition;LBlock;II)V playBlockAction
World a (LBlockPosition;LEnumDirection;)Z isBlockFacePowered
World a (LBlockPosition;LIBlockData;)Z setTypeUpdate
World a (LBlockPosition;LIBlockData;LIBlockData;I)V notify
World a (LBlockPosition;LTileEntity;)V setTileEntity
World a (LEntity;B)V broadcastEntityEffect
World a (LEntity;DDDFLExplosion$Effect;)LExplosion; explode
World a (LEntity;DDDFZLExplosion$Effect;)LExplosion; createExplosion
World a (LEntity;LAxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
World a (LEntity;LDamageSource;DDDFZLExplosion$Effect;)LExplosion; createExplosion
World a (LEntityHuman;DDDLSoundEffect;LSoundCategory;FF)V playSound
World a (LEntityHuman;LBlockPosition;LEnumDirection;)Z douseFire
World a (LEntityHuman;LEntity;LSoundEffect;LSoundCategory;FF)V playSound
World a (ZZ)V setSpawnFlags
World b (J)V setDayTime
World b (LBlockPosition;LBlock;)V applyPhysics
World b (LBlockPosition;LEnumDirection;)I getBlockFacePower
World c (LBlockPosition;LBlock;)V updateAdjacentComparators
World c serverThread
World e tileEntityList
World f tileEntityListTick
World g tileEntityListPending
World h tileEntityListUnload
World j (LBlockPosition;)Z isValidLocation
World k (LBlockPosition;)Z isOutsideWorld
World k lastRainLevel
World l (LBlockPosition;)LChunk; getChunkAtWorldCoords
World l rainLevel
World m (LBlockPosition;)V removeTileEntity
World m lastThunderLevel
World n thunderLevel
World o (LBlockPosition;)I getBlockPower
World o random
World o_ ()LBlockPosition; getSpawn
World p ()Lnet/minecraft/server/MinecraftServer; getMinecraftServer
World p (LBlockPosition;)Z isBlockIndirectlyPowered
World p worldProvider
World q chunkProvider
World r (LBlockPosition;)Z isRainingAt
World r worldData
World s ()LCraftingManager; getCraftingManager
World s isClientSide
World t tickingTileEntities
World u ()Z isSavingDisabled
World w methodProfiler
World x worldBorder
World y ()I getWorldMapCount
WorldBorder a (D)V setSize
WorldBorder a (DDJ)V transitionSizeBetween
WorldBorder a (LChunkCoordIntPair;)Z isInBounds
WorldBorder b (D)V setDamageBuffer
WorldBorder b (I)V setWarningTime
WorldBorder c (D)V setDamageAmount
WorldBorder c (DD)V setCenter
WorldBorder c (I)V setWarningDistance
WorldBorder g ()D getCenterX
WorldBorder h ()D getCenterZ
WorldBorder i ()D getSize
WorldBorder n ()D getDamageBuffer
WorldBorder o ()D getDamageAmount
WorldBorder q ()I getWarningTime
WorldBorder r ()I getWarningDistance
WorldChunkManager a (II)LBiomeBase; getBiome
WorldChunkManager a (IIII)[LBiomeBase; getBiomeBlock
WorldChunkManager a (LBlockPosition;)LBiomeBase; getBiome
WorldData A ()LNBTTagCompound; getGeneratorOptions
WorldData P ()LNBTTagCompound; getCustomBossEvents
WorldData a ()J getSeed
WorldData a (J)V setTime
WorldData a (LBlockPosition;)V setSpawn
WorldData a (LEnumDifficulty;)V setDifficulty
WorldData a (LEnumGamemode;)V setGameType
WorldData a (Ljava/lang/String;)V setName
WorldData a (Z)V setThundering
WorldData b (J)V setDayTime
WorldData b (Z)V setStorm
WorldData e ()J getTime
WorldData e (I)V setThunderDuration
WorldData f ()J getDayTime
WorldData f (I)V setWeatherDuration
WorldData i ()Ljava/lang/String; getName
WorldData l ()Z isThundering
WorldData m ()I getThunderDuration
WorldData n ()Z hasStorm
WorldData o ()I getWeatherDuration
WorldData p ()LEnumGamemode; getGameType
WorldData q ()Z shouldGenerateMapFeatures
WorldData r ()Z isHardcore
WorldData s ()LWorldType; getType
WorldData t levelName
WorldData v clearWeatherTime
WorldData w ()LEnumDifficulty; getDifficulty
WorldData w raining
WorldData x ()Z isDifficultyLocked
WorldData x rainTime
WorldData y thundering
WorldData z thunderTime
WorldGenFeatureDefinedStructurePoolTemplate$Matching a TERRAIN_MATCHING
WorldGenFeatureDefinedStructurePoolTemplate$Matching b RIGID
WorldGenFeatureOceanRuin$Temperature a WARM
WorldGenFeatureOceanRuin$Temperature b COLD
WorldGenFeatureOreConfiguration$Target a NATURAL_STONE
WorldGenFeatureOreConfiguration$Target b NETHERRACK
WorldGenFeatureRandomScattered d ()I getSeed
WorldGenMineshaft$Type a NORMAL
WorldGenMineshaft$Type b MESA
WorldGenStage$Decoration a RAW_GENERATION
WorldGenStage$Decoration b LOCAL_MODIFICATIONS
WorldGenStage$Decoration c UNDERGROUND_STRUCTURES
WorldGenStage$Decoration d SURFACE_STRUCTURES
WorldGenStage$Decoration e UNDERGROUND_ORES
WorldGenStage$Decoration f UNDERGROUND_DECORATION
WorldGenStage$Decoration g VEGETAL_DECORATION
WorldGenStage$Decoration h TOP_LAYER_MODIFICATION
WorldGenStage$Features a AIR
WorldGenStage$Features b LIQUID
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType a OPENING
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType b WOOD_DOOR
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType c GRATES
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType d IRON_DOOR
WorldGenerator A NORMAL_TREE
WorldGenerator B MEGA_JUNGLE_TREE
WorldGenerator C MEGA_PINE_TREE
WorldGenerator D MEGA_SPRUCE_TREE
WorldGenerator E DEFAULT_FLOWER
WorldGenerator F FOREST_FLOWER
WorldGenerator G PLAIN_FLOWER
WorldGenerator H SWAMP_FLOWER
WorldGenerator I GENERAL_FOREST_FLOWER
WorldGenerator J JUNGLE_GRASS
WorldGenerator K TAIGA_GRASS
WorldGenerator L GRASS
WorldGenerator M VOID_START_PLATFORM
WorldGenerator N CACTUS
WorldGenerator O DEAD_BUSH
WorldGenerator P DESERT_WELL
WorldGenerator Q FOSSIL
WorldGenerator R HELL_FIRE
WorldGenerator S HUGE_RED_MUSHROOM
WorldGenerator T HUGE_BROWN_MUSHROOM
WorldGenerator U ICE_SPIKE
WorldGenerator V GLOWSTONE_BLOB
WorldGenerator W MELON
WorldGenerator X PUMPKIN
WorldGenerator Y REED
WorldGenerator Z FREEZE_TOP_LAYER
WorldGenerator a (LGeneratorAccess;LChunkGenerator;Ljava/util/Random;LBlockPosition;LWorldGenFeatureConfiguration;)Z generate
WorldGenerator aA CHORUS_PLANT
WorldGenerator aB END_GATEWAY
WorldGenerator aC SEAGRASS
WorldGenerator aD KELP
WorldGenerator aE CORAL_TREE
WorldGenerator aF CORAL_MUSHROOM
WorldGenerator aG CORAL_CLAW
WorldGenerator aH SEA_PICKLE
WorldGenerator aI SIMPLE_BLOCK
WorldGenerator aJ BAMBOO
WorldGenerator aK DECORATED
WorldGenerator aL DECORATED_FLOWER
WorldGenerator aM SWEET_BERRY_BUSH
WorldGenerator aO BONUS_CHEST
WorldGenerator aa VINES
WorldGenerator ab WATERLILY
WorldGenerator ac MONSTER_ROOM
WorldGenerator ad BLUE_ICE
WorldGenerator ae ICEBERG
WorldGenerator af FOREST_ROCK
WorldGenerator ag HAY_PILE
WorldGenerator ah SNOW_PILE
WorldGenerator ai ICE_PILE
WorldGenerator aj MELON_PILE
WorldGenerator ak PUMPKIN_PILE
WorldGenerator al BUSH
WorldGenerator am DISK
WorldGenerator an DOUBLE_PLANT
WorldGenerator ao NETHER_SPRING
WorldGenerator ap ICE_PATCH
WorldGenerator aq LAKE
WorldGenerator ar ORE
WorldGenerator as RANDOM_RANDOM_SELECTOR
WorldGenerator at RANDOM_SELECTOR
WorldGenerator au SIMPLE_RANDOM_SELECTOR
WorldGenerator av RANDOM_BOOLEAN_SELECTOR
WorldGenerator aw EMERALD_ORE
WorldGenerator ax SPRING_FEATURE
WorldGenerator ay END_SPIKE
WorldGenerator az END_ISLAND
WorldGenerator b PILLAGER_OUTPOST
WorldGenerator c MINESHAFT
WorldGenerator d WOODLAND_MANSION
WorldGenerator e JUNGLE_TEMPLE
WorldGenerator f DESERT_PYRAMID
WorldGenerator g IGLOO
WorldGenerator h SHIPWRECK
WorldGenerator i SWAMP_HUT
WorldGenerator j STRONGHOLD
WorldGenerator k OCEAN_MONUMENT
WorldGenerator l OCEAN_RUIN
WorldGenerator m NETHER_BRIDGE
WorldGenerator n END_CITY
WorldGenerator o BURIED_TREASURE
WorldGenerator p VILLAGE
WorldGenerator q FANCY_TREE
WorldGenerator r BIRCH_TREE
WorldGenerator s SUPER_BIRCH_TREE
WorldGenerator t JUNGLE_GROUND_BUSH
WorldGenerator u JUNGLE_TREE
WorldGenerator v PINE_TREE
WorldGenerator w DARK_OAK_TREE
WorldGenerator x SAVANNA_TREE
WorldGenerator y SPRUCE_TREE
WorldGenerator z SWAMP_TREE
WorldMap a (II)V flagDirty
WorldMap a (LItemStack;LBlockPosition;Ljava/lang/String;LMapIcon$Type;)V decorateMap
WorldMap a centerX
WorldMap b centerZ
WorldMap c map
WorldMap d track
WorldMap e unlimitedTracking
WorldMap f scale
WorldMap g colors
WorldMap h locked
WorldMap j decorations
WorldMap k humans
WorldMap$WorldMapHumanTracker a trackee
WorldMap$WorldMapHumanTracker c worldMap
WorldNBTStorage a ()Ljava/io/File; getDirectory
WorldNBTStorage a (LWorldData;)V saveWorldData
WorldNBTStorage a (LWorldData;LNBTTagCompound;)V saveWorldData
WorldNBTStorage b ()V checkSession
WorldNBTStorage c ()LWorldData; getWorldData
WorldNBTStorage c baseDir
WorldNBTStorage d ()[Ljava/lang/String; getSeenPlayers
WorldNBTStorage d playerDir
WorldNBTStorage e sessionId
WorldNBTStorage g ()Lcom/mojang/datafixers/DataFixer; getDataFixer
WorldPersistentData b data
WorldProvider f ()Z isNether
WorldProvider j ()LWorldBorder; getWorldBorder
WorldProvider m ()LChunkGenerator; getChunkGenerator
WorldProvider n ()Z isOverworld
WorldProvider o ()Z canRespawn
WorldProvider p ()LDimensionManager; getDimensionManager
WorldServer A server
WorldServer B dataManager
WorldServer D emptyTime
WorldServer E portalTravelAgent
WorldServer F nextTickListBlock
WorldServer G nextTickListFluid
WorldServer J ticking
WorldServer K mobSpawnerTrader
WorldServer a (IIZ)Z setForceLoaded
WorldServer a (LChunk;)V unloadChunk
WorldServer a (LEntity;)V entityJoinedWorld
WorldServer a (LEntityLightning;)V strikeLightning
WorldServer a (LEntityPlayer;)V addPlayerCommand
WorldServer a (LIProgressUpdate;ZZ)V save
WorldServer a (Ljava/util/UUID;)LEntity; getEntity
WorldServer a (Ljava/util/function/BooleanSupplier;)V doTick
WorldServer a tickingEntities
WorldServer ad ()V clearWeather
WorldServer b (LEntity;)V chunkCheck
WorldServer b (LEntityPlayer;)V addPlayerPortal
WorldServer b savingDisabled
WorldServer c (LEntityPlayer;)V addPlayerJoin
WorldServer d (LEntity;)Z addEntitySerialized
WorldServer d (LEntityPlayer;)V addPlayerRespawn
WorldServer e (LEntity;)V addEntityTeleport
WorldServer e (LEntityPlayer;)V removePlayer
WorldServer f ()V resetEmptyTime
WorldServer f (LEntity;)Z addEntityChunk
WorldServer f (LEntityPlayer;)V addPlayer0
WorldServer g (LEntity;)V unregisterEntity
WorldServer h ()LBlockPosition; getDimensionSpawn
WorldServer h (LEntity;)V removeEntity
WorldServer i_ ()V everyoneSleeping
WorldServer k (LEntity;)Z addEntity0
WorldServer l (LEntity;)Z isUUIDTaken
WorldServer m (LEntity;)V registerEntity
WorldServer n (LEntity;)V removeEntityFromChunk
WorldServer q ()LPortalTravelAgent; getTravelAgent
WorldServer v ()V checkSession
WorldServer v globalEntityList
WorldServer w ()LWorldNBTStorage; getDataManager
WorldServer w entitiesById
WorldServer x ()LWorldPersistentData; getWorldPersistentData
WorldServer x entitiesByUUID
WorldServer y entitiesToAdd
WorldServer z ()Lit/unimi/dsi/fastutil/longs/LongSet; getForceLoadedChunks
WorldServer z players
WorldSettings a (Lcom/google/gson/JsonElement;)LWorldSettings; setGeneratorSettings
WorldType a ()Ljava/lang/String; name
WorldType a (Ljava/lang/String;)LWorldType; getType
WorldType a types
WorldType b NORMAL
WorldType c FLAT
WorldType d LARGE_BIOMES
WorldType e ()I getVersion
WorldType e AMPLIFIED
WorldType f CUSTOMIZED
WorldType h DEBUG_ALL_BLOCK_STATES
WorldType i NORMAL_1_1
WorldType k name
WorldType m version
net/minecraft/server/MinecraftServer A ()I getPlayerCount
net/minecraft/server/MinecraftServer B ()I getMaxPlayers
net/minecraft/server/MinecraftServer B spawnAnimals
net/minecraft/server/MinecraftServer C ()[Ljava/lang/String; getPlayers
net/minecraft/server/MinecraftServer C spawnNPCs
net/minecraft/server/MinecraftServer D pvpMode
net/minecraft/server/MinecraftServer E ()Z isDebugging
net/minecraft/server/MinecraftServer E allowFlight
net/minecraft/server/MinecraftServer F motd
net/minecraft/server/MinecraftServer G ()Ljava/security/KeyPair; getKeyPair
net/minecraft/server/MinecraftServer H ()I getPort
net/minecraft/server/MinecraftServer I ()Ljava/lang/String; getSinglePlayerName
net/minecraft/server/MinecraftServer J ()Z isEmbeddedServer
net/minecraft/server/MinecraftServer K ()Ljava/lang/String; getWorld
net/minecraft/server/MinecraftServer M ()Z getSpawnMonsters
net/minecraft/server/MinecraftServer M demoMode
net/minecraft/server/MinecraftServer N ()Z isDemoMode
net/minecraft/server/MinecraftServer N bonusChest
net/minecraft/server/MinecraftServer O ()LConvertable; getConvertable
net/minecraft/server/MinecraftServer P ()Ljava/lang/String; getResourcePack
net/minecraft/server/MinecraftServer Q ()Ljava/lang/String; getResourcePackHash
net/minecraft/server/MinecraftServer Q hasTicked
net/minecraft/server/MinecraftServer R lastOverloadTime
net/minecraft/server/MinecraftServer T ()Z getOnlineMode
net/minecraft/server/MinecraftServer V ()Z getSpawnAnimals
net/minecraft/server/MinecraftServer V yggdrasilAuthenticationService
net/minecraft/server/MinecraftServer W ()Z getSpawnNPCs
net/minecraft/server/MinecraftServer W minecraftSessionService
net/minecraft/server/MinecraftServer X gameProfileRepository
net/minecraft/server/MinecraftServer Y ()Z getPVP
net/minecraft/server/MinecraftServer Y userCache
net/minecraft/server/MinecraftServer Z ()Z getAllowFlight
net/minecraft/server/MinecraftServer a (I)V setPort
net/minecraft/server/MinecraftServer a (LDimensionManager;)LWorldServer; getWorldServer
net/minecraft/server/MinecraftServer a (LEnumGamemode;)V setGamemode
net/minecraft/server/MinecraftServer a (LWorldLoadListener;)V loadSpawn
net/minecraft/server/MinecraftServer a (LWorldPersistentData;)V initializeScoreboards
net/minecraft/server/MinecraftServer a (Ljava/lang/String;)V convertWorld
net/minecraft/server/MinecraftServer a (Ljava/lang/String;Ljava/lang/String;)V setResourcePack
net/minecraft/server/MinecraftServer a (Z)V safeShutdown
net/minecraft/server/MinecraftServer a (ZZZ)Z saveChunks
net/minecraft/server/MinecraftServer aC ()LAdvancementDataWorld; getAdvancementData
net/minecraft/server/MinecraftServer aD ()LCustomFunctionData; getFunctionData
net/minecraft/server/MinecraftServer aE ()V reload
net/minecraft/server/MinecraftServer aF ()LIReloadableResourceManager; getResourceManager
net/minecraft/server/MinecraftServer aG ()LResourcePackRepository; getResourcePackRepository
net/minecraft/server/MinecraftServer aI ()LCommandDispatcher; getCommandDispatcher
net/minecraft/server/MinecraftServer aJ ()LCommandListenerWrapper; getServerCommandListener
net/minecraft/server/MinecraftServer aK ()LCraftingManager; getCraftingManager
net/minecraft/server/MinecraftServer aL ()LTagRegistry; getTagRegistry
net/minecraft/server/MinecraftServer aM ()LScoreboardServer; getScoreboard
net/minecraft/server/MinecraftServer aN ()LLootTableRegistry; getLootTableRegistry
net/minecraft/server/MinecraftServer aO ()LGameRules; getGameRules
net/minecraft/server/MinecraftServer aP ()LBossBattleCustomData; getBossBattleCustomData
net/minecraft/server/MinecraftServer aT ()LGameProfiler; getMethodProfiler
net/minecraft/server/MinecraftServer aV ()Lorg/apache/logging/log4j/Logger; getLogger
net/minecraft/server/MinecraftServer aW ()Z canSleepForTick
net/minecraft/server/MinecraftServer aa ()Z getEnableCommandBlock
net/minecraft/server/MinecraftServer aa nextTick
net/minecraft/server/MinecraftServer ab ()Ljava/lang/String; getMotd
net/minecraft/server/MinecraftServer ac ()I getMaxBuildHeight
net/minecraft/server/MinecraftServer ad ()Z isStopped
net/minecraft/server/MinecraftServer ae ()LPlayerList; getPlayerList
net/minecraft/server/MinecraftServer af resourcePackRepository
net/minecraft/server/MinecraftServer ag ()LServerConnection; getServerConnection
net/minecraft/server/MinecraftServer ag resourcePackFolder
net/minecraft/server/MinecraftServer ah commandDispatcher
net/minecraft/server/MinecraftServer an ()I getSpawnProtection
net/minecraft/server/MinecraftServer ao ()Z getForceGamemode
net/minecraft/server/MinecraftServer aq ()I getIdleTimeout
net/minecraft/server/MinecraftServer ar ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getMinecraftSessionService
net/minecraft/server/MinecraftServer ar forceUpgrade
net/minecraft/server/MinecraftServer as ()Lcom/mojang/authlib/GameProfileRepository; getGameProfileRepository
net/minecraft/server/MinecraftServer as eraseCache
net/minecraft/server/MinecraftServer at ()LUserCache; getUserCache
net/minecraft/server/MinecraftServer au ()LServerPing; getServerPing
net/minecraft/server/MinecraftServer au executorService
net/minecraft/server/MinecraftServer av ()V invalidatePingSample
net/minecraft/server/MinecraftServer b (Z)V setForceUpgrade
net/minecraft/server/MinecraftServer c (I)V setIdleTimeout
net/minecraft/server/MinecraftServer c (LTickTask;)Z canExecute
net/minecraft/server/MinecraftServer c (Z)V setEraseCache
net/minecraft/server/MinecraftServer d ()Z init
net/minecraft/server/MinecraftServer d worldLoadListenerFactory
net/minecraft/server/MinecraftServer e (Ljava/lang/String;)V info
net/minecraft/server/MinecraftServer e proxy
net/minecraft/server/MinecraftServer f ()Z getGenerateStructures
net/minecraft/server/MinecraftServer f (Ljava/lang/String;)V warning
net/minecraft/server/MinecraftServer g ()LEnumGamemode; getGamemode
net/minecraft/server/MinecraftServer g (Z)V setOnlineMode
net/minecraft/server/MinecraftServer g serverThread
net/minecraft/server/MinecraftServer h ()LEnumDifficulty; getDifficulty
net/minecraft/server/MinecraftServer h_ ()Z isRunning
net/minecraft/server/MinecraftServer i ()Z isHardcore
net/minecraft/server/MinecraftServer i (Z)V setSpawnAnimals
net/minecraft/server/MinecraftServer j (Z)V setSpawnNPCs
net/minecraft/server/MinecraftServer j convertable
net/minecraft/server/MinecraftServer k (Ljava/lang/String;)V setMotd
net/minecraft/server/MinecraftServer k (Z)V setPVP
net/minecraft/server/MinecraftServer k snooper
net/minecraft/server/MinecraftServer l (Z)V setAllowFlight
net/minecraft/server/MinecraftServer l universe
net/minecraft/server/MinecraftServer m ()V stop
net/minecraft/server/MinecraftServer m (Z)V setForceGamemode
net/minecraft/server/MinecraftServer m tickables
net/minecraft/server/MinecraftServer n ()Ljava/lang/String; getServerIp
net/minecraft/server/MinecraftServer n methodProfiler
net/minecraft/server/MinecraftServer o serverConnection
net/minecraft/server/MinecraftServer p ()V sleepForTick
net/minecraft/server/MinecraftServer p serverPing
net/minecraft/server/MinecraftServer r dataConverterManager
net/minecraft/server/MinecraftServer s serverIp
net/minecraft/server/MinecraftServer t serverPort
net/minecraft/server/MinecraftServer u ()V exit
net/minecraft/server/MinecraftServer u worldServer
net/minecraft/server/MinecraftServer v ()Z getAllowNether
net/minecraft/server/MinecraftServer v playerList
net/minecraft/server/MinecraftServer w ()V startServerThread
net/minecraft/server/MinecraftServer w isRunning
net/minecraft/server/MinecraftServer x isStopped
net/minecraft/server/MinecraftServer y ()Ljava/lang/Iterable; getWorlds
net/minecraft/server/MinecraftServer y ticks
net/minecraft/server/MinecraftServer z ()Ljava/lang/String; getVersion
net/minecraft/server/MinecraftServer z onlineMode
