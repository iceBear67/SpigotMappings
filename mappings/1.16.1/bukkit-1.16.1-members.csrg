# (c) 2020 SpigotMC Pty. Ltd.
Activity a CORE
Activity b IDLE
Activity c WORK
Activity d PLAY
Activity e REST
Activity f MEET
Activity g PANIC
Activity h RAID
Activity i PRE_RAID
Activity j HIDE
Activity k FLIGHT
Activity l CELEBRATE
Activity m ADMIRE_ITEM
Activity n AVOID
Activity o RIDE
Advancement a parent
Advancement b display
Advancement c rewards
Advancement d key
Advancement e criteria
Advancement f ()Ljava/util/Map; getCriteria
Advancement f requirements
Advancement g children
Advancement h ()LMinecraftKey; getName
Advancement h chatComponent
AdvancementDataPlayer a (LAdvancement;Ljava/lang/String;)Z grantCriteria
AdvancementDataPlayer b (LAdvancement;)LAdvancementProgress; getProgress
AdvancementDataPlayer b (LAdvancement;Ljava/lang/String;)Z revokeCritera
AdvancementDataPlayer g data
AdvancementDataPlayer k player
AdvancementDataWorld a ()Ljava/util/Collection; getAdvancements
AdvancementDataWorld b DESERIALIZER
AdvancementDataWorld c REGISTRY
AdvancementFrameType a TASK
AdvancementFrameType b CHALLENGE
AdvancementFrameType c GOAL
AdvancementProgress a ()Z isDone
AdvancementProgress c (Ljava/lang/String;)LCriterionProgress; getCriterionProgress
AdvancementProgress e ()Ljava/lang/Iterable; getRemainingCriteria
AdvancementProgress f ()Ljava/lang/Iterable; getAwardedCriteria
AdvancementRequirements a AND
AdvancementRequirements b OR
Advancements b advancements
ArgumentAnchor$Anchor a FEET
ArgumentAnchor$Anchor b EYES
ArgumentBlock a ()Ljava/util/Map; getStateMap
ArgumentBlock b ()LIBlockData; getBlockData
ArgumentEntity b ()LArgumentEntity; multipleEntities
ArgumentParserSelector T checkPermissions
ArgumentParserSelector b ()V parseSelector
ArgumentParserSelector t ()LEntitySelector; parse
AttributeBase a ()D getDefault
AttributeBase c ()Ljava/lang/String; getName
AttributeMapBase a ()Ljava/util/Set; getAttributes
AttributeModifiable a ()LAttributeBase; getAttribute
AttributeModifiable a (D)V setValue
AttributeModifiable b ()D getBaseValue
AttributeModifiable c ()Ljava/util/Set; getModifiers
AttributeModifiable c (LAttributeModifier;)V addModifier
AttributeModifiable d (LAttributeModifier;)V removeModifier
AttributeModifiable f ()D getValue
AttributeModifier a ()Ljava/util/UUID; getUniqueId
AttributeModifier b ()Ljava/lang/String; getName
AttributeModifier c ()LAttributeModifier$Operation; getOperation
AttributeModifier d ()D getAmount
AttributeModifier e ()LNBTTagCompound; save
AttributeModifier$Operation a ADDITION
AttributeModifier$Operation b MULTIPLY_BASE
AttributeModifier$Operation c MULTIPLY_TOTAL
AttributeRanged b maximum
AxisAlignedBB a minX
AxisAlignedBB b minY
AxisAlignedBB c (DDD)LAxisAlignedBB; grow
AxisAlignedBB c minZ
AxisAlignedBB d maxX
AxisAlignedBB e maxY
AxisAlignedBB f maxZ
AxisAlignedBB h (D)LAxisAlignedBB; shrink
BaseBlockPosition a (DDDZ)D distanceSquared
BaseBlockPosition b (LEnumDirection;I)LBaseBlockPosition; shift
BaseBlockPosition d ZERO
BaseBlockPosition l (I)LBaseBlockPosition; down
BaseBlockPosition n ()LBaseBlockPosition; down
BaseBlockPosition u ()I getX
BaseBlockPosition v ()I getY
BaseBlockPosition w ()I getZ
Behavior$Status a STOPPED
Behavior$Status b RUNNING
BehaviorController a (LMemoryModuleType;)Z hasMemory
BehaviorController a (LMemoryModuleType;Ljava/lang/Object;)V setMemory
BehaviorController a (LMemoryModuleType;Ljava/util/Optional;)V setMemory
BehaviorController a (LSchedule;)V setSchedule
BehaviorController b ()LSchedule; getSchedule
BehaviorController b (LMemoryModuleType;)V removeMemory
BehaviorController c (LMemoryModuleType;)Ljava/util/Optional; getMemory
BehaviorController c memories
BehaviorController d sensors
BehaviorController f schedule
BehaviorCrossbowAttack$BowState a UNCHARGED
BehaviorCrossbowAttack$BowState b CHARGING
BehaviorCrossbowAttack$BowState c CHARGED
BehaviorCrossbowAttack$BowState d READY_TO_ATTACK
BehaviorFarm b farmBlock
BehaviorGate$Execution a RUN_ONE
BehaviorGate$Execution b TRY_ALL
BehaviorGate$Order a ORDERED
BehaviorGate$Order b SHUFFLED
BiomeBase a (LEnumCreatureType;)Ljava/util/List; getMobs
BiomeBase b (LBlockPosition;)F getAdjustedTemperature
BiomeBase l ()F getHumidity
BiomeBase p ()F getTemperature
BiomeBase$EnumTemperature a OCEAN
BiomeBase$EnumTemperature b COLD
BiomeBase$EnumTemperature c MEDIUM
BiomeBase$EnumTemperature d WARM
BiomeBase$Geography a NONE
BiomeBase$Geography b TAIGA
BiomeBase$Geography c EXTREME_HILLS
BiomeBase$Geography d JUNGLE
BiomeBase$Geography e MESA
BiomeBase$Geography f PLAINS
BiomeBase$Geography g SAVANNA
BiomeBase$Geography h ICY
BiomeBase$Geography i THEEND
BiomeBase$Geography j BEACH
BiomeBase$Geography k FOREST
BiomeBase$Geography l OCEAN
BiomeBase$Geography m DESERT
BiomeBase$Geography n RIVER
BiomeBase$Geography o SWAMP
BiomeBase$Geography p MUSHROOM
BiomeBase$Geography q NETHER
BiomeBase$Precipitation a NONE
BiomeBase$Precipitation b RAIN
BiomeBase$Precipitation c SNOW
BiomeDecoratorGroups F NORMAL_TREE
BiomeDecoratorGroups G NORMAL_TREE_BEES_0002
BiomeDecoratorGroups H NORMAL_TREE_BEES_002
BiomeDecoratorGroups I NORMAL_TREE_BEES_005
BiomeDecoratorGroups J JUNGLE_TREE
BiomeDecoratorGroups K JUNGLE_TREE_NOVINE
BiomeDecoratorGroups L PINE_TREE
BiomeDecoratorGroups M SPRUCE_TREE
BiomeDecoratorGroups N ACACIA_TREE
BiomeDecoratorGroups O BIRCH_TREE
BiomeDecoratorGroups P BIRCH_TREE_BEES_0002
BiomeDecoratorGroups Q BIRCH_TREE_BEES_002
BiomeDecoratorGroups R BIRCH_TREE_BEES_005
BiomeDecoratorGroups S TALL_BIRCH_TREE_BEES_0002
BiomeDecoratorGroups T SWAMP_TREE
BiomeDecoratorGroups U FANCY_TREE
BiomeDecoratorGroups V FANCY_TREE_BEES_0002
BiomeDecoratorGroups W FANCY_TREE_BEES_002
BiomeDecoratorGroups X FANCY_TREE_BEES_005
BiomeDecoratorGroups Y JUNGLE_BUSH
BiomeDecoratorGroups Z DARK_OAK_TREE
BiomeDecoratorGroups aW HUGE_RED_MUSHROOM
BiomeDecoratorGroups aX HUGE_BROWN_MUSHROOM
BiomeDecoratorGroups aa MEGA_SPRUCE_TREE
BiomeDecoratorGroups ab MEGA_PINE_TREE
BiomeDecoratorGroups ac MEGA_JUNGLE_TREE
BiomeDecoratorGroups bA REDSTONE_ORE
BiomeDecoratorGroups bB DIAMOND_ORE
BiomeDecoratorGroups bC LAPIS_ORE
BiomeDecoratorGroups bD STONE
BiomeDecoratorGroups bE EMERALD_ORE
BiomeDecoratorGroups bF INFESTED_STONE
BiomeDecoratorGroups bG SAND
BiomeDecoratorGroups bH CLAY
BiomeDecoratorGroups bI GRASS_BLOCK
BiomeDecoratorGroups bJ MOSSY_COBBLESTONE
BiomeDecoratorGroups bK LARGE_FERN
BiomeDecoratorGroups bL TALL_GRASS
BiomeDecoratorGroups bM LILAC
BiomeDecoratorGroups bN ROSE_BUSH
BiomeDecoratorGroups bO PEONY
BiomeDecoratorGroups bP BROWN_MUSHROOM
BiomeDecoratorGroups bQ RED_MUSHROOM
BiomeDecoratorGroups bR SEAGRASS
BiomeDecoratorGroups bS PACKED_ICE
BiomeDecoratorGroups bT BLUE_ICE
BiomeDecoratorGroups bU LILY_OF_THE_VALLEY
BiomeDecoratorGroups bV BLUE_ORCHID
BiomeDecoratorGroups bW POPPY
BiomeDecoratorGroups bX DANDELION
BiomeDecoratorGroups bY DEAD_BUSH
BiomeDecoratorGroups bZ MELON
BiomeDecoratorGroups bb GRASS
BiomeDecoratorGroups bc FERN
BiomeDecoratorGroups bd PODZOL
BiomeDecoratorGroups be OAK_LOG
BiomeDecoratorGroups bf OAK_LEAVES
BiomeDecoratorGroups bg JUNGLE_LOG
BiomeDecoratorGroups bh JUNGLE_LEAVES
BiomeDecoratorGroups bi SPRUCE_LOG
BiomeDecoratorGroups bj SPRUCE_LEAVES
BiomeDecoratorGroups bk ACACIA_LOG
BiomeDecoratorGroups bl ACACIA_LEAVES
BiomeDecoratorGroups bm BIRCH_LOG
BiomeDecoratorGroups bn BIRCH_LEAVES
BiomeDecoratorGroups bo DARK_OAK_LOG
BiomeDecoratorGroups bp DARK_OAK_LEAVES
BiomeDecoratorGroups bq WATER
BiomeDecoratorGroups br LAVA
BiomeDecoratorGroups bs DIRT
BiomeDecoratorGroups bt GRAVEL
BiomeDecoratorGroups bu GRANITE
BiomeDecoratorGroups bv DIORITE
BiomeDecoratorGroups bw ANDESITE
BiomeDecoratorGroups bx COAL_ORE
BiomeDecoratorGroups by IRON_ORE
BiomeDecoratorGroups bz GOLD_ORE
BiomeDecoratorGroups ca PUMPKIN
BiomeDecoratorGroups cb SWEET_BERRY_BUSH
BiomeDecoratorGroups cc FIRE
BiomeDecoratorGroups cd SOUL_FIRE
BiomeDecoratorGroups ce NETHERRACK
BiomeDecoratorGroups cf SOUL_SOIL
BiomeDecoratorGroups cg CRIMSON_ROOTS
BiomeDecoratorGroups ch LILY_PAD
BiomeDecoratorGroups ci SNOW
BiomeDecoratorGroups cj JACK_O_LANTERN
BiomeDecoratorGroups ck SUNFLOWER
BiomeDecoratorGroups cl CACTUS
BiomeDecoratorGroups cm SUGAR_CANE
BiomeDecoratorGroups cn RED_MUSHROOM_BLOCK
BiomeDecoratorGroups co BROWN_MUSHROOM_BLOCK
BiomeDecoratorGroups cp MUSHROOM_STEM
BiomeDecoratorGroups cq NETHER_GOLD_ORE
BiomeDecoratorGroups cr NETHER_QUARTZ_ORE
BiomeDecoratorGroups cs WARPED_STEM
BiomeDecoratorGroups ct WARPED_WART_BLOCK
BiomeDecoratorGroups cu NETHER_WART_BLOCK
BiomeDecoratorGroups cv CRIMSON_STEM
BiomeDecoratorGroups cw SHROOMLIGHT
BiomeManager$Provider b (III)LBiomeBase; getBiome
Biomes A STONE_SHORE
Biomes B SNOWY_BEACH
Biomes C BIRCH_FOREST
Biomes D BIRCH_FOREST_HILLS
Biomes E DARK_FOREST
Biomes F SNOWY_TAIGA
Biomes G SNOWY_TAIGA_HILLS
Biomes H GIANT_TREE_TAIGA
Biomes I GIANT_TREE_TAIGA_HILLS
Biomes J WOODED_MOUNTAINS
Biomes K SAVANNA
Biomes L SAVANNA_PLATEAU
Biomes M BADLANDS
Biomes N WOODED_BADLANDS_PLATEAU
Biomes O BADLANDS_PLATEAU
Biomes P SMALL_END_ISLANDS
Biomes Q END_MIDLANDS
Biomes R END_HIGHLANDS
Biomes S END_BARRENS
Biomes T WARM_OCEAN
Biomes U LUKEWARM_OCEAN
Biomes V COLD_OCEAN
Biomes W DEEP_WARM_OCEAN
Biomes X DEEP_LUKEWARM_OCEAN
Biomes Y DEEP_COLD_OCEAN
Biomes Z DEEP_FROZEN_OCEAN
Biomes a OCEAN
Biomes aA WARPED_FOREST
Biomes aB BASALT_DELTAS
Biomes aa THE_VOID
Biomes ab SUNFLOWER_PLAINS
Biomes ac DESERT_LAKES
Biomes ad GRAVELLY_MOUNTAINS
Biomes ae FLOWER_FOREST
Biomes af TAIGA_MOUNTAINS
Biomes ag SWAMP_HILLS
Biomes ah ICE_SPIKES
Biomes ai MODIFIED_JUNGLE
Biomes aj MODIFIED_JUNGLE_EDGE
Biomes ak TALL_BIRCH_FOREST
Biomes al TALL_BIRCH_HILLS
Biomes am DARK_FOREST_HILLS
Biomes an SNOWY_TAIGA_MOUNTAINS
Biomes ao GIANT_SPRUCE_TAIGA
Biomes ap GIANT_SPRUCE_TAIGA_HILLS
Biomes aq MODIFIED_GRAVELLY_MOUNTAINS
Biomes ar SHATTERED_SAVANNA
Biomes as SHATTERED_SAVANNA_PLATEAU
Biomes at ERODED_BADLANDS
Biomes au MODIFIED_WOODED_BADLANDS_PLATEAU
Biomes av MODIFIED_BADLANDS_PLATEAU
Biomes aw BAMBOO_JUNGLE
Biomes ax BAMBOO_JUNGLE_HILLS
Biomes ay SOUL_SAND_VALLEY
Biomes az CRIMSON_FOREST
Biomes c PLAINS
Biomes d DESERT
Biomes e MOUNTAINS
Biomes f FOREST
Biomes g TAIGA
Biomes h SWAMP
Biomes i RIVER
Biomes j NETHER_WASTES
Biomes k THE_END
Biomes l FROZEN_OCEAN
Biomes m FROZEN_RIVER
Biomes n SNOWY_TUNDRA
Biomes o SNOWY_MOUNTAINS
Biomes p MUSHROOM_FIELDS
Biomes q MUSHROOM_FIELD_SHORE
Biomes r BEACH
Biomes s DESERT_HILLS
Biomes t WOODED_HILLS
Biomes u TAIGA_HILLS
Biomes v MOUNTAIN_EDGE
Biomes w JUNGLE
Biomes x JUNGLE_HILLS
Biomes y JUNGLE_EDGE
Biomes z DEEP_OCEAN
Block a (I)LIBlockData; getByCombinedId
Block a (LBlockActionContext;)LIBlockData; getPlacedState
Block a (LGeneratorAccess;LBlockPosition;LIBlockData;)V postBreak
Block a (LIBlockData;LWorld;LBlockPosition;LTileEntity;LEntity;LItemStack;)V dropItems
Block a (LIBlockData;LWorldServer;LBlockPosition;LTileEntity;LEntity;LItemStack;)Ljava/util/List; getDrops
Block a (LItem;)LBlock; asBlock
Block a (LWorld;LBlockPosition;I)V dropExperience
Block a (LWorld;LBlockPosition;LEntity;)V stepOn
Block a (LWorld;LBlockPosition;LEntity;F)V fallOn
Block a (LWorld;LBlockPosition;LExplosion;)V wasExploded
Block a (LWorld;LBlockPosition;LIBlockData;LEntityLiving;LItemStack;)V postPlace
Block a_ (LIBlockData;)Z isTicking
Block d blockData
Block e name
Block f ()F getDurability
Block i (LIBlockData;)I getCombinedId
Block j ()F getFrictionFactor
Block k ()F getSpeedFactor
Block k (LIBlockData;)LSoundEffectType; getStepSound
Block l ()F getJumpFactor
Block m ()LBlockStateList; getStates
Block m REGISTRY_ID
Block n ()LIBlockData; getBlockData
Block n blockStateList
BlockAccessAir a INSTANCE
BlockAnvil a FACING
BlockAttachable u FACE
BlockBanner a ROTATION
BlockBannerAbstract b ()LEnumColor; getColor
BlockBase a (LIBlockData;)Z isComplexRedstone
BlockBase a (LIBlockData;LEntityHuman;LIBlockAccess;LBlockPosition;)F getDamage
BlockBase a (LIBlockData;LEnumDirection;LIBlockData;LGeneratorAccess;LBlockPosition;LBlockPosition;)LIBlockData; updateState
BlockBase a (LIBlockData;LIWorldReader;LBlockPosition;)Z canPlace
BlockBase a (LIBlockData;LWorld;LBlockPosition;LBlock;LBlockPosition;Z)V doPhysics
BlockBase a (LIBlockData;LWorld;LBlockPosition;LEntityHuman;)V attack
BlockBase a (LIBlockData;LWorld;LBlockPosition;LEntityHuman;LEnumHand;LMovingObjectPositionBlock;)LEnumInteractionResult; interact
BlockBase a (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V remove
BlockBase a (LIBlockData;LWorld;LBlockPosition;LItemStack;)V dropNaturally
BlockBase a (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V tickAlways
BlockBase as material
BlockBase au durability
BlockBase aw stepSound
BlockBase ax frictionFactor
BlockBase ay speedFactor
BlockBase az jumpFactor
BlockBase b (LIBlockData;LWorld;LBlockPosition;)LITileInventory; getInventory
BlockBase b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockBase b (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V tick
BlockBase b_ (LIBlockData;)Z isPowerSource
BlockBase f (LIBlockData;)LEnumPistonReaction; getPushReaction
BlockBase h ()LItem; getItem
BlockBase q ()Z isTileEntity
BlockBase$BlockData a (LEntityHuman;LIBlockAccess;LBlockPosition;)F getDamage
BlockBase$BlockData a (LEnumDirection;LIBlockData;LGeneratorAccess;LBlockPosition;LBlockPosition;)LIBlockData; updateState
BlockBase$BlockData a (LIWorldReader;LBlockPosition;)Z canPlace
BlockBase$BlockData a (LWorld;LBlockPosition;LBlock;LBlockPosition;Z)V doPhysics
BlockBase$BlockData a (LWorld;LBlockPosition;LEntityHuman;)V attack
BlockBase$BlockData a (LWorld;LBlockPosition;LIBlockData;Z)V onPlace
BlockBase$BlockData a (LWorld;LBlockPosition;LItemStack;)V dropNaturally
BlockBase$BlockData a (LWorld;LEntityHuman;LEnumHand;LMovingObjectPositionBlock;)LEnumInteractionResult; interact
BlockBase$BlockData b ()LBlock; getBlock
BlockBase$BlockData b (LWorld;LBlockPosition;LIBlockData;Z)V remove
BlockBase$BlockData c ()LMaterial; getMaterial
BlockBase$BlockData g ()Z isAir
BlockBase$BlockData g (LIBlockAccess;LBlockPosition;)Z isOccluding
BlockBase$BlockData i ()Z isPowerSource
BlockBase$BlockData i strength
BlockBase$BlockData j ()Z isComplexRedstone
BlockBase$BlockData j (LIBlockAccess;LBlockPosition;)LVoxelShape; getShape
BlockBase$BlockData k ()LEnumPistonReaction; getPushReaction
BlockBase$BlockData k (LIBlockAccess;LBlockPosition;)LVoxelShape; getCollisionShape
BlockBase$BlockData m ()LFluid; getFluid
BlockBase$BlockData n ()Z isTicking
BlockBase$BlockData o ()LSoundEffectType; getStepSound
BlockBase$BlockData q ()Z isAlwaysDestroyable
BlockBase$EnumRandomOffset a NONE
BlockBase$EnumRandomOffset b XZ
BlockBase$EnumRandomOffset c XYZ
BlockBed a PART
BlockBed b OCCUPIED
BlockBed o color
BlockBrewingStand a HAS_BOTTLE
BlockButtonAbstract a POWERED
BlockCactus a AGE
BlockCake a BITES
BlockCarpet b color
BlockCauldron a LEVEL
BlockChest a (LBlockChest;LIBlockData;LWorld;LBlockPosition;Z)LIInventory; getInventory
BlockChest b FACING
BlockChorusFlower a AGE
BlockCobbleWall a UP
BlockCocoa a AGE
BlockComposter$ContainerOutput a blockData
BlockComposter$ContainerOutput b generatorAccess
BlockComposter$ContainerOutput c blockPosition
BlockComposter$ContainerOutput d emptied
BlockConcretePowder b (LIBlockAccess;LBlockPosition;LIBlockData;)Z canHarden
BlockCrops b (I)LIBlockData; setAge
BlockCrops b AGE
BlockCrops h (LIBlockData;)Z isRipe
BlockDaylightDetector a POWER
BlockDiodeAbstract l (LIBlockData;)Z isDiode
BlockDirectional a FACING
BlockDispenser a (LWorld;LBlockPosition;)V dispense
BlockDispenser a FACING
BlockDispenser b TRIGGERED
BlockDispenser c REGISTRY
BlockDoor a (LWorld;LBlockPosition;Z)V setDoor
BlockDoor a FACING
BlockDoor b OPEN
BlockDoor c HINGE
BlockDoor d POWERED
BlockDoor e HALF
BlockEnderChest b FACING
BlockEnderPortalFrame a FACING
BlockEnderPortalFrame b EYE
BlockFacingHorizontal aq FACING
BlockFalling h (LIBlockData;)Z canFallThrough
BlockFenceGate a OPEN
BlockFenceGate b POWERED
BlockFenceGate c IN_WALL
BlockFire a (LWorld;LBlockPosition;ILjava/util/Random;I)V trySpread
BlockFire b (LIBlockAccess;LBlockPosition;)LIBlockData; getPlacedState
BlockFire e (LIBlockAccess;LBlockPosition;)Z canBurn
BlockFire g AGE
BlockFire h (LIBlockData;)I getBurnChance
BlockFire h NORTH
BlockFire i EAST
BlockFire j SOUTH
BlockFire k WEST
BlockFire l (LIBlockData;)I getFlameChance
BlockFire o UPPER
BlockFire q flameChances
BlockFire r burnChances
BlockFloorSign c ROTATION
BlockFluids a (LGeneratorAccess;LBlockPosition;)V fizz
BlockFluids a LEVEL
BlockFurnace a FACING
BlockFurnace b LIT
BlockHopper a FACING
BlockHopper b ENABLED
BlockIce d (LIBlockData;LWorld;LBlockPosition;)V melt
BlockJukeBox a (LWorld;LBlockPosition;)V dropRecord
BlockJukeBox a HAS_RECORD
BlockLadder a FACING
BlockLeaves a DISTANCE
BlockLeaves b PERSISTENT
BlockLectern a (LWorld;LBlockPosition;LIBlockData;Z)V setHasBook
BlockLever a POWERED
BlockMinecartDetector c SHAPE
BlockMinecartDetector d POWERED
BlockMinecartTrack c SHAPE
BlockNetherWart a AGE
BlockNote a (LWorld;LBlockPosition;)V play
BlockNote a INSTRUMENT
BlockNote b POWERED
BlockNote c NOTE
BlockPiston b EXTENDED
BlockPiston i sticky
BlockPistonExtension b TYPE
BlockPistonExtension c SHORT
BlockPortal a AXIS
BlockPortal$Shape e ()V createPortal
BlockPortal$Shape f position
BlockPortal$Shape g height
BlockPortal$Shape h width
BlockPosition a ()J asLong
BlockPosition a (LEnumDirection;)LBlockPosition; shift
BlockPosition b ()LBlockPosition; up
BlockPosition b (I)LBlockPosition; up
BlockPosition b ZERO
BlockPosition d ()LBlockPosition; north
BlockPosition d (I)LBlockPosition; north
BlockPosition e ()LBlockPosition; south
BlockPosition e (I)LBlockPosition; south
BlockPosition e (J)LBlockPosition; fromLong
BlockPosition f ()LBlockPosition; west
BlockPosition f (I)LBlockPosition; west
BlockPosition g ()LBlockPosition; east
BlockPosition g (I)LBlockPosition; east
BlockPosition h ()LBlockPosition; immutableCopy
BlockPoweredRail c SHAPE
BlockPoweredRail d POWERED
BlockPressurePlateAbstract g (LIBlockData;)I getPower
BlockPressurePlateBinary d POWERED
BlockPressurePlateBinary$EnumMobType a EVERYTHING
BlockPressurePlateBinary$EnumMobType b MOBS
BlockPressurePlateWeighted d POWER
BlockPressurePlateWeighted e weight
BlockPropertyAttachPosition a FLOOR
BlockPropertyAttachPosition b WALL
BlockPropertyAttachPosition c CEILING
BlockPropertyBambooSize a NONE
BlockPropertyBambooSize b SMALL
BlockPropertyBambooSize c LARGE
BlockPropertyBedPart a HEAD
BlockPropertyBedPart b FOOT
BlockPropertyBellAttach a FLOOR
BlockPropertyBellAttach b CEILING
BlockPropertyBellAttach c SINGLE_WALL
BlockPropertyBellAttach d DOUBLE_WALL
BlockPropertyChestType a SINGLE
BlockPropertyChestType b LEFT
BlockPropertyChestType c RIGHT
BlockPropertyComparatorMode a COMPARE
BlockPropertyComparatorMode b SUBTRACT
BlockPropertyDoorHinge a LEFT
BlockPropertyDoorHinge b RIGHT
BlockPropertyDoubleBlockHalf a UPPER
BlockPropertyDoubleBlockHalf b LOWER
BlockPropertyHalf a TOP
BlockPropertyHalf b BOTTOM
BlockPropertyInstrument a HARP
BlockPropertyInstrument b BASEDRUM
BlockPropertyInstrument c SNARE
BlockPropertyInstrument d HAT
BlockPropertyInstrument e BASS
BlockPropertyInstrument f FLUTE
BlockPropertyInstrument g BELL
BlockPropertyInstrument h GUITAR
BlockPropertyInstrument i CHIME
BlockPropertyInstrument j XYLOPHONE
BlockPropertyInstrument k IRON_XYLOPHONE
BlockPropertyInstrument l COW_BELL
BlockPropertyInstrument m DIDGERIDOO
BlockPropertyInstrument n BIT
BlockPropertyInstrument o BANJO
BlockPropertyInstrument p PLING
BlockPropertyJigsawOrientation a DOWN_EAST
BlockPropertyJigsawOrientation b DOWN_NORTH
BlockPropertyJigsawOrientation c DOWN_SOUTH
BlockPropertyJigsawOrientation d DOWN_WEST
BlockPropertyJigsawOrientation e UP_EAST
BlockPropertyJigsawOrientation f UP_NORTH
BlockPropertyJigsawOrientation g UP_SOUTH
BlockPropertyJigsawOrientation h UP_WEST
BlockPropertyJigsawOrientation i WEST_UP
BlockPropertyJigsawOrientation j EAST_UP
BlockPropertyJigsawOrientation k NORTH_UP
BlockPropertyJigsawOrientation l SOUTH_UP
BlockPropertyPistonType a DEFAULT
BlockPropertyPistonType b STICKY
BlockPropertyRedstoneSide a UP
BlockPropertyRedstoneSide b SIDE
BlockPropertyRedstoneSide c NONE
BlockPropertySlabType a TOP
BlockPropertySlabType b BOTTOM
BlockPropertySlabType c DOUBLE
BlockPropertyStairsShape a STRAIGHT
BlockPropertyStairsShape b INNER_LEFT
BlockPropertyStairsShape c INNER_RIGHT
BlockPropertyStairsShape d OUTER_LEFT
BlockPropertyStairsShape e OUTER_RIGHT
BlockPropertyStructureMode a SAVE
BlockPropertyStructureMode b LOAD
BlockPropertyStructureMode c CORNER
BlockPropertyStructureMode d DATA
BlockPropertyTrackPosition a NORTH_SOUTH
BlockPropertyTrackPosition b EAST_WEST
BlockPropertyTrackPosition c ASCENDING_EAST
BlockPropertyTrackPosition d ASCENDING_WEST
BlockPropertyTrackPosition e ASCENDING_NORTH
BlockPropertyTrackPosition f ASCENDING_SOUTH
BlockPropertyTrackPosition g SOUTH_EAST
BlockPropertyTrackPosition h SOUTH_WEST
BlockPropertyTrackPosition i NORTH_WEST
BlockPropertyTrackPosition j NORTH_EAST
BlockPropertyWallHeight a NONE
BlockPropertyWallHeight b LOW
BlockPropertyWallHeight c TALL
BlockPumpkinCarved d ()LShapeDetector; getSnowmanShape
BlockPumpkinCarved t ()LShapeDetector; getIronGolemShape
BlockRedstoneComparator a MODE
BlockRedstoneOre a (LWorld;LBlockPosition;)V playEffect
BlockRedstoneOre d (LIBlockData;LWorld;LBlockPosition;)V interact
BlockRedstoneTorch a LIT
BlockRedstoneWire a NORTH
BlockRedstoneWire b EAST
BlockRedstoneWire c SOUTH
BlockRedstoneWire d WEST
BlockRedstoneWire e POWER
BlockReed a AGE
BlockRepeater a LOCKED
BlockRepeater d DELAY
BlockRotatable a AXIS
BlockSapling a (LWorldServer;LBlockPosition;LIBlockData;Ljava/util/Random;)V grow
BlockSapling a STAGE
BlockShulkerBox c color
BlockSkull$Type a SKELETON
BlockSkull$Type b WITHER_SKELETON
BlockSkull$Type c PLAYER
BlockSkull$Type d ZOMBIE
BlockSkull$Type e CREEPER
BlockSkull$Type f DRAGON
BlockSnow a LAYERS
BlockSoil a MOISTURE
BlockSoil d (LIBlockData;LWorld;LBlockPosition;)V fade
BlockStainedGlass a color
BlockStainedGlassPane i color
BlockStairs a FACING
BlockStairs b HALF
BlockStairs c SHAPE
BlockStateBoolean a (Ljava/lang/String;)LBlockStateBoolean; of
BlockStateDirection a (Ljava/lang/String;)LBlockStateDirection; of
BlockStateEnum a (Ljava/lang/String;Ljava/lang/Class;)LBlockStateEnum; of
BlockStateEnum a (Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)LBlockStateEnum; of
BlockStateInteger a (Ljava/lang/String;II)LBlockStateInteger; of
BlockStateList b ()LIBlockDataHolder; getBlockData
BlockStateList c ()Ljava/lang/Object; getBlock
BlockStem a AGE
BlockStem c blockFruit
BlockTall a NORTH
BlockTall b EAST
BlockTall c SOUTH
BlockTall d WEST
BlockTallPlant a HALF
BlockTrapdoor a OPEN
BlockTrapdoor b HALF
BlockTripwire a POWERED
BlockTripwire b ATTACHED
BlockTripwire c DISARMED
BlockTripwire d NORTH
BlockTripwire e EAST
BlockTripwire f SOUTH
BlockTripwire g WEST
BlockTripwireHook a FACING
BlockTripwireHook b POWERED
BlockTripwireHook c ATTACHED
BlockVine a (LEnumDirection;)LBlockStateBoolean; getDirection
BlockVine a UP
BlockVine b NORTH
BlockVine c EAST
BlockVine d SOUTH
BlockVine e WEST
BlockVine m (LIBlockData;)Z canSpread
BlockWallSign c FACING
Blocks A WATER
Blocks B LAVA
Blocks C SAND
Blocks D RED_SAND
Blocks E GRAVEL
Blocks F GOLD_ORE
Blocks G IRON_ORE
Blocks H COAL_ORE
Blocks I NETHER_GOLD_ORE
Blocks J OAK_LOG
Blocks K SPRUCE_LOG
Blocks L BIRCH_LOG
Blocks M JUNGLE_LOG
Blocks N ACACIA_LOG
Blocks O DARK_OAK_LOG
Blocks P STRIPPED_SPRUCE_LOG
Blocks Q STRIPPED_BIRCH_LOG
Blocks R STRIPPED_JUNGLE_LOG
Blocks S STRIPPED_ACACIA_LOG
Blocks T STRIPPED_DARK_OAK_LOG
Blocks U STRIPPED_OAK_LOG
Blocks V OAK_WOOD
Blocks W SPRUCE_WOOD
Blocks X BIRCH_WOOD
Blocks Y JUNGLE_WOOD
Blocks Z ACACIA_WOOD
Blocks a AIR
Blocks aA LIGHT_BLUE_BED
Blocks aB YELLOW_BED
Blocks aC LIME_BED
Blocks aD PINK_BED
Blocks aE GRAY_BED
Blocks aF LIGHT_GRAY_BED
Blocks aG CYAN_BED
Blocks aH PURPLE_BED
Blocks aI BLUE_BED
Blocks aJ BROWN_BED
Blocks aK GREEN_BED
Blocks aL RED_BED
Blocks aM BLACK_BED
Blocks aN POWERED_RAIL
Blocks aO DETECTOR_RAIL
Blocks aP STICKY_PISTON
Blocks aQ COBWEB
Blocks aR GRASS
Blocks aS FERN
Blocks aT DEAD_BUSH
Blocks aU SEAGRASS
Blocks aV TALL_SEAGRASS
Blocks aW PISTON
Blocks aX PISTON_HEAD
Blocks aY WHITE_WOOL
Blocks aZ ORANGE_WOOL
Blocks aa DARK_OAK_WOOD
Blocks ab STRIPPED_OAK_WOOD
Blocks ac STRIPPED_SPRUCE_WOOD
Blocks ad STRIPPED_BIRCH_WOOD
Blocks ae STRIPPED_JUNGLE_WOOD
Blocks af STRIPPED_ACACIA_WOOD
Blocks ag STRIPPED_DARK_OAK_WOOD
Blocks ah OAK_LEAVES
Blocks ai SPRUCE_LEAVES
Blocks aj BIRCH_LEAVES
Blocks ak JUNGLE_LEAVES
Blocks al ACACIA_LEAVES
Blocks am DARK_OAK_LEAVES
Blocks an SPONGE
Blocks ao WET_SPONGE
Blocks ap GLASS
Blocks aq LAPIS_ORE
Blocks ar LAPIS_BLOCK
Blocks as DISPENSER
Blocks at SANDSTONE
Blocks au CHISELED_SANDSTONE
Blocks av CUT_SANDSTONE
Blocks aw NOTE_BLOCK
Blocks ax WHITE_BED
Blocks ay ORANGE_BED
Blocks az MAGENTA_BED
Blocks b STONE
Blocks bA WITHER_ROSE
Blocks bB LILY_OF_THE_VALLEY
Blocks bC BROWN_MUSHROOM
Blocks bD RED_MUSHROOM
Blocks bE GOLD_BLOCK
Blocks bF IRON_BLOCK
Blocks bG BRICKS
Blocks bH TNT
Blocks bI BOOKSHELF
Blocks bJ MOSSY_COBBLESTONE
Blocks bK OBSIDIAN
Blocks bL TORCH
Blocks bM WALL_TORCH
Blocks bN FIRE
Blocks bO SOUL_FIRE
Blocks bP SPAWNER
Blocks bQ OAK_STAIRS
Blocks bR CHEST
Blocks bS REDSTONE_WIRE
Blocks bT DIAMOND_ORE
Blocks bU DIAMOND_BLOCK
Blocks bV CRAFTING_TABLE
Blocks bW WHEAT
Blocks bX FARMLAND
Blocks bY FURNACE
Blocks bZ OAK_SIGN
Blocks ba MAGENTA_WOOL
Blocks bb LIGHT_BLUE_WOOL
Blocks bc YELLOW_WOOL
Blocks bd LIME_WOOL
Blocks be PINK_WOOL
Blocks bf GRAY_WOOL
Blocks bg LIGHT_GRAY_WOOL
Blocks bh CYAN_WOOL
Blocks bi PURPLE_WOOL
Blocks bj BLUE_WOOL
Blocks bk BROWN_WOOL
Blocks bl GREEN_WOOL
Blocks bm RED_WOOL
Blocks bn BLACK_WOOL
Blocks bo MOVING_PISTON
Blocks bp DANDELION
Blocks bq POPPY
Blocks br BLUE_ORCHID
Blocks bs ALLIUM
Blocks bt AZURE_BLUET
Blocks bu RED_TULIP
Blocks bv ORANGE_TULIP
Blocks bw WHITE_TULIP
Blocks bx PINK_TULIP
Blocks by OXEYE_DAISY
Blocks bz CORNFLOWER
Blocks c GRANITE
Blocks cA REDSTONE_WALL_TORCH
Blocks cB STONE_BUTTON
Blocks cC SNOW
Blocks cD ICE
Blocks cE SNOW_BLOCK
Blocks cF CACTUS
Blocks cG CLAY
Blocks cH SUGAR_CANE
Blocks cI JUKEBOX
Blocks cJ OAK_FENCE
Blocks cK PUMPKIN
Blocks cL NETHERRACK
Blocks cM SOUL_SAND
Blocks cN SOUL_SOIL
Blocks cO BASALT
Blocks cQ SOUL_TORCH
Blocks cR SOUL_WALL_TORCH
Blocks cS GLOWSTONE
Blocks cT NETHER_PORTAL
Blocks cU CARVED_PUMPKIN
Blocks cV JACK_O_LANTERN
Blocks cW CAKE
Blocks cX REPEATER
Blocks cY WHITE_STAINED_GLASS
Blocks cZ ORANGE_STAINED_GLASS
Blocks ca SPRUCE_SIGN
Blocks cb BIRCH_SIGN
Blocks cc ACACIA_SIGN
Blocks cd JUNGLE_SIGN
Blocks ce DARK_OAK_SIGN
Blocks cf OAK_DOOR
Blocks cg LADDER
Blocks ch RAIL
Blocks ci COBBLESTONE_STAIRS
Blocks cj OAK_WALL_SIGN
Blocks ck SPRUCE_WALL_SIGN
Blocks cl BIRCH_WALL_SIGN
Blocks cm ACACIA_WALL_SIGN
Blocks cn JUNGLE_WALL_SIGN
Blocks co DARK_OAK_WALL_SIGN
Blocks cp LEVER
Blocks cq STONE_PRESSURE_PLATE
Blocks cr IRON_DOOR
Blocks cs OAK_PRESSURE_PLATE
Blocks ct SPRUCE_PRESSURE_PLATE
Blocks cu BIRCH_PRESSURE_PLATE
Blocks cv JUNGLE_PRESSURE_PLATE
Blocks cw ACACIA_PRESSURE_PLATE
Blocks cx DARK_OAK_PRESSURE_PLATE
Blocks cy REDSTONE_ORE
Blocks cz REDSTONE_TORCH
Blocks d POLISHED_GRANITE
Blocks dA INFESTED_STONE_BRICKS
Blocks dB INFESTED_MOSSY_STONE_BRICKS
Blocks dC INFESTED_CRACKED_STONE_BRICKS
Blocks dD INFESTED_CHISELED_STONE_BRICKS
Blocks dE BROWN_MUSHROOM_BLOCK
Blocks dF RED_MUSHROOM_BLOCK
Blocks dG MUSHROOM_STEM
Blocks dH IRON_BARS
Blocks dI CHAIN
Blocks dJ GLASS_PANE
Blocks dK MELON
Blocks dL ATTACHED_PUMPKIN_STEM
Blocks dM ATTACHED_MELON_STEM
Blocks dN PUMPKIN_STEM
Blocks dO MELON_STEM
Blocks dP VINE
Blocks dQ OAK_FENCE_GATE
Blocks dR BRICK_STAIRS
Blocks dS STONE_BRICK_STAIRS
Blocks dT MYCELIUM
Blocks dU LILY_PAD
Blocks dV NETHER_BRICKS
Blocks dW NETHER_BRICK_FENCE
Blocks dX NETHER_BRICK_STAIRS
Blocks dY NETHER_WART
Blocks dZ ENCHANTING_TABLE
Blocks da MAGENTA_STAINED_GLASS
Blocks db LIGHT_BLUE_STAINED_GLASS
Blocks dc YELLOW_STAINED_GLASS
Blocks dd LIME_STAINED_GLASS
Blocks de PINK_STAINED_GLASS
Blocks df GRAY_STAINED_GLASS
Blocks dg LIGHT_GRAY_STAINED_GLASS
Blocks dh CYAN_STAINED_GLASS
Blocks di PURPLE_STAINED_GLASS
Blocks dj BLUE_STAINED_GLASS
Blocks dk BROWN_STAINED_GLASS
Blocks dl GREEN_STAINED_GLASS
Blocks dm RED_STAINED_GLASS
Blocks dn BLACK_STAINED_GLASS
Blocks do OAK_TRAPDOOR
Blocks dp SPRUCE_TRAPDOOR
Blocks dq BIRCH_TRAPDOOR
Blocks dr JUNGLE_TRAPDOOR
Blocks ds ACACIA_TRAPDOOR
Blocks dt DARK_OAK_TRAPDOOR
Blocks du STONE_BRICKS
Blocks dv MOSSY_STONE_BRICKS
Blocks dw CRACKED_STONE_BRICKS
Blocks dx CHISELED_STONE_BRICKS
Blocks dy INFESTED_STONE
Blocks dz INFESTED_COBBLESTONE
Blocks e DIORITE
Blocks eA POTTED_ACACIA_SAPLING
Blocks eB POTTED_DARK_OAK_SAPLING
Blocks eC POTTED_FERN
Blocks eD POTTED_DANDELION
Blocks eE POTTED_POPPY
Blocks eF POTTED_BLUE_ORCHID
Blocks eG POTTED_ALLIUM
Blocks eH POTTED_AZURE_BLUET
Blocks eI POTTED_RED_TULIP
Blocks eJ POTTED_ORANGE_TULIP
Blocks eK POTTED_WHITE_TULIP
Blocks eL POTTED_PINK_TULIP
Blocks eM POTTED_OXEYE_DAISY
Blocks eN POTTED_CORNFLOWER
Blocks eO POTTED_LILY_OF_THE_VALLEY
Blocks eP POTTED_WITHER_ROSE
Blocks eQ POTTED_RED_MUSHROOM
Blocks eR POTTED_BROWN_MUSHROOM
Blocks eS POTTED_DEAD_BUSH
Blocks eT POTTED_CACTUS
Blocks eU CARROTS
Blocks eV POTATOES
Blocks eW OAK_BUTTON
Blocks eX SPRUCE_BUTTON
Blocks eY BIRCH_BUTTON
Blocks eZ JUNGLE_BUTTON
Blocks ea BREWING_STAND
Blocks eb CAULDRON
Blocks ec END_PORTAL
Blocks ed END_PORTAL_FRAME
Blocks ee END_STONE
Blocks ef DRAGON_EGG
Blocks eg REDSTONE_LAMP
Blocks eh COCOA
Blocks ei SANDSTONE_STAIRS
Blocks ej EMERALD_ORE
Blocks ek ENDER_CHEST
Blocks el TRIPWIRE_HOOK
Blocks em TRIPWIRE
Blocks en EMERALD_BLOCK
Blocks eo SPRUCE_STAIRS
Blocks ep BIRCH_STAIRS
Blocks eq JUNGLE_STAIRS
Blocks er COMMAND_BLOCK
Blocks es BEACON
Blocks et COBBLESTONE_WALL
Blocks eu MOSSY_COBBLESTONE_WALL
Blocks ev FLOWER_POT
Blocks ew POTTED_OAK_SAPLING
Blocks ex POTTED_SPRUCE_SAPLING
Blocks ey POTTED_BIRCH_SAPLING
Blocks ez POTTED_JUNGLE_SAPLING
Blocks f POLISHED_DIORITE
Blocks fA CHISELED_QUARTZ_BLOCK
Blocks fB QUARTZ_PILLAR
Blocks fC QUARTZ_STAIRS
Blocks fD ACTIVATOR_RAIL
Blocks fE DROPPER
Blocks fF WHITE_TERRACOTTA
Blocks fG ORANGE_TERRACOTTA
Blocks fH MAGENTA_TERRACOTTA
Blocks fI LIGHT_BLUE_TERRACOTTA
Blocks fJ YELLOW_TERRACOTTA
Blocks fK LIME_TERRACOTTA
Blocks fL PINK_TERRACOTTA
Blocks fM GRAY_TERRACOTTA
Blocks fN LIGHT_GRAY_TERRACOTTA
Blocks fO CYAN_TERRACOTTA
Blocks fP PURPLE_TERRACOTTA
Blocks fQ BLUE_TERRACOTTA
Blocks fR BROWN_TERRACOTTA
Blocks fS GREEN_TERRACOTTA
Blocks fT RED_TERRACOTTA
Blocks fU BLACK_TERRACOTTA
Blocks fV WHITE_STAINED_GLASS_PANE
Blocks fW ORANGE_STAINED_GLASS_PANE
Blocks fX MAGENTA_STAINED_GLASS_PANE
Blocks fY LIGHT_BLUE_STAINED_GLASS_PANE
Blocks fZ YELLOW_STAINED_GLASS_PANE
Blocks fa ACACIA_BUTTON
Blocks fb DARK_OAK_BUTTON
Blocks fc SKELETON_SKULL
Blocks fd SKELETON_WALL_SKULL
Blocks fe WITHER_SKELETON_SKULL
Blocks ff WITHER_SKELETON_WALL_SKULL
Blocks fg ZOMBIE_HEAD
Blocks fh ZOMBIE_WALL_HEAD
Blocks fi PLAYER_HEAD
Blocks fj PLAYER_WALL_HEAD
Blocks fk CREEPER_HEAD
Blocks fl CREEPER_WALL_HEAD
Blocks fm DRAGON_HEAD
Blocks fn DRAGON_WALL_HEAD
Blocks fo ANVIL
Blocks fp CHIPPED_ANVIL
Blocks fq DAMAGED_ANVIL
Blocks fr TRAPPED_CHEST
Blocks fs LIGHT_WEIGHTED_PRESSURE_PLATE
Blocks ft HEAVY_WEIGHTED_PRESSURE_PLATE
Blocks fu COMPARATOR
Blocks fv DAYLIGHT_DETECTOR
Blocks fw REDSTONE_BLOCK
Blocks fx NETHER_QUARTZ_ORE
Blocks fy HOPPER
Blocks fz QUARTZ_BLOCK
Blocks g ANDESITE
Blocks gA HAY_BLOCK
Blocks gB WHITE_CARPET
Blocks gC ORANGE_CARPET
Blocks gD MAGENTA_CARPET
Blocks gE LIGHT_BLUE_CARPET
Blocks gF YELLOW_CARPET
Blocks gG LIME_CARPET
Blocks gH PINK_CARPET
Blocks gI GRAY_CARPET
Blocks gJ LIGHT_GRAY_CARPET
Blocks gK CYAN_CARPET
Blocks gL PURPLE_CARPET
Blocks gM BLUE_CARPET
Blocks gN BROWN_CARPET
Blocks gO GREEN_CARPET
Blocks gP RED_CARPET
Blocks gQ BLACK_CARPET
Blocks gR TERRACOTTA
Blocks gS COAL_BLOCK
Blocks gT PACKED_ICE
Blocks gU SUNFLOWER
Blocks gV LILAC
Blocks gW ROSE_BUSH
Blocks gX PEONY
Blocks gY TALL_GRASS
Blocks gZ LARGE_FERN
Blocks ga LIME_STAINED_GLASS_PANE
Blocks gb PINK_STAINED_GLASS_PANE
Blocks gc GRAY_STAINED_GLASS_PANE
Blocks gd LIGHT_GRAY_STAINED_GLASS_PANE
Blocks ge CYAN_STAINED_GLASS_PANE
Blocks gf PURPLE_STAINED_GLASS_PANE
Blocks gg BLUE_STAINED_GLASS_PANE
Blocks gh BROWN_STAINED_GLASS_PANE
Blocks gi GREEN_STAINED_GLASS_PANE
Blocks gj RED_STAINED_GLASS_PANE
Blocks gk BLACK_STAINED_GLASS_PANE
Blocks gl ACACIA_STAIRS
Blocks gm DARK_OAK_STAIRS
Blocks gn SLIME_BLOCK
Blocks go BARRIER
Blocks gp IRON_TRAPDOOR
Blocks gq PRISMARINE
Blocks gr PRISMARINE_BRICKS
Blocks gs DARK_PRISMARINE
Blocks gt PRISMARINE_STAIRS
Blocks gu PRISMARINE_BRICK_STAIRS
Blocks gv DARK_PRISMARINE_STAIRS
Blocks gw PRISMARINE_SLAB
Blocks gx PRISMARINE_BRICK_SLAB
Blocks gy DARK_PRISMARINE_SLAB
Blocks gz SEA_LANTERN
Blocks h POLISHED_ANDESITE
Blocks hA PURPLE_WALL_BANNER
Blocks hB BLUE_WALL_BANNER
Blocks hC BROWN_WALL_BANNER
Blocks hD GREEN_WALL_BANNER
Blocks hE RED_WALL_BANNER
Blocks hF BLACK_WALL_BANNER
Blocks hG RED_SANDSTONE
Blocks hH CHISELED_RED_SANDSTONE
Blocks hI CUT_RED_SANDSTONE
Blocks hJ RED_SANDSTONE_STAIRS
Blocks hK OAK_SLAB
Blocks hL SPRUCE_SLAB
Blocks hM BIRCH_SLAB
Blocks hN JUNGLE_SLAB
Blocks hO ACACIA_SLAB
Blocks hP DARK_OAK_SLAB
Blocks hQ STONE_SLAB
Blocks hR SMOOTH_STONE_SLAB
Blocks hS SANDSTONE_SLAB
Blocks hT CUT_SANDSTONE_SLAB
Blocks hU PETRIFIED_OAK_SLAB
Blocks hV COBBLESTONE_SLAB
Blocks hW BRICK_SLAB
Blocks hX STONE_BRICK_SLAB
Blocks hY NETHER_BRICK_SLAB
Blocks hZ QUARTZ_SLAB
Blocks ha WHITE_BANNER
Blocks hb ORANGE_BANNER
Blocks hc MAGENTA_BANNER
Blocks hd LIGHT_BLUE_BANNER
Blocks he YELLOW_BANNER
Blocks hf LIME_BANNER
Blocks hg PINK_BANNER
Blocks hh GRAY_BANNER
Blocks hi LIGHT_GRAY_BANNER
Blocks hj CYAN_BANNER
Blocks hk PURPLE_BANNER
Blocks hl BLUE_BANNER
Blocks hm BROWN_BANNER
Blocks hn GREEN_BANNER
Blocks ho RED_BANNER
Blocks hp BLACK_BANNER
Blocks hq WHITE_WALL_BANNER
Blocks hr ORANGE_WALL_BANNER
Blocks hs MAGENTA_WALL_BANNER
Blocks ht LIGHT_BLUE_WALL_BANNER
Blocks hu YELLOW_WALL_BANNER
Blocks hv LIME_WALL_BANNER
Blocks hw PINK_WALL_BANNER
Blocks hx GRAY_WALL_BANNER
Blocks hy LIGHT_GRAY_WALL_BANNER
Blocks hz CYAN_WALL_BANNER
Blocks i GRASS_BLOCK
Blocks iA PURPUR_PILLAR
Blocks iB PURPUR_STAIRS
Blocks iC END_STONE_BRICKS
Blocks iD BEETROOTS
Blocks iE GRASS_PATH
Blocks iF END_GATEWAY
Blocks iG REPEATING_COMMAND_BLOCK
Blocks iH CHAIN_COMMAND_BLOCK
Blocks iI FROSTED_ICE
Blocks iJ MAGMA_BLOCK
Blocks iK NETHER_WART_BLOCK
Blocks iL RED_NETHER_BRICKS
Blocks iM BONE_BLOCK
Blocks iN STRUCTURE_VOID
Blocks iO OBSERVER
Blocks iP SHULKER_BOX
Blocks iQ WHITE_SHULKER_BOX
Blocks iR ORANGE_SHULKER_BOX
Blocks iS MAGENTA_SHULKER_BOX
Blocks iT LIGHT_BLUE_SHULKER_BOX
Blocks iU YELLOW_SHULKER_BOX
Blocks iV LIME_SHULKER_BOX
Blocks iW PINK_SHULKER_BOX
Blocks iX GRAY_SHULKER_BOX
Blocks iY LIGHT_GRAY_SHULKER_BOX
Blocks iZ CYAN_SHULKER_BOX
Blocks ia RED_SANDSTONE_SLAB
Blocks ib CUT_RED_SANDSTONE_SLAB
Blocks ic PURPUR_SLAB
Blocks id SMOOTH_STONE
Blocks ie SMOOTH_SANDSTONE
Blocks if SMOOTH_QUARTZ
Blocks ig SMOOTH_RED_SANDSTONE
Blocks ih SPRUCE_FENCE_GATE
Blocks ii BIRCH_FENCE_GATE
Blocks ij JUNGLE_FENCE_GATE
Blocks ik ACACIA_FENCE_GATE
Blocks il DARK_OAK_FENCE_GATE
Blocks im SPRUCE_FENCE
Blocks in BIRCH_FENCE
Blocks io JUNGLE_FENCE
Blocks ip ACACIA_FENCE
Blocks iq DARK_OAK_FENCE
Blocks ir SPRUCE_DOOR
Blocks is BIRCH_DOOR
Blocks it JUNGLE_DOOR
Blocks iu ACACIA_DOOR
Blocks iv DARK_OAK_DOOR
Blocks iw END_ROD
Blocks ix CHORUS_PLANT
Blocks iy CHORUS_FLOWER
Blocks iz PURPUR_BLOCK
Blocks j DIRT
Blocks jA YELLOW_CONCRETE
Blocks jB LIME_CONCRETE
Blocks jC PINK_CONCRETE
Blocks jD GRAY_CONCRETE
Blocks jE LIGHT_GRAY_CONCRETE
Blocks jF CYAN_CONCRETE
Blocks jG PURPLE_CONCRETE
Blocks jH BLUE_CONCRETE
Blocks jI BROWN_CONCRETE
Blocks jJ GREEN_CONCRETE
Blocks jK RED_CONCRETE
Blocks jL BLACK_CONCRETE
Blocks jM WHITE_CONCRETE_POWDER
Blocks jN ORANGE_CONCRETE_POWDER
Blocks jO MAGENTA_CONCRETE_POWDER
Blocks jP LIGHT_BLUE_CONCRETE_POWDER
Blocks jQ YELLOW_CONCRETE_POWDER
Blocks jR LIME_CONCRETE_POWDER
Blocks jS PINK_CONCRETE_POWDER
Blocks jT GRAY_CONCRETE_POWDER
Blocks jU LIGHT_GRAY_CONCRETE_POWDER
Blocks jV CYAN_CONCRETE_POWDER
Blocks jW PURPLE_CONCRETE_POWDER
Blocks jX BLUE_CONCRETE_POWDER
Blocks jY BROWN_CONCRETE_POWDER
Blocks jZ GREEN_CONCRETE_POWDER
Blocks ja PURPLE_SHULKER_BOX
Blocks jb BLUE_SHULKER_BOX
Blocks jc BROWN_SHULKER_BOX
Blocks jd GREEN_SHULKER_BOX
Blocks je RED_SHULKER_BOX
Blocks jf BLACK_SHULKER_BOX
Blocks jg WHITE_GLAZED_TERRACOTTA
Blocks jh ORANGE_GLAZED_TERRACOTTA
Blocks ji MAGENTA_GLAZED_TERRACOTTA
Blocks jj LIGHT_BLUE_GLAZED_TERRACOTTA
Blocks jk YELLOW_GLAZED_TERRACOTTA
Blocks jl LIME_GLAZED_TERRACOTTA
Blocks jm PINK_GLAZED_TERRACOTTA
Blocks jn GRAY_GLAZED_TERRACOTTA
Blocks jo LIGHT_GRAY_GLAZED_TERRACOTTA
Blocks jp CYAN_GLAZED_TERRACOTTA
Blocks jq PURPLE_GLAZED_TERRACOTTA
Blocks jr BLUE_GLAZED_TERRACOTTA
Blocks js BROWN_GLAZED_TERRACOTTA
Blocks jt GREEN_GLAZED_TERRACOTTA
Blocks ju RED_GLAZED_TERRACOTTA
Blocks jv BLACK_GLAZED_TERRACOTTA
Blocks jw WHITE_CONCRETE
Blocks jx ORANGE_CONCRETE
Blocks jy MAGENTA_CONCRETE
Blocks jz LIGHT_BLUE_CONCRETE
Blocks k COARSE_DIRT
Blocks kA DEAD_TUBE_CORAL_FAN
Blocks kB DEAD_BRAIN_CORAL_FAN
Blocks kC DEAD_BUBBLE_CORAL_FAN
Blocks kD DEAD_FIRE_CORAL_FAN
Blocks kE DEAD_HORN_CORAL_FAN
Blocks kF TUBE_CORAL_FAN
Blocks kG BRAIN_CORAL_FAN
Blocks kH BUBBLE_CORAL_FAN
Blocks kI FIRE_CORAL_FAN
Blocks kJ HORN_CORAL_FAN
Blocks kK DEAD_TUBE_CORAL_WALL_FAN
Blocks kL DEAD_BRAIN_CORAL_WALL_FAN
Blocks kM DEAD_BUBBLE_CORAL_WALL_FAN
Blocks kN DEAD_FIRE_CORAL_WALL_FAN
Blocks kO DEAD_HORN_CORAL_WALL_FAN
Blocks kP TUBE_CORAL_WALL_FAN
Blocks kQ BRAIN_CORAL_WALL_FAN
Blocks kR BUBBLE_CORAL_WALL_FAN
Blocks kS FIRE_CORAL_WALL_FAN
Blocks kT HORN_CORAL_WALL_FAN
Blocks kU SEA_PICKLE
Blocks kV BLUE_ICE
Blocks kW CONDUIT
Blocks kX BAMBOO_SAPLING
Blocks kY BAMBOO
Blocks kZ POTTED_BAMBOO
Blocks ka RED_CONCRETE_POWDER
Blocks kb BLACK_CONCRETE_POWDER
Blocks kc KELP
Blocks kd KELP_PLANT
Blocks ke DRIED_KELP_BLOCK
Blocks kf TURTLE_EGG
Blocks kg DEAD_TUBE_CORAL_BLOCK
Blocks kh DEAD_BRAIN_CORAL_BLOCK
Blocks ki DEAD_BUBBLE_CORAL_BLOCK
Blocks kj DEAD_FIRE_CORAL_BLOCK
Blocks kk DEAD_HORN_CORAL_BLOCK
Blocks kl TUBE_CORAL_BLOCK
Blocks km BRAIN_CORAL_BLOCK
Blocks kn BUBBLE_CORAL_BLOCK
Blocks ko FIRE_CORAL_BLOCK
Blocks kp HORN_CORAL_BLOCK
Blocks kq DEAD_TUBE_CORAL
Blocks kr DEAD_BRAIN_CORAL
Blocks ks DEAD_BUBBLE_CORAL
Blocks kt DEAD_FIRE_CORAL
Blocks ku DEAD_HORN_CORAL
Blocks kv TUBE_CORAL
Blocks kw BRAIN_CORAL
Blocks kx BUBBLE_CORAL
Blocks ky FIRE_CORAL
Blocks kz HORN_CORAL
Blocks l PODZOL
Blocks lA ANDESITE_SLAB
Blocks lB RED_NETHER_BRICK_SLAB
Blocks lC POLISHED_ANDESITE_SLAB
Blocks lD DIORITE_SLAB
Blocks lE BRICK_WALL
Blocks lF PRISMARINE_WALL
Blocks lG RED_SANDSTONE_WALL
Blocks lH MOSSY_STONE_BRICK_WALL
Blocks lI GRANITE_WALL
Blocks lJ STONE_BRICK_WALL
Blocks lK NETHER_BRICK_WALL
Blocks lL ANDESITE_WALL
Blocks lM RED_NETHER_BRICK_WALL
Blocks lN SANDSTONE_WALL
Blocks lO END_STONE_BRICK_WALL
Blocks lP DIORITE_WALL
Blocks lQ SCAFFOLDING
Blocks lR LOOM
Blocks lS BARREL
Blocks lT SMOKER
Blocks lU BLAST_FURNACE
Blocks lV CARTOGRAPHY_TABLE
Blocks lW FLETCHING_TABLE
Blocks lX GRINDSTONE
Blocks lY LECTERN
Blocks lZ SMITHING_TABLE
Blocks la VOID_AIR
Blocks lb CAVE_AIR
Blocks lc BUBBLE_COLUMN
Blocks ld POLISHED_GRANITE_STAIRS
Blocks le SMOOTH_RED_SANDSTONE_STAIRS
Blocks lf MOSSY_STONE_BRICK_STAIRS
Blocks lg POLISHED_DIORITE_STAIRS
Blocks lh MOSSY_COBBLESTONE_STAIRS
Blocks li END_STONE_BRICK_STAIRS
Blocks lj STONE_STAIRS
Blocks lk SMOOTH_SANDSTONE_STAIRS
Blocks ll SMOOTH_QUARTZ_STAIRS
Blocks lm GRANITE_STAIRS
Blocks ln ANDESITE_STAIRS
Blocks lo RED_NETHER_BRICK_STAIRS
Blocks lp POLISHED_ANDESITE_STAIRS
Blocks lq DIORITE_STAIRS
Blocks lr POLISHED_GRANITE_SLAB
Blocks ls SMOOTH_RED_SANDSTONE_SLAB
Blocks lt MOSSY_STONE_BRICK_SLAB
Blocks lu POLISHED_DIORITE_SLAB
Blocks lv MOSSY_COBBLESTONE_SLAB
Blocks lw END_STONE_BRICK_SLAB
Blocks lx SMOOTH_SANDSTONE_SLAB
Blocks ly SMOOTH_QUARTZ_SLAB
Blocks lz GRANITE_SLAB
Blocks m COBBLESTONE
Blocks mA TWISTING_VINES_PLANT
Blocks mB CRIMSON_ROOTS
Blocks mC CRIMSON_PLANKS
Blocks mD WARPED_PLANKS
Blocks mE CRIMSON_SLAB
Blocks mF WARPED_SLAB
Blocks mG CRIMSON_PRESSURE_PLATE
Blocks mH WARPED_PRESSURE_PLATE
Blocks mI CRIMSON_FENCE
Blocks mJ WARPED_FENCE
Blocks mK CRIMSON_TRAPDOOR
Blocks mL WARPED_TRAPDOOR
Blocks mM CRIMSON_FENCE_GATE
Blocks mN WARPED_FENCE_GATE
Blocks mO CRIMSON_STAIRS
Blocks mP WARPED_STAIRS
Blocks mQ CRIMSON_BUTTON
Blocks mR WARPED_BUTTON
Blocks mS CRIMSON_DOOR
Blocks mT WARPED_DOOR
Blocks mU CRIMSON_SIGN
Blocks mV WARPED_SIGN
Blocks mW CRIMSON_WALL_SIGN
Blocks mX WARPED_WALL_SIGN
Blocks mY STRUCTURE_BLOCK
Blocks mZ JIGSAW
Blocks ma STONECUTTER
Blocks mb BELL
Blocks mc LANTERN
Blocks md SOUL_LANTERN
Blocks me CAMPFIRE
Blocks mf SOUL_CAMPFIRE
Blocks mg SWEET_BERRY_BUSH
Blocks mh WARPED_STEM
Blocks mi STRIPPED_WARPED_STEM
Blocks mj WARPED_HYPHAE
Blocks mk STRIPPED_WARPED_HYPHAE
Blocks ml WARPED_NYLIUM
Blocks mm WARPED_FUNGUS
Blocks mn WARPED_WART_BLOCK
Blocks mo WARPED_ROOTS
Blocks mp NETHER_SPROUTS
Blocks mq CRIMSON_STEM
Blocks mr STRIPPED_CRIMSON_STEM
Blocks ms CRIMSON_HYPHAE
Blocks mt STRIPPED_CRIMSON_HYPHAE
Blocks mu CRIMSON_NYLIUM
Blocks mv CRIMSON_FUNGUS
Blocks mw SHROOMLIGHT
Blocks mx WEEPING_VINES
Blocks my WEEPING_VINES_PLANT
Blocks mz TWISTING_VINES
Blocks n OAK_PLANKS
Blocks nA GILDED_BLACKSTONE
Blocks nB POLISHED_BLACKSTONE_STAIRS
Blocks nC POLISHED_BLACKSTONE_SLAB
Blocks nD POLISHED_BLACKSTONE_PRESSURE_PLATE
Blocks nE POLISHED_BLACKSTONE_BUTTON
Blocks nF POLISHED_BLACKSTONE_WALL
Blocks nG CHISELED_NETHER_BRICKS
Blocks nH CRACKED_NETHER_BRICKS
Blocks nI QUARTZ_BRICKS
Blocks na COMPOSTER
Blocks nb TARGET
Blocks nc BEE_NEST
Blocks nd BEEHIVE
Blocks ne HONEY_BLOCK
Blocks nf HONEYCOMB_BLOCK
Blocks ng NETHERITE_BLOCK
Blocks nh ANCIENT_DEBRIS
Blocks ni CRYING_OBSIDIAN
Blocks nj RESPAWN_ANCHOR
Blocks nk POTTED_CRIMSON_FUNGUS
Blocks nl POTTED_WARPED_FUNGUS
Blocks nm POTTED_CRIMSON_ROOTS
Blocks nn POTTED_WARPED_ROOTS
Blocks no LODESTONE
Blocks np BLACKSTONE
Blocks nq BLACKSTONE_STAIRS
Blocks nr BLACKSTONE_WALL
Blocks ns BLACKSTONE_SLAB
Blocks nt POLISHED_BLACKSTONE
Blocks nu POLISHED_BLACKSTONE_BRICKS
Blocks nv CRACKED_POLISHED_BLACKSTONE_BRICKS
Blocks nw CHISELED_POLISHED_BLACKSTONE
Blocks nx POLISHED_BLACKSTONE_BRICK_SLAB
Blocks ny POLISHED_BLACKSTONE_BRICK_STAIRS
Blocks nz POLISHED_BLACKSTONE_BRICK_WALL
Blocks o SPRUCE_PLANKS
Blocks p BIRCH_PLANKS
Blocks q JUNGLE_PLANKS
Blocks r ACACIA_PLANKS
Blocks s DARK_OAK_PLANKS
Blocks t OAK_SAPLING
Blocks u SPRUCE_SAPLING
Blocks v BIRCH_SAPLING
Blocks w JUNGLE_SAPLING
Blocks x ACACIA_SAPLING
Blocks y DARK_OAK_SAPLING
Blocks z BEDROCK
BossBattle a title
BossBattle c color
BossBattle d style
BossBattle k ()F getProgress
BossBattle n ()Z isDarkenSky
BossBattle o ()Z isPlayMusic
BossBattle p ()Z isCreateFog
BossBattle$BarColor a PINK
BossBattle$BarColor b BLUE
BossBattle$BarColor c RED
BossBattle$BarColor d GREEN
BossBattle$BarColor e YELLOW
BossBattle$BarColor f PURPLE
BossBattle$BarColor g WHITE
BossBattle$BarStyle a PROGRESS
BossBattle$BarStyle b NOTCHED_6
BossBattle$BarStyle c NOTCHED_10
BossBattle$BarStyle d NOTCHED_12
BossBattle$BarStyle e NOTCHED_20
BossBattleCustom a ()LMinecraftKey; getKey
BossBattleCustomData a (LBossBattleCustom;)V remove
BossBattleCustomData a (LMinecraftKey;LIChatBaseComponent;)LBossBattleCustom; register
BossBattleCustomData a (LNBTTagCompound;)V load
BossBattleCustomData b ()Ljava/util/Collection; getBattles
BossBattleCustomData c ()LNBTTagCompound; save
BossBattleServer a (F)V setProgress
BossBattleServer a (LEntityPlayer;)V addPlayer
BossBattleServer a (LPacketPlayOutBoss$Action;)V sendUpdate
BossBattleServer a (Z)LBossBattle; setDarkenSky
BossBattleServer b (LEntityPlayer;)V removePlayer
BossBattleServer b (Z)LBossBattle; setPlayMusic
BossBattleServer c (Z)LBossBattle; setCreateFog
BossBattleServer d (Z)V setVisible
BossBattleServer h ()Ljava/util/Collection; getPlayers
BossBattleServer j visible
CancelledPacketHandleException a INSTANCE
ChatBaseComponent a siblings
ChatClickable$EnumClickAction a OPEN_URL
ChatClickable$EnumClickAction b OPEN_FILE
ChatClickable$EnumClickAction c RUN_COMMAND
ChatClickable$EnumClickAction d SUGGEST_COMMAND
ChatClickable$EnumClickAction e CHANGE_PAGE
ChatClickable$EnumClickAction f COPY_TO_CLIPBOARD
ChatComponentUtils a (LCommandListenerWrapper;LIChatBaseComponent;LEntity;I)LIChatMutableComponent; filterForDisplay
ChatHexColor c rgb
ChatHexColor d name
ChatHoverable$EnumHoverAction a SHOW_TEXT
ChatHoverable$EnumHoverAction b SHOW_ITEM
ChatHoverable$EnumHoverAction c SHOW_ENTITY
ChatMessage g key
ChatMessage h ()Ljava/lang/String; getKey
ChatMessage h args
ChatMessage i ()[Ljava/lang/Object; getArgs
ChatMessageType a CHAT
ChatMessageType b SYSTEM
ChatMessageType c GAME_INFO
ChatModifier a ()LChatHexColor; getColor
ChatModifier a (LChatClickable;)LChatModifier; setChatClickable
ChatModifier a (LChatHexColor;)LChatModifier; setColor
ChatModifier a (LChatHoverable;)LChatModifier; setChatHoverable
ChatModifier a (LChatModifier;)LChatModifier; setChatModifier
ChatModifier a (LEnumChatFormat;)LChatModifier; setColor
ChatModifier a (Ljava/lang/Boolean;)LChatModifier; setBold
ChatModifier a (Ljava/lang/String;)LChatModifier; setInsertion
ChatModifier b ()Z isBold
ChatModifier b (Ljava/lang/Boolean;)LChatModifier; setItalic
ChatModifier c ()Z isItalic
ChatModifier c color
ChatModifier d ()Z isStrikethrough
ChatModifier d bold
ChatModifier e ()Z isUnderlined
ChatModifier e italic
ChatModifier f ()Z isRandom
ChatModifier f underlined
ChatModifier g strikethrough
ChatModifier h ()LChatClickable; getClickEvent
ChatModifier h obfuscated
ChatModifier i ()LChatHoverable; getHoverEvent
ChatModifier i clickEvent
ChatModifier j ()Ljava/lang/String; getInsertion
ChatModifier j hoverEvent
ChatModifier k ()LMinecraftKey; getFont
ChatModifier k insertion
ChatModifier l font
ChestLock b key
Chunk c (Z)V setLoaded
Chunk c sections
Chunk f loaded
Chunk g world
Chunk h heightMap
Chunk j tileEntities
Chunk k entitySlices
Chunk r lastSaved
Chunk s ()V markDirty
Chunk t ()Z isEmpty
Chunk t inhabitedTime
Chunk u ()LPlayerChunk$State; getState
Chunk w ()V addEntities
Chunk w loc
Chunk x ()LWorld; getWorld
Chunk y ()Ljava/util/Map; getTileEntities
Chunk z ()[LEntitySlice; getEntitySlices
Chunk$EnumTileEntityState a IMMEDIATE
Chunk$EnumTileEntityState b QUEUED
Chunk$EnumTileEntityState c CHECK
ChunkConverter$Type a BLACKLIST
ChunkConverter$Type b DEFAULT
ChunkConverter$Type c CHEST
ChunkConverter$Type d LEAVES
ChunkConverter$Type e STEM_BLOCK
ChunkConverterPalette$Direction a DOWN
ChunkConverterPalette$Direction b UP
ChunkConverterPalette$Direction c NORTH
ChunkConverterPalette$Direction d SOUTH
ChunkConverterPalette$Direction e WEST
ChunkConverterPalette$Direction f EAST
ChunkConverterPalette$Direction$Axis a X
ChunkConverterPalette$Direction$Axis b Y
ChunkConverterPalette$Direction$Axis c Z
ChunkConverterPalette$Direction$AxisDirection a POSITIVE
ChunkConverterPalette$Direction$AxisDirection b NEGATIVE
ChunkCoordIntPair a ()J pair
ChunkCoordIntPair a (II)J pair
ChunkCoordIntPair a (J)I getX
ChunkCoordIntPair b (J)I getZ
ChunkCoordIntPair b x
ChunkCoordIntPair c z
ChunkCoordIntPair h ()I getRegionX
ChunkCoordIntPair i ()I getRegionZ
ChunkGenerator a (IILHeightMap$Type;)I getBaseHeight
ChunkGenerator a (JLBiomeManager;LIChunkAccess;LWorldGenStage$Features;)V doCarving
ChunkGenerator a (LBiomeBase;LStructureManager;LEnumCreatureType;LBlockPosition;)Ljava/util/List; getMobsFor
ChunkGenerator a (LGeneratorAccess;LStructureManager;LIChunkAccess;)V storeStructures
ChunkGenerator a (LIChunkAccess;)V createBiomes
ChunkGenerator a (LRegionLimitedWorldAccess;)V addMobs
ChunkGenerator a (LRegionLimitedWorldAccess;LIChunkAccess;)V buildBase
ChunkGenerator a (LRegionLimitedWorldAccess;LStructureManager;)V addDecorations
ChunkGenerator a (LStructureManager;LIChunkAccess;LDefinedStructureManager;J)V createStructures
ChunkGenerator a (LWorldServer;LStructureGenerator;LBlockPosition;IZ)LBlockPosition; findNearestMapFeature
ChunkGenerator b ()LStructureSettings; getSettings
ChunkGenerator b (LGeneratorAccess;LStructureManager;LIChunkAccess;)V buildNoise
ChunkGenerator c ()I getSpawnHeight
ChunkGenerator d ()LWorldChunkManager; getWorldChunkManager
ChunkGenerator d structureSettings
ChunkGenerator e ()I getGenerationDepth
ChunkGenerator f ()I getSeaLevel
ChunkMap b (JIZ)V update
ChunkMapDistance a ()V purgeTickets
ChunkMapDistance a (JLTicket;)V addTicket
ChunkMapDistance a (LArraySetSorted;)I getLowestTicketLevel
ChunkMapDistance b (JLTicket;)V removeTicket
ChunkMapDistance c (LTicketType;LChunkCoordIntPair;ILjava/lang/Object;)V addTicket
ChunkMapDistance d (LTicketType;LChunkCoordIntPair;ILjava/lang/Object;)V removeTicket
ChunkMapDistance d tickets
ChunkMapDistance e ticketLevelTracker
ChunkMapDistance h pendingChunkUpdates
ChunkMapDistance n currentTick
ChunkProviderServer a (I)V setViewDistance
ChunkProviderServer a (J)LPlayerChunk; getChunk
ChunkProviderServer a (LEntity;LPacket;)V broadcastIncludingSelf
ChunkProviderServer a (LEntityPlayer;)V movePlayer
ChunkProviderServer a (LTicketType;LChunkCoordIntPair;ILjava/lang/Object;)V addTicket
ChunkProviderServer a (Ljava/util/function/BooleanSupplier;)V tick
ChunkProviderServer a (Z)V save
ChunkProviderServer a playerChunkMap
ChunkProviderServer b (II)Z isLoaded
ChunkProviderServer b (LBlockPosition;)V flagDirty
ChunkProviderServer b (LEntity;)V removeEntity
ChunkProviderServer b (LEntity;LPacket;)V broadcast
ChunkProviderServer b (LTicketType;LChunkCoordIntPair;ILjava/lang/Object;)V removeTicket
ChunkProviderServer c (IILChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; getChunkFutureMainThread
ChunkProviderServer c (LEntity;)V addEntity
ChunkProviderServer c chunkMapDistance
ChunkProviderServer d ()Z runTasks
ChunkProviderServer d chunkGenerator
ChunkProviderServer e world
ChunkProviderServer f serverThread
ChunkProviderServer g ()LChunkGenerator; getChunkGenerator
ChunkProviderServer g lightEngine
ChunkProviderServer h serverThreadQueue
ChunkProviderServer i ()LWorldPersistentData; getWorldPersistentData
ChunkProviderServer i worldPersistentData
ChunkProviderServer j lastTickTime
ChunkProviderServer k allowMonsters
ChunkProviderServer l allowAnimals
ChunkProviderServer m cachePos
ChunkProviderServer n ()V clearCache
ChunkProviderServer n cacheStatus
ChunkProviderServer o ()Z tickDistanceManager
ChunkProviderServer o cacheChunk
ChunkProviderServer p ()V tickChunks
ChunkRegionLoader a (LNBTTagCompound;LChunk;)V loadEntities
ChunkRegionLoader a (LWorldServer;LDefinedStructureManager;LVillagePlace;LChunkCoordIntPair;LNBTTagCompound;)LProtoChunk; loadChunk
ChunkRegionLoader a (LWorldServer;LIChunkAccess;)LNBTTagCompound; saveChunk
ChunkSection a (III)LIBlockData; getType
ChunkSection a (IIILIBlockData;)LIBlockData; setType
ChunkSection a (IIILIBlockData;Z)LIBlockData; setType
ChunkSection a GLOBAL_PALETTE
ChunkSection b yPos
ChunkSection c nonEmptyBlockCount
ChunkSection d tickingBlockCount
ChunkSection e ()Z shouldTick
ChunkSection f blockIds
ChunkSection g ()I getYPosition
ChunkSection h ()V recalcBlockCounts
ChunkSection i ()LDataPaletteBlock; getBlocks
ChunkStatus a EMPTY
ChunkStatus b STRUCTURE_STARTS
ChunkStatus c STRUCTURE_REFERENCES
ChunkStatus d BIOMES
ChunkStatus e NOISE
ChunkStatus f SURFACE
ChunkStatus g ()LChunkStatus$Type; getType
ChunkStatus g CARVERS
ChunkStatus h LIQUID_CARVERS
ChunkStatus i FEATURES
ChunkStatus j LIGHT
ChunkStatus k SPAWN
ChunkStatus l HEIGHTMAPS
ChunkStatus m FULL
ChunkStatus$Type a PROTOCHUNK
ChunkStatus$Type b LEVELCHUNK
Clearable aa_ ()V clear
CombatTracker a (LDamageSource;FF)V trackDamage
CombatTracker b ()LIChatBaseComponent; getDeathMessage
CommandAdvancement$Action a GRANT
CommandAdvancement$Action b REVOKE
CommandAdvancement$Filter a ONLY
CommandAdvancement$Filter b THROUGH
CommandAdvancement$Filter c FROM
CommandAdvancement$Filter d UNTIL
CommandAdvancement$Filter e EVERYTHING
CommandBlockListenerAbstract a (LIChatBaseComponent;)V setName
CommandBlockListenerAbstract a (Ljava/lang/String;)V setCommand
CommandBlockListenerAbstract d lastExecution
CommandBlockListenerAbstract e updateLastExecution
CommandBlockListenerAbstract f successCount
CommandBlockListenerAbstract g trackOutput
CommandBlockListenerAbstract h ()LCommandListenerWrapper; getWrapper
CommandBlockListenerAbstract h lastOutput
CommandBlockListenerAbstract i command
CommandBlockListenerAbstract j customName
CommandBlockListenerAbstract k ()Ljava/lang/String; getCommand
CommandBlockListenerAbstract l ()LIChatBaseComponent; getName
CommandClone$Mode a FORCE
CommandClone$Mode b MOVE
CommandClone$Mode c NORMAL
CommandDispatcher$ServerType a ALL
CommandDispatcher$ServerType b DEDICATED
CommandDispatcher$ServerType c INTEGRATED
CommandFill$Mode a REPLACE
CommandFill$Mode b OUTLINE
CommandFill$Mode c HOLLOW
CommandFill$Mode d DESTROY
CommandListenerWrapper a (LIChatBaseComponent;)V sendFailureMessage
CommandListenerWrapper a (LIChatBaseComponent;Z)V sendMessage
CommandListenerWrapper b ()LIChatBaseComponent; getScoreboardDisplayName
CommandListenerWrapper b (LIChatBaseComponent;)V sendAdminMessage
CommandListenerWrapper c ()Ljava/lang/String; getName
CommandListenerWrapper c base
CommandListenerWrapper d ()LVec3D; getPosition
CommandListenerWrapper e ()LWorldServer; getWorld
CommandListenerWrapper f ()LEntity; getEntity
CommandListenerWrapper j ()Lnet/minecraft/server/MinecraftServer; getServer
CommandSetBlock$Mode a REPLACE
CommandSetBlock$Mode b DESTROY
CommandXp$Unit a POINTS
CommandXp$Unit b LEVELS
Container a ()LContainers; getType
Container a (I)LSlot; getSlot
Container a (ILItemStack;)V setItem
Container a (LEntityHuman;)Z canUse
Container a (LICrafting;)V addSlotListener
Container a slots
Container b (LEntityHuman;I)LItemStack; shiftClick
Container b (LIInventory;I)LSlot; getSlot
Container b windowId
Container c items
Container g dragType
Container j listeners
ContainerAccess a (LWorld;LBlockPosition;)LContainerAccess; at
ContainerAnvil i renameText
ContainerAnvil j levelCost
ContainerAnvilAbstract c resultInventory
ContainerAnvilAbstract d repairInventory
ContainerAnvilAbstract e containerAccess
ContainerAnvilAbstract f player
ContainerBeacon c beacon
ContainerBeacon e containerAccess
ContainerBeacon f containerProperties
ContainerBrewingStand c brewingStand
ContainerCartography c inventory
ContainerCartography d containerAccess
ContainerCartography g resultInventory
ContainerChest c container
ContainerDispenser c items
ContainerEnchantTable c costs
ContainerEnchantTable d enchantments
ContainerEnchantTable e levels
ContainerEnchantTable f enchantSlots
ContainerEnchantTable g containerAccess
ContainerFurnace d furnace
ContainerGrindstone c resultInventory
ContainerGrindstone d craftInventory
ContainerGrindstone e containerAccess
ContainerHopper c hopper
ContainerLectern c inventory
ContainerLectern d containerProperties
ContainerLoom c containerAccess
ContainerLoom k craftInventory
ContainerLoom l resultInventory
ContainerMerchant c merchant
ContainerMerchant d inventoryMerchant
ContainerPlayer l craftInventory
ContainerPlayer m resultInventory
ContainerPlayer n owner
ContainerProperty a (I)V set
ContainerProperty b ()I get
ContainerStonecutter e inventory
ContainerStonecutter f containerAccess
ContainerStonecutter g containerProperty
ContainerStonecutter h world
ContainerStonecutter m resultInventory
ContainerWorkbench c craftInventory
ContainerWorkbench d resultInventory
ContainerWorkbench e containerAccess
Containers a GENERIC_9X1
Containers b GENERIC_9X2
Containers c GENERIC_9X3
Containers d GENERIC_9X4
Containers e GENERIC_9X5
Containers f GENERIC_9X6
Containers g GENERIC_3X3
Containers h ANVIL
Containers i BEACON
Containers j BLAST_FURNACE
Containers k BREWING_STAND
Containers l CRAFTING
Containers m ENCHANTMENT
Containers n FURNACE
Containers o GRINDSTONE
Containers p HOPPER
Containers q LECTERN
Containers r LOOM
Containers s MERCHANT
Containers t SHULKER_BOX
Containers u SMITHING
Containers v SMOKER
Containers w CARTOGRAPHY_TABLE
Containers x STONECUTTER
ControllerJump a ()V jump
ControllerMove$Operation a WAIT
ControllerMove$Operation b MOVE_TO
ControllerMove$Operation c STRAFE
ControllerMove$Operation d JUMPING
Convertable d universe
Convertable e backupUniverse
Convertable$ConversionSession a ()Ljava/lang/String; getLevelName
Convertable$ConversionSession a (LIProgressUpdate;)Z convert
Convertable$ConversionSession a (LSavedFile;)Ljava/nio/file/Path; getWorldFolder
Convertable$ConversionSession b lock
Convertable$ConversionSession c ()Z isConvertable
Convertable$ConversionSession c folder
Convertable$ConversionSession d levelName
Convertable$ConversionSession i ()V checkSession
Counter a DECIMAL_FORMAT
Counter b DEFAULT
Counter c DIVIDE_BY_TEN
Counter d DISTANCE
Counter e TIME
CraftingManager a (LRecipes;LIInventory;LWorld;)Ljava/util/Optional; craft
CraftingManager c recipes
CriterionProgress d ()Ljava/util/Date; getDate
CustomFunctionData a ()Lnet/minecraft/server/MinecraftServer; getServer
CustomFunctionData c ()Lcom/mojang/brigadier/CommandDispatcher; getCommandDispatcher
CustomFunctionData c server
CustomFunctionData d ()V tick
DamageSource a (LEntityArrow;LEntity;)LDamageSource; arrow
DamageSource a (LEntityFireballFireball;LEntity;)LDamageSource; fireball
DamageSource a (LEntityHuman;)LDamageSource; playerAttack
DamageSource a (LEntityLiving;)LIChatBaseComponent; getLocalizedDeathMessage
DamageSource a (LExplosion;)LDamageSource; explosion
DamageSource a FIRE
DamageSource b (LEntity;LEntity;)LDamageSource; projectile
DamageSource b LIGHTNING
DamageSource c (LEntityLiving;)LDamageSource; mobAttack
DamageSource c BURN
DamageSource d ()Z isExplosion
DamageSource d LAVA
DamageSource e ()LDamageSource; setExplosion
DamageSource e HOT_FLOOR
DamageSource f ()Z ignoresArmor
DamageSource f STUCK
DamageSource g ()F getExhaustionCost
DamageSource g CRAMMING
DamageSource h ()Z ignoresInvulnerability
DamageSource h DROWN
DamageSource i ()Z isStarvation
DamageSource i STARVE
DamageSource j CACTUS
DamageSource k ()LEntity; getEntity
DamageSource k FALL
DamageSource l ()LDamageSource; setIgnoreArmor
DamageSource l FLY_INTO_WALL
DamageSource m ()LDamageSource; setIgnoresInvulnerability
DamageSource m OUT_OF_WORLD
DamageSource n ()LDamageSource; setStarvation
DamageSource n GENERIC
DamageSource o ()LDamageSource; setFire
DamageSource o MAGIC
DamageSource p ()Z isFire
DamageSource p WITHER
DamageSource q ANVIL
DamageSource r FALLING_BLOCK
DamageSource s DRAGON_BREATH
DamageSource t ()Z isMagic
DamageSource t DRYOUT
DamageSource u ()LDamageSource; setMagic
DamageSource u SWEET_BERRY_BUSH
DamageSource v translationIndex
DataConverterFlattenData a (ILjava/lang/String;[Ljava/lang/String;)V map
DataConverterMaterialId a ID_MAPPING
DataConverterSpawnEgg a ID_MAPPING
DataConverterTypes a LEVEL
DataConverterTypes b PLAYER
DataConverterTypes c CHUNK
DataConverterTypes d HOTBAR
DataConverterTypes e OPTIONS
DataConverterTypes f STRUCTURE
DataConverterTypes g STATS
DataConverterTypes h SAVED_DATA
DataConverterTypes i ADVANCEMENTS
DataConverterTypes j POI_CHUNK
DataConverterTypes k BLOCK_ENTITY
DataConverterTypes l ITEM_STACK
DataConverterTypes m BLOCK_STATE
DataConverterTypes n ENTITY_NAME
DataConverterTypes o ENTITY_TREE
DataConverterTypes p ENTITY
DataConverterTypes q BLOCK_NAME
DataConverterTypes r ITEM_NAME
DataConverterTypes s UNTAGGED_SPAWNER
DataConverterTypes t STRUCTURE_FEATURE
DataConverterTypes u OBJECTIVE
DataConverterTypes v TEAM
DataConverterTypes w RECIPE
DataConverterTypes x BIOME
DataConverterTypes y WORLD_GEN_SETTINGS
DataFixTypes a LEVEL
DataFixTypes b PLAYER
DataFixTypes c CHUNK
DataFixTypes d HOTBAR
DataFixTypes e OPTIONS
DataFixTypes f STRUCTURE
DataFixTypes g STATS
DataFixTypes h SAVED_DATA
DataFixTypes i ADVANCEMENTS
DataFixTypes j POI_CHUNK
DataFixTypes k WORLD_GEN_SETTINGS
DataPackResources c commandDispatcher
DataPaletteBlock a (IIILjava/lang/Object;)Ljava/lang/Object; setBlock
DataPaletteBlock a (Ljava/util/function/Predicate;)Z contains
DataPaletteBlock b (ILjava/lang/Object;)V setBlockIndex
DataWatcher a (LDataWatcherObject;)Ljava/lang/Object; get
DataWatcher a (LDataWatcherObject;Ljava/lang/Object;)V register
DataWatcher b (LDataWatcherObject;Ljava/lang/Object;)V set
DataWatcher c (LDataWatcherObject;Ljava/lang/Object;)V registerObject
DataWatcher c entity
DataWatcher d entries
DataWatcher e lock
DedicatedPlayerList b ()LDedicatedServer; getServer
DedicatedServer a (Ljava/lang/String;LCommandListenerWrapper;)V issueCommand
DedicatedServer aZ ()V handleCommandQueue
DedicatedServer bc ()Z convertNames
DedicatedServer bd ()J getMaxTickTime
DedicatedServer j (Z)V setHasWhitelist
DedicatedServer l serverCommandQueue
DedicatedServer m remoteStatusListener
DedicatedServer n remoteControlCommandListener
DedicatedServer o remoteControlListener
DedicatedServer p propertyManager
DedicatedServerProperties A spawnMonsters
DedicatedServerProperties B snooperEnabled
DedicatedServerProperties C useNativeTransport
DedicatedServerProperties D enableCommandBlock
DedicatedServerProperties E spawnProtection
DedicatedServerProperties F opPermissionLevel
DedicatedServerProperties G functionPermissionLevel
DedicatedServerProperties H maxTickTime
DedicatedServerProperties I viewDistance
DedicatedServerProperties J maxPlayers
DedicatedServerProperties K networkCompressionThreshold
DedicatedServerProperties L broadcastRconToOps
DedicatedServerProperties M broadcastConsoleToOps
DedicatedServerProperties N maxWorldSize
DedicatedServerProperties O syncChunkWrites
DedicatedServerProperties P enableJmxMonitoring
DedicatedServerProperties Q enableStatus
DedicatedServerProperties R entityBroadcastRangePercentage
DedicatedServerProperties S playerIdleTimeout
DedicatedServerProperties T whiteList
DedicatedServerProperties U generatorSettings
DedicatedServerProperties a (Ljava/nio/file/Path;)LDedicatedServerProperties; load
DedicatedServerProperties a onlineMode
DedicatedServerProperties b preventProxyConnections
DedicatedServerProperties c serverIp
DedicatedServerProperties d spawnAnimals
DedicatedServerProperties e spawnNpcs
DedicatedServerProperties f pvp
DedicatedServerProperties g allowFlight
DedicatedServerProperties h resourcePack
DedicatedServerProperties i motd
DedicatedServerProperties j forceGamemode
DedicatedServerProperties k enforceWhitelist
DedicatedServerProperties l difficulty
DedicatedServerProperties m gamemode
DedicatedServerProperties n levelName
DedicatedServerProperties o serverPort
DedicatedServerProperties p maxBuildHeight
DedicatedServerProperties q announcePlayerAchievements
DedicatedServerProperties r enableQuery
DedicatedServerProperties s queryPort
DedicatedServerProperties t enableRcon
DedicatedServerProperties u rconPort
DedicatedServerProperties v rconPassword
DedicatedServerProperties w resourcePackHash
DedicatedServerProperties x resourcePackSha1
DedicatedServerProperties y hardcore
DedicatedServerProperties z allowNether
DedicatedServerSettings a ()LDedicatedServerProperties; getProperties
DedicatedServerSettings a (Ljava/util/function/UnaryOperator;)LDedicatedServerSettings; setProperty
DedicatedServerSettings a path
DedicatedServerSettings b ()V save
DedicatedServerSettings b properties
DimensionManager c ()Ljava/lang/String; getSuffix
DimensionManager c OVERWORLD
DimensionManager d ()Z hasSkyLight
DimensionManager d THE_NETHER
DimensionManager e ()Z hasCeiling
DimensionManager e THE_END
DimensionManager f ()Z isNether
DimensionManager f OVERWORLD_IMPL
DimensionManager g ()Z isNatural
DimensionManager g THE_NETHER_IMPL
DimensionManager h THE_END_IMPL
DimensionManager i ()Z isPiglinSafe
DimensionManager j ()Z isBedWorks
DimensionManager k ()Z isRespawnAnchorWorks
DimensionManager l ()Z hasRaids
DimensionManager l fixedTime
DimensionManager m ()I getLogicalHeight
DimensionManager m hasSkyLight
DimensionManager m hasSkylight
DimensionManager n ()Z isCreateDragonBattle
DimensionManager n hasCeiling
DimensionManager o ()LGenLayerZoomer; getGenLayerZoomer
DimensionManager o ultraWarm
DimensionManager p ()Z isFixedTime
DimensionManager p natural
DimensionManager q shrunk
DimensionManager r createDragonBattle
DimensionManager s piglinSafe
DimensionManager t bedWorks
DimensionManager u respawnAnchorWorks
DimensionManager v hasRaids
DimensionManager w logicalHeight
DimensionManager x biomeZoomer
DimensionManager x genLayerZoomer
DimensionManager y infiniburn
DimensionManager z ambientLight
DispenseBehaviorMaybe b dispensed
DispenseBehaviorProjectile b ()F getPower
DispenserRegistry a ()V init
DoubleBlockFinder$BlockType a SINGLE
DoubleBlockFinder$BlockType b FIRST
DoubleBlockFinder$BlockType c SECOND
DragonControllerManager a (LDragonControllerPhase;)V setControllerPhase
DragonControllerManager b enderDragon
DragonControllerManager c dragonControllers
DragonControllerManager d currentDragonController
DragonControllerPhase a (I)LDragonControllerPhase; getById
DragonControllerPhase a HOLDING_PATTERN
DragonControllerPhase b STRAFE_PLAYER
DragonControllerPhase c LANDING_APPROACH
DragonControllerPhase d LANDING
DragonControllerPhase e TAKEOFF
DragonControllerPhase f SITTING_FLAMING
DragonControllerPhase g SITTING_SCANNING
DragonControllerPhase h SITTING_ATTACKING
DragonControllerPhase i CHARGING_PLAYER
DragonControllerPhase j DYING
DragonControllerPhase k HOVER
Enchantment a ()I getMaxLevel
Enchantment a (LItemStack;)Z canEnchant
Enchantment b ()Z isTreasure
Enchantment b (LEnchantment;)Z isCompatible
Enchantment b itemTarget
Enchantment e ()I getStartLevel
Enchantment$Rarity a COMMON
Enchantment$Rarity b UNCOMMON
Enchantment$Rarity c RARE
Enchantment$Rarity d VERY_RARE
EnchantmentManager a (LEnchantment;LItemStack;)I getEnchantmentLevel
EnchantmentManager c (LEntityLiving;)I getFireAspectEnchantmentLevel
EnchantmentManager d (LEntityLiving;)I getOxygenEnchantmentLevel
EnchantmentManager e (LItemStack;)Z shouldNotDrop
EnchantmentManager f (LEntityLiving;)I getDigSpeedEnchantmentLevel
EnchantmentProtection$DamageType a ALL
EnchantmentProtection$DamageType b FIRE
EnchantmentProtection$DamageType c FALL
EnchantmentProtection$DamageType d EXPLOSION
EnchantmentProtection$DamageType e PROJECTILE
EnchantmentSlotType a (LItem;)Z canEnchant
EnchantmentSlotType a ARMOR
EnchantmentSlotType b ARMOR_FEET
EnchantmentSlotType c ARMOR_LEGS
EnchantmentSlotType d ARMOR_CHEST
EnchantmentSlotType e ARMOR_HEAD
EnchantmentSlotType f WEAPON
EnchantmentSlotType g DIGGER
EnchantmentSlotType h FISHING_ROD
EnchantmentSlotType i TRIDENT
EnchantmentSlotType j BREAKABLE
EnchantmentSlotType k BOW
EnchantmentSlotType l WEARABLE
EnchantmentSlotType m CROSSBOW
EnchantmentSlotType n VANISHABLE
Enchantments A ARROW_INFINITE
Enchantments B LUCK
Enchantments C LURE
Enchantments D LOYALTY
Enchantments E IMPALING
Enchantments F RIPTIDE
Enchantments G CHANNELING
Enchantments H MULTISHOT
Enchantments I QUICK_CHARGE
Enchantments J PIERCING
Enchantments K MENDING
Enchantments L VANISHING_CURSE
Enchantments a PROTECTION_ENVIRONMENTAL
Enchantments b PROTECTION_FIRE
Enchantments c PROTECTION_FALL
Enchantments d PROTECTION_EXPLOSIONS
Enchantments e PROTECTION_PROJECTILE
Enchantments f OXYGEN
Enchantments g WATER_WORKER
Enchantments h THORNS
Enchantments i DEPTH_STRIDER
Enchantments j FROST_WALKER
Enchantments k BINDING_CURSE
Enchantments l SOUL_SPEED
Enchantments m DAMAGE_ALL
Enchantments n DAMAGE_UNDEAD
Enchantments o DAMAGE_ARTHROPODS
Enchantments p KNOCKBACK
Enchantments q FIRE_ASPECT
Enchantments r LOOT_BONUS_MOBS
Enchantments s SWEEPING
Enchantments t DIG_SPEED
Enchantments u SILK_TOUCH
Enchantments v DURABILITY
Enchantments w LOOT_BONUS_BLOCKS
Enchantments x ARROW_DAMAGE
Enchantments y ARROW_KNOCKBACK
Enchantments z ARROW_FIRE
EnderDragonBattle a (LEnumDragonRespawn;)V setRespawnPhase
EnderDragonBattle c bossBattle
EnderDragonBattle d ()Z isPreviouslyKilled
EnderDragonBattle d world
EnderDragonBattle e ()V initiateRespawn
EnderDragonBattle e gateways
EnderDragonBattle f ()V resetCrystals
EnderDragonBattle k dragonKilled
EnderDragonBattle l previouslyKilled
EnderDragonBattle m dragonUUID
EnderDragonBattle o exitPortalLocation
EnderDragonBattle p respawnPhase
Entity C fallDistance
Entity H noclip
Entity J random
Entity K ticksLived
Entity L inWater
Entity P inLava
Entity Q ()Z hasCustomName
Entity Q noDamageTicks
Entity R justCreated
Entity S datawatcher
Entity T ()V decouple
Entity U ()LEntityTypes; getEntityType
Entity U POSE
Entity V ()I getId
Entity V inChunk
Entity W ()Ljava/util/Set; getScoreboardTags
Entity W chunkX
Entity X ()V killEntity
Entity X chunkY
Entity Y ()LDataWatcher; getDataWatcher
Entity Y chunkZ
Entity a (DDD)V enderTeleportTo
Entity a (DDDFF)V setLocation
Entity a (FF)V setYawPitch
Entity a (LBlockPosition;FF)V setPositionRotation
Entity a (LCrashReportSystemDetails;)V appendEntityCrashDetails
Entity a (LDamageSource;F)Z damageEntity
Entity a (LEntityLightning;)V onLightningStrike
Entity a (LEntityPose;LEntitySize;)F getHeadHeight
Entity a (LEnumItemSlot;LItemStack;)V setEquipment
Entity a (LEnumMoveType;LVec3D;)V move
Entity a (LIChatBaseComponent;)V setCustomName
Entity a (LNBTTagCompound;)V loadData
Entity a (LSoundEffect;FF)V playSound
Entity a (Ljava/lang/String;)Z addScoreboardTag
Entity aA ()Z isInWater
Entity aB ()Z isInWaterOrRain
Entity aC invulnerable
Entity aH size
Entity aI headHeight
Entity aP ()V velocityChanged
Entity aQ ()Z isInteractable
Entity aR ()Z isCollidable
Entity aT ()Ljava/lang/String; getSaveID
Entity aU ()Z isAlive
Entity aV ()Z inBlock
Entity aW ()V passengerTick
Entity a_ ()Z isSpectator
Entity a_ (LEntityHuman;)V pickup
Entity a_ (LWorld;)V spawnIn
Entity aa ()V die
Entity ab ()LEntityPose; getPose
Entity ad ()V entityBaseTick
Entity ad impulse
Entity ae portalCooldown
Entity af ()V burnFromLava
Entity af inPortal
Entity ag ()I getFireTicks
Entity ag portalTicks
Entity ah ()V extinguish
Entity aj ()Z isOnGround
Entity ak uniqueID
Entity al ()F getBlockJumpFactor
Entity am ()F getBlockSpeedFactor
Entity am glowing
Entity an passengers
Entity ao vehicle
Entity ap ()V recalcPosition
Entity ap loc
Entity aq ()LSoundEffect; getSoundSwim
Entity aq locBlock
Entity ar ()LSoundEffect; getSoundSplash
Entity ar mot
Entity as ()LSoundEffect; getSoundSplashHighSpeed
Entity as boundingBox
Entity at ()V checkBlockCollisions
Entity av ()Z isSilent
Entity av fireTicks
Entity aw ()Z isNoGravity
Entity aw AIR_TICKS
Entity ax ()Z playStepSound
Entity az ()Z isFireProof
Entity b (DDD)V teleportAndSync
Entity b (DDDFF)V setPositionRotation
Entity b (IZ)V setFlag
Entity b (LDamageSource;)Z isInvulnerable
Entity b (LEntityPose;)V setPose
Entity b (LNBTTagCompound;)V saveData
Entity b (Ljava/lang/String;)Z removeScoreboardTag
Entity b entityCount
Entity bB ()Z isInvisible
Entity bC ()LScoreboardTeamBase; getScoreboardTeam
Entity bE ()I getAirTicks
Entity bG ()F getHeadRotation
Entity bI ()Z isInvulnerable
Entity bK ()Z canPortal
Entity bN ()LVec3D; getPortalOffset
Entity bO ()LEnumDirection; getPortalDirection
Entity bP ()Z isIgnoreBlockTrigger
Entity bR ()Ljava/util/UUID; getUniqueID
Entity bS ()Ljava/lang/String; getUniqueIDString
Entity bT ()Ljava/lang/String; getName
Entity bW ()Z getCustomNameVisible
Entity bY ()LEnumDirection; getDirection
Entity bZ ()LEnumDirection; getAdjustedDirection
Entity ba ()V ejectPassengers
Entity bd ()LVec3D; getLookDirection
Entity bg ()V doPortalTick
Entity bh ()I getDefaultPortalCooldown
Entity bk ()Ljava/lang/Iterable; getArmorItems
Entity bm ()Z isBurning
Entity bn ()Z isPassenger
Entity bo ()Z isVehicle
Entity bq ()Z isSneaking
Entity bw ()Z isSprinting
Entity bx ()Z isSwimming
Entity cA ()LBlockPosition; getChunkCoordinates
Entity cB ()LVec3D; getMot
Entity cC ()D locX
Entity cD ()D locY
Entity cF ()D getHeadY
Entity cG ()D locZ
Entity cH ()V checkDespawn
Entity cb ()LAxisAlignedBB; getBoundingBox
Entity cd ()F getHeadHeight
Entity cf ()LWorld; getWorld
Entity cg ()Lnet/minecraft/server/MinecraftServer; getMinecraftServer
Entity cl ()LEntity; getRidingPassenger
Entity cm ()Ljava/util/List; getPassengers
Entity cn ()Ljava/util/Collection; getAllPassengers
Entity cp ()Z hasSinglePlayerPassenger
Entity cq ()LEntity; getRootVehicle
Entity cs ()LEntity; getVehicle
Entity ct ()LSoundCategory; getSoundCategory
Entity cu ()I getMaxFireTicks
Entity cv ()LCommandListenerWrapper; getCommandListener
Entity cx ()F getWidth
Entity cy ()F getHeight
Entity cz ()LVec3D; getPositionVector
Entity d ()LIChatBaseComponent; getScoreboardDisplayName
Entity d (DDD)V setPosition
Entity d (Z)V setSilent
Entity e ()V initDatawatcher
Entity e (LNBTTagCompound;)LNBTTagCompound; save
Entity e (LVec3D;)V setMot
Entity e (Z)V setNoGravity
Entity f (I)V setOnFire
Entity f (LNBTTagCompound;)V load
Entity f (Z)V setSneaking
Entity g (I)V setFireTicks
Entity g (Z)V setSprinting
Entity g id
Entity h (I)V burn
Entity h (Z)V setSwimming
Entity i ()Z isInRain
Entity i (I)Z getFlag
Entity i (LEntity;)V collide
Entity j ()V tick
Entity j (I)V setAirTicks
Entity j (Z)V setInvisible
Entity k (F)V setHeadRotation
Entity k attachedToPlayer
Entity l ()V stopRiding
Entity l (DDD)V enderTeleportAndLoad
Entity l world
Entity m (DDD)V setMot
Entity m (LEntity;)Z startRiding
Entity m (Z)V setInvulnerable
Entity m lastX
Entity n (DDD)V setPositionRaw
Entity n (Z)V setCustomNameVisible
Entity n lastY
Entity o (LEntity;)V addPassenger
Entity o lastZ
Entity p (LEntity;)V removePassenger
Entity p yaw
Entity q pitch
Entity r lastYaw
Entity s lastPitch
Entity t onGround
Entity u positionChanged
Entity w velocityChanged
Entity x (LEntity;)Z isSameVehicle
Entity y dead
Entity y_ ()V updateSize
Entity z_ ()LEnumPistonReaction; getPushReaction
EntityAgeable a (I)V setAge
EntityAgeable a (IZ)V setAge
EntityAgeable a (LEntityAgeable;)LEntityAgeable; createChild
EntityAgeable c_ (I)V setAgeRaw
EntityAgeable f ()Z canBreed
EntityAgeable i ()I getAge
EntityAnimal a (LDamageSource;F)Z damageEntity
EntityAnimal a (LEntityAnimal;)Z mate
EntityAnimal bv loveTicks
EntityAnimal bw breedCause
EntityAnimal d (LEntityHuman;)I getExpValue
EntityAnimal eS ()LEntityPlayer; getBreedCause
EntityAnimal eT ()Z isInLove
EntityAnimal eU ()V resetLove
EntityAnimal s (I)V setLoveTicks
EntityAreaEffectCloud a (F)V setRadius
EntityAreaEffectCloud a (I)V setColor
EntityAreaEffectCloud a (LEntityLiving;)V setSource
EntityAreaEffectCloud a (LMobEffect;)V addEffect
EntityAreaEffectCloud a (LParticleParam;)V setParticle
EntityAreaEffectCloud an effects
EntityAreaEffectCloud ao affectedEntities
EntityAreaEffectCloud ap duration
EntityAreaEffectCloud aq waitTime
EntityAreaEffectCloud ar reapplicationDelay
EntityAreaEffectCloud as hasColor
EntityAreaEffectCloud at durationOnUse
EntityAreaEffectCloud au radiusOnUse
EntityAreaEffectCloud av radiusPerTick
EntityAreaEffectCloud b (F)V setRadiusOnUse
EntityAreaEffectCloud b (I)V setDuration
EntityAreaEffectCloud c (F)V setRadiusPerTick
EntityAreaEffectCloud d (I)V setWaitTime
EntityAreaEffectCloud d COLOR
EntityAreaEffectCloud g ()F getRadius
EntityAreaEffectCloud g potionRegistry
EntityAreaEffectCloud h ()I getColor
EntityAreaEffectCloud i ()LParticleParam; getParticle
EntityAreaEffectCloud m ()I getDuration
EntityAreaEffectCloud t ()LEntityLiving; getSource
EntityArmorStand a (LVector3f;)V setHeadPose
EntityArmorStand a (Z)V setSmall
EntityArmorStand b (LVector3f;)V setBodyPose
EntityArmorStand bB headPose
EntityArmorStand bC bodyPose
EntityArmorStand bD leftArmPose
EntityArmorStand bE rightArmPose
EntityArmorStand bF leftLegPose
EntityArmorStand bG rightLegPose
EntityArmorStand bx handItems
EntityArmorStand by armorItems
EntityArmorStand bz armorStandInvisible
EntityArmorStand c (LVector3f;)V setLeftArmPose
EntityArmorStand d (LVector3f;)V setRightArmPose
EntityArmorStand e (LVector3f;)V setLeftLegPose
EntityArmorStand f (LVector3f;)V setRightLegPose
EntityArmorStand m ()Z isSmall
EntityArmorStand o ()Z hasArms
EntityArmorStand p ()Z hasBasePlate
EntityArmorStand p (Z)V setArms
EntityArmorStand q ()Z isMarker
EntityArmorStand q (Z)V setBasePlate
EntityArmorStand r (Z)V setMarker
EntityArrow a (I)V setKnockbackStrength
EntityArrow a (Z)V setCritical
EntityArrow ao despawnCounter
EntityArrow ap damage
EntityArrow aq knockbackStrength
EntityArrow b (B)V setPierceLevel
EntityArrow b inGround
EntityArrow d fromPlayer
EntityArrow e shake
EntityArrow h (D)V setDamage
EntityArrow k ()LSoundEffect; getSoundHit
EntityArrow m ()LItemStack; getItemStack
EntityArrow n ()D getDamage
EntityArrow p ()Z isCritical
EntityArrow p (Z)V setShotFromCrossbow
EntityArrow q ()Z isShotFromCrossbow
EntityArrow r ()B getPierceLevel
EntityArrow$PickupStatus a DISALLOWED
EntityArrow$PickupStatus b ALLOWED
EntityArrow$PickupStatus c CREATIVE_ONLY
EntityBat eJ ()Z isAsleep
EntityBat t (Z)V setAsleep
EntityBee bC ticksSincePollination
EntityBee bD cannotEnterHiveTicks
EntityBee bE numCropsGrownSincePollination
EntityBee bH flowerPos
EntityBee bI hivePos
EntityBee eL ()LBlockPosition; getFlowerPos
EntityBee eM ()Z hasFlowerPos
EntityBee eV ()Z hasHivePos
EntityBee eW ()LBlockPosition; getHivePos
EntityBee eY ()Z hasNectar
EntityBee eZ ()Z hasStung
EntityBee fd ()Z canPollinate
EntityBee fh ()I getNumCropsGrownSincePollination
EntityBee g (LBlockPosition;)V setFlowerPos
EntityBee t (I)V setCannotEnterHiveTicks
EntityBee t (Z)V setHasNectar
EntityBee u (Z)V setHasStung
EntityBoat a (F)V setDamage
EntityBoat a (LEntityBoat$EnumBoatType;)V setType
EntityBoat m ()F getDamage
EntityBoat p ()LEntityBoat$EnumBoatType; getType
EntityBoat$EnumBoatType a OAK
EntityBoat$EnumBoatType b SPRUCE
EntityBoat$EnumBoatType c BIRCH
EntityBoat$EnumBoatType d JUNGLE
EntityBoat$EnumBoatType e ACACIA
EntityBoat$EnumBoatType f DARK_OAK
EntityBoat$EnumStatus a IN_WATER
EntityBoat$EnumStatus b UNDER_WATER
EntityBoat$EnumStatus c UNDER_FLOWING_WATER
EntityBoat$EnumStatus d ON_LAND
EntityBoat$EnumStatus e IN_AIR
EntityCat a (LEnumColor;)V setCollarColor
EntityCat eW ()I getCatType
EntityCat eZ ()LEnumColor; getCollarColor
EntityCat t (I)V setCatType
EntityCat$PathfinderGoalTemptChance c chosenTarget
EntityChicken bA eggLayTime
EntityChicken bB chickenJockey
EntityChicken eM ()Z isChickenJockey
EntityChicken t (Z)V setChickenJockey
EntityComplexPart b owner
EntityCreeper T_ ()Z isPowered
EntityCreeper bw fuseTicks
EntityCreeper bx maxFuseTicks
EntityCreeper by explosionRadius
EntityCreeper c POWERED
EntityCreeper eM ()Z isIgnited
EntityCreeper eN ()V ignite
EntityCreeper eO ()Z canCauseHeadDrop
EntityCreeper eP ()V setCausedHeadDrop
EntityCreeper eQ ()V explode
EntityCreeper eT ()V createEffectCloud
EntityDamageSource a (LEntityLiving;)LIChatBaseComponent; getLocalizedDeathMessage
EntityDamageSource k ()LEntity; getEntity
EntityDamageSourceIndirect x owner
EntityDolphin b (I)V setMoistness
EntityDolphin eL ()Z gotFish
EntityDolphin eM ()I getMoistness
EntityDolphin g (LBlockPosition;)V setTreasurePos
EntityDolphin m ()LBlockPosition; getTreasurePos
EntityDolphin t (Z)V setGotFish
EntityDrowned b navigationWater
EntityDrowned c navigationLand
EntityEnderCrystal a (LBlockPosition;)V setBeamTarget
EntityEnderCrystal a (Z)V setShowingBottom
EntityEnderCrystal g ()LBlockPosition; getBeamTarget
EntityEnderCrystal h ()Z isShowingBottom
EntityEnderDragon b PHASE
EntityEnderDragon bB currentEnderCrystal
EntityEnderDragon bE children
EntityEnderDragon bz deathAnimationTicks
EntityEnderDragon eL ()LDragonControllerManager; getDragonControllerManager
EntityEnderDragon eM ()LEnderDragonBattle; getEnderDragonBattle
EntityEnderDragon f (LDamageSource;F)Z dealDamage
EntityEnderSignal c targetX
EntityEnderSignal d targetY
EntityEnderSignal e targetZ
EntityEnderSignal f despawnTimer
EntityEnderSignal g shouldDropItem
EntityEnderman c (LIBlockData;)V setCarried
EntityEnderman eN ()LIBlockData; getCarried
EntityEnderman$PathfinderGoalEndermanPickupBlock a enderman
EntityEndermite eL ()Z isPlayerSpawned
EntityEndermite t (Z)V setPlayerSpawned
EntityEvokerFangs g ()LEntityLiving; getOwner
EntityExperienceOrb a (I)I getOrbValue
EntityExperienceOrb an targetTime
EntityExperienceOrb f value
EntityExperienceOrb g targetPlayer
EntityFallingBlock an hurtEntities
EntityFallingBlock ao fallHurtMax
EntityFallingBlock ap fallHurtAmount
EntityFallingBlock b ticksLived
EntityFallingBlock c dropItem
EntityFallingBlock d tileEntityData
EntityFallingBlock f block
EntityFallingBlock i ()LIBlockData; getBlock
EntityFireball b dirX
EntityFireball c dirY
EntityFireball d dirZ
EntityFireballFireball b (LItemStack;)V setItem
EntityFireballFireball k ()LItemStack; getItem
EntityFireworks b FIREWORK_ITEM
EntityFireworks d SHOT_AT_ANGLE
EntityFireworks e ticksFlown
EntityFireworks f expectedLifespan
EntityFireworks g ridingEntity
EntityFireworks h ()Z isShotAtAngle
EntityFireworks i ()V explode
EntityFireworks k ()Z hasExplosions
EntityFish b FROM_BUCKET
EntityFish eN ()LSoundEffect; getSoundFlop
EntityFish eO ()Z isFromBucket
EntityFish t (Z)V setFromBucket
EntityFishingHook as hooked
EntityFishingHook h ()V reel
EntityFishingHook i ()LEntityHuman; getOwner
EntityFishingHook$HookState a FLYING
EntityFishingHook$HookState b HOOKED_IN_ENTITY
EntityFishingHook$HookState c BOBBING
EntityFishingHook$WaterPosition a ABOVE_WATER
EntityFishingHook$WaterPosition b INSIDE_WATER
EntityFishingHook$WaterPosition c INVALID
EntityFox a (LEntityFox$Type;)V setFoxType
EntityFox bv ()Z isCrouching
EntityFox bx FIRST_TRUSTED_PLAYER
EntityFox by SECOND_TRUSTED_PLAYER
EntityFox eM ()LEntityFox$Type; getFoxType
EntityFox eN ()Z isSitting
EntityFox fa ()V initializePathFinderGoals
EntityFox t (Z)V setSitting
EntityFox v (Z)V setCrouching
EntityFox z (Z)V setSleeping
EntityFox$Type a RED
EntityFox$Type b SNOW
EntityGhast eJ ()I getPower
EntityGhast$PathfinderGoalGhastAttackTarget b ghast
EntityGuardian c goalRandomStroll
EntityGuardian eM ()LSoundEffect; getSoundFlop
EntityHanging a (LDamageSource;F)Z damageEntity
EntityHanging a (LEnumDirection;)V setDirection
EntityHanging c blockPosition
EntityHanging d direction
EntityHanging g ()V updateBoundingBox
EntityHanging h ()Z survives
EntityHanging i ()I getHangingWidth
EntityHanging k ()I getHangingHeight
EntityHanging m ()V playPlaceSound
EntityHanging n ()LBlockPosition; getBlockPosition
EntityHorse a (LHorseColor;LHorseStyle;)V setVariant
EntityHorse eN ()LHorseColor; getColor
EntityHorse eP ()LHorseStyle; getStyle
EntityHorse eV ()I getVariantRaw
EntityHorse w (I)V setVariantRaw
EntityHorseAbstract b (Ljava/util/UUID;)V setOwnerUUID
EntityHorseAbstract bA jumpPower
EntityHorseAbstract bL canSlide
EntityHorseAbstract by inventoryChest
EntityHorseAbstract eO ()I getChestSlots
EntityHorseAbstract eX ()Z isTamed
EntityHorseAbstract eY ()Ljava/util/UUID; getOwnerUUID
EntityHorseAbstract fc ()Z hasReproduced
EntityHorseAbstract fd ()I getTemper
EntityHorseAbstract fe ()V loadChest
EntityHorseAbstract fg ()D getJumpStrength
EntityHorseAbstract fi ()LSoundEffect; getSoundAngry
EntityHorseAbstract fk ()I getMaxDomestication
EntityHorseAbstract u (I)V setTemper
EntityHorseAbstract u (Z)V setTamed
EntityHorseAbstract y (Z)V setStanding
EntityHorseChestedAbstract eN ()Z isCarryingChest
EntityHorseChestedAbstract t (Z)V setCarryingChest
EntityHuman a (ILMerchantRecipeList;IIZZ)V openTrade
EntityHuman a (LBlockPosition;)Lcom/mojang/datafixers/util/Either; sleep
EntityHuman a (LEntityHorseAbstract;LIInventory;)V openHorseInventory
EntityHuman a (LITileInventory;)Ljava/util/OptionalInt; openContainer
EntityHuman a (LItemStack;I)V enchantDone
EntityHuman a (LItemStack;LEnumHand;)V openBook
EntityHuman a (LItemStack;Z)LEntityItem; drop
EntityHuman a (LTileEntitySign;)V openSign
EntityHuman a (LWorldServer;LBlockPosition;ZZ)Ljava/util/Optional; getBed
EntityHuman a (Ljava/util/Collection;)I discoverRecipes
EntityHuman a (Z)Z dropItem
EntityHuman a (ZZ)V wakeup
EntityHuman b (Ljava/util/Collection;)I undiscoverRecipes
EntityHuman bJ abilities
EntityHuman bK expLevel
EntityHuman bL expTotal
EntityHuman bM exp
EntityHuman bP hookedFish
EntityHuman b_ ()Z isCreative
EntityHuman bt inventory
EntityHuman bu enderChest
EntityHuman bv defaultContainer
EntityHuman bw activeContainer
EntityHuman bx foodData
EntityHuman c (I)V levelDown
EntityHuman c (Ljava/lang/String;)Ljava/util/UUID; getOfflineUUID
EntityHuman d (I)V giveExp
EntityHuman d (LIBlockData;)Z hasBlock
EntityHuman eA ()Z isDeeplySleeping
EntityHuman eD ()V startGliding
EntityHuman eE ()V stopGliding
EntityHuman eG ()I getExpToLevel
EntityHuman eH ()LFoodMetaData; getFoodData
EntityHuman eK ()LInventoryEnderChest; getEnderChest
EntityHuman eL ()V releaseShoulderEntities
EntityHuman eM ()LScoreboard; getScoreboard
EntityHuman eP ()LNBTTagCompound; getShoulderEntityLeft
EntityHuman eQ ()LNBTTagCompound; getShoulderEntityRight
EntityHuman eS ()V resetAttackCooldown
EntityHuman eT ()LItemCooldown; getCooldownTracker
EntityHuman eV ()Z isCreativeAndOp
EntityHuman eu ()I getScore
EntityHuman ev ()V removeCursedItems
EntityHuman ez ()Lcom/mojang/authlib/GameProfile; getProfile
EntityHuman f (LEntity;)V attack
EntityHuman f sleepTicks
EntityHuman h (LNBTTagCompound;)V setShoulderEntityLeft
EntityHuman i (LNBTTagCompound;)V setShoulderEntityRight
EntityHuman k (LNBTTagCompound;)V spawnEntityFromShoulder
EntityHuman m ()V closeInventory
EntityHuman o (DDD)V checkMovement
EntityHuman q (F)V applyExhaustion
EntityHuman r (F)F getAttackCooldown
EntityHuman s (I)V setScore
EntityHuman t ()V updateAbilities
EntityHuman t (I)V addScore
EntityHuman$EnumBedResult a NOT_POSSIBLE_HERE
EntityHuman$EnumBedResult b NOT_POSSIBLE_NOW
EntityHuman$EnumBedResult c TOO_FAR_AWAY
EntityHuman$EnumBedResult d OBSTRUCTED
EntityHuman$EnumBedResult e OTHER_PROBLEM
EntityHuman$EnumBedResult f NOT_SAFE
EntityIllagerWizard a (LEntityIllagerWizard$Spell;)V setSpell
EntityIllagerWizard eN ()LSoundEffect; getSoundCastSpell
EntityIllagerWizard eY ()LEntityIllagerWizard$Spell; getSpell
EntityIllagerWizard$Spell a NONE
EntityIllagerWizard$Spell b SUMMON_VEX
EntityIllagerWizard$Spell c FANGS
EntityIllagerWizard$Spell d WOLOLO
EntityIllagerWizard$Spell e DISAPPEAR
EntityIllagerWizard$Spell f BLINDNESS
EntityInsentient A ()LEntityLiving; getGoalTarget
EntityInsentient B ()V blockEaten
EntityInsentient G ()V doSpawnEffect
EntityInsentient I ()LSoundEffect; getSoundAmbient
EntityInsentient J ()LMinecraftKey; getDefaultLootTable
EntityInsentient K ()Z isSpecialPersistence
EntityInsentient N ()V mobTick
EntityInsentient a (LGeneratorAccess;LDifficultyDamageScaler;LEnumMobSpawn;LGroupDataEntity;LNBTTagCompound;)LGroupDataEntity; prepare
EntityInsentient a (ZZ)V unleash
EntityInsentient b (LEntity;Z)V setLeashHolder
EntityInsentient bB lootTableKey
EntityInsentient bC lootTableSeed
EntityInsentient bD leashHolder
EntityInsentient bo moveController
EntityInsentient bq navigation
EntityInsentient br goalSelector
EntityInsentient bs targetSelector
EntityInsentient bt dropChanceHand
EntityInsentient bu dropChanceArmor
EntityInsentient by canPickUpLoot
EntityInsentient bz persistent
EntityInsentient d (LEntityHuman;)I getExpValue
EntityInsentient d goalTarget
EntityInsentient eC ()Z isLeashed
EntityInsentient eD ()LEntity; getLeashHolder
EntityInsentient eE ()Z isNoAI
EntityInsentient eF ()Z isLeftHanded
EntityInsentient eG ()Z isAggressive
EntityInsentient er ()I getMaxSpawnGroup
EntityInsentient et ()V setPersistent
EntityInsentient eu ()Z canPickupLoot
EntityInsentient ev ()Z isPersistent
EntityInsentient g lookController
EntityInsentient h (D)Z isTypeNotPersistent
EntityInsentient h (LItemStack;)Z canPickup
EntityInsentient i (LEntityLiving;)V setGoalTarget
EntityInsentient o ()V initPathfinder
EntityInsentient p (Z)V setCanPickupLoot
EntityInsentient q (Z)V setNoAI
EntityInsentient r (Z)V setLeftHanded
EntityInsentient s (Z)V setAggressive
EntityInsentient t ()LControllerLook; getControllerLook
EntityInsentient u ()LControllerMove; getControllerMove
EntityInsentient v ()LControllerJump; getControllerJump
EntityInsentient x ()LNavigationAbstract; getNavigation
EntityInsentient z ()LEntitySenses; getEntitySenses
EntityIronGolem eO ()Z isPlayerCreated
EntityIronGolem u (Z)V setPlayerCreated
EntityIronGolem$CrackLevel a NONE
EntityIronGolem$CrackLevel b LOW
EntityIronGolem$CrackLevel c MEDIUM
EntityIronGolem$CrackLevel d HIGH
EntityItem a (I)V setPickupDelay
EntityItem an owner
EntityItem b (LItemStack;)V setItemStack
EntityItem b (Ljava/util/UUID;)V setOwner
EntityItem c (Ljava/util/UUID;)V setThrower
EntityItem c ITEM
EntityItem d age
EntityItem e pickupDelay
EntityItem g ()LItemStack; getItemStack
EntityItem g thrower
EntityItem h ()Ljava/util/UUID; getOwner
EntityItem i ()Ljava/util/UUID; getThrower
EntityItem m ()V defaultPickupDelay
EntityItem x ()V mergeNearby
EntityItemFrame a (I)V setRotation
EntityItemFrame a (IZ)V setRotation
EntityItemFrame a (LItemStack;Z)V setItem
EntityItemFrame b (LItemStack;)V setItem
EntityItemFrame f ITEM
EntityItemFrame o ()LItemStack; getItem
EntityItemFrame p ()I getRotation
EntityLargeFireball e yield
EntityLightning a (Z)V setEffect
EntityLightning c lifeTicks
EntityLightning e isEffect
EntityLiving B (LEntity;)Z attackEntity
EntityLiving D (LEntity;)Z hasLineOfSight
EntityLiving a (LAttributeBase;)LAttributeModifiable; getAttributeInstance
EntityLiving a (LDamageSource;)V die
EntityLiving a (LDamageSource;F)Z damageEntity
EntityLiving a (LDamageSource;IZ)V dropDeathLoot
EntityLiving a (LEntity;I)V receive
EntityLiving a (LEntityLiving;)V setLastDamager
EntityLiving a (LEnumHand;)V swingHand
EntityLiving a (LEnumHand;Z)V swingHand
EntityLiving a (LEnumItemSlot;LItemStack;)V setSlot
EntityLiving a (LMobEffectList;)Z hasEffect
EntityLiving aE maxNoDamageTicks
EntityLiving aM killer
EntityLiving aN lastDamageByPlayerTime
EntityLiving aO killed
EntityLiving aP ticksFarFromPlayer
EntityLiving aW lastDamage
EntityLiving aX jumping
EntityLiving au hurtTicks
EntityLiving av hurtDuration
EntityLiving ax deathTicks
EntityLiving b (F)V heal
EntityLiving b (LBlockPosition;)V entitySleep
EntityLiving b (LDamageSource;F)V damageArmor
EntityLiving b (LEnumItemSlot;)LItemStack; getEquipment
EntityLiving b (LMobEffectList;)LMobEffect; getEffect
EntityLiving bC jumpTicks
EntityLiving bj activeItem
EntityLiving br attributeMap
EntityLiving bs combatTracker
EntityLiving bt effects
EntityLiving bw updateEffects
EntityLiving bx lastDamager
EntityLiving by hurtTimestamp
EntityLiving c (F)V setHealth
EntityLiving c (LDamageSource;F)F applyArmorModifier
EntityLiving c (LEnumItemSlot;)V broadcastItemBreak
EntityLiving c (LMobEffect;)Z addEffect
EntityLiving cI ()LBehaviorController; getBehaviorController
EntityLiving cU ()Z isDropExperience
EntityLiving cW ()Z alwaysGivesExp
EntityLiving cX ()Ljava/util/Random; getRandom
EntityLiving cY ()LEntityLiving; getLastDamager
EntityLiving c_ ()Z isClimbing
EntityLiving d (LDamageSource;F)F applyMagicModifier
EntityLiving d (LEntityHuman;)I getExpValue
EntityLiving d (LEnumHand;)V broadcastItemBreak
EntityLiving d (LMobEffectList;)Z removeEffect
EntityLiving dA ()LAttributeMapBase; getAttributeMap
EntityLiving dB ()LEnumMonsterType; getMonsterType
EntityLiving dC ()LItemStack; getItemInMainHand
EntityLiving dD ()LItemStack; getItemInOffHand
EntityLiving dF ()F getSoundVolume
EntityLiving dH ()Z isFrozen
EntityLiving dJ ()V jump
EntityLiving dO ()V doTick
EntityLiving dP ()V collideNearby
EntityLiving dQ ()Z isRiptiding
EntityLiving dR ()Z doAITick
EntityLiving dS ()F getAbsorptionHearts
EntityLiving dU ()LEnumMainHand; getMainHand
EntityLiving dV ()Z isHandRaised
EntityLiving dW ()LEnumHand; getRaisedHand
EntityLiving dX ()LItemStack; getActiveItem
EntityLiving dd ()V tickPotionEffects
EntityLiving df ()Z removeAllEffects
EntityLiving dg ()Ljava/util/Collection; getEffects
EntityLiving dj ()F getHealth
EntityLiving dm ()V dropInventory
EntityLiving dn ()V dropExperience
EntityLiving dp ()LSoundEffect; getSoundDeath
EntityLiving ds ()V playBlockStepSound
EntityLiving dt ()I getArmorStrength
EntityLiving du ()LCombatTracker; getCombatTracker
EntityLiving dv ()LEntityLiving; getKillingEntity
EntityLiving dw ()F getMaxHealth
EntityLiving dx ()I getArrowCount
EntityLiving e (LDamageSource;)LSoundEffect; getSoundHurt
EntityLiving e (LDamageSource;F)V damageEntity0
EntityLiving e (LEntityLiving;)V shieldBlock
EntityLiving e HEALTH
EntityLiving ea ()V releaseActiveItem
EntityLiving eb ()V clearActiveItem
EntityLiving ec ()Z isBlocking
EntityLiving ee ()Z isGliding
EntityLiving ej ()Ljava/util/Optional; getBedPosition
EntityLiving el ()Z isSleeping
EntityLiving em ()V entityWakeup
EntityLiving g ()V enterCombat
EntityLiving g (LDamageSource;)Z applyBlockingModifier
EntityLiving h ()V exitCombat
EntityLiving k ()V movementTick
EntityLiving m (F)V damageShield
EntityLiving o (I)LSoundEffect; getSoundFall
EntityLiving o (Z)V setJumping
EntityLiving p (F)V setAbsorptionHearts
EntityLiving p (I)V setArrowCount
EntityLiving x_ ()Z isBaby
EntityLlama fw ()I getStrength
EntityLlama fy ()I getVariant
EntityLlama w (I)V setVariant
EntityLlama x (I)V setStrength
EntityMinecartAbstract a (F)V setDamage
EntityMinecartAbstract b (LIBlockData;)V setDisplayBlock
EntityMinecartAbstract g ()D getMaxSpeed
EntityMinecartAbstract i ()V decelerate
EntityMinecartAbstract k ()F getDamage
EntityMinecartAbstract l (I)V setDisplayBlockOffset
EntityMinecartAbstract m ()I getType
EntityMinecartAbstract o ()LEntityMinecartAbstract$EnumMinecartType; getMinecartType
EntityMinecartAbstract p ()LIBlockData; getDisplayBlock
EntityMinecartAbstract r ()I getDisplayBlockOffset
EntityMinecartAbstract$EnumMinecartType a RIDEABLE
EntityMinecartAbstract$EnumMinecartType b CHEST
EntityMinecartAbstract$EnumMinecartType c FURNACE
EntityMinecartAbstract$EnumMinecartType d TNT
EntityMinecartAbstract$EnumMinecartType e SPAWNER
EntityMinecartAbstract$EnumMinecartType f HOPPER
EntityMinecartAbstract$EnumMinecartType g COMMAND_BLOCK
EntityMinecartCommandBlock b COMMAND
EntityMinecartCommandBlock u ()LCommandBlockListenerAbstract; getCommandBlock
EntityMinecartContainer a (LMinecraftKey;J)V setLootTable
EntityMinecartContainer b items
EntityMinecartContainer d lootTable
EntityMinecartContainer e lootTableSeed
EntityMinecartHopper m (I)V setCooldown
EntityMinecartHopper o (Z)V setEnabled
EntityMinecartHopper u ()Z isEnabled
EntityMonster a (LDamageSource;F)Z damageEntity
EntityMonsterPatrolling b patrolTarget
EntityMonsterPatrolling c patrolLeader
EntityMonsterPatrolling d patrolling
EntityMonsterPatrolling eP ()LBlockPosition; getPatrolTarget
EntityMonsterPatrolling eT ()Z isPatrolLeader
EntityMonsterPatrolling eW ()Z isPatrolling
EntityMonsterPatrolling g (LBlockPosition;)V setPatrolTarget
EntityMonsterPatrolling t (Z)V setPatrolLeader
EntityMushroomCow a (LEntityMushroomCow$Type;)V setVariant
EntityMushroomCow eM ()LEntityMushroomCow$Type; getVariant
EntityMushroomCow$Type a RED
EntityMushroomCow$Type b BROWN
EntityOcelot eN ()Z isTrusting
EntityOcelot t (Z)V setTrusting
EntityPainting e art
EntityPanda a (LEntityPanda$Gene;)V setMainGene
EntityPanda b (LEntityPanda$Gene;)V setHiddenGene
EntityPanda bN PICKUP_PREDICATE
EntityPanda eG ()Z isAggressive
EntityPanda eW ()LEntityPanda$Gene; getMainGene
EntityPanda eX ()LEntityPanda$Gene; getHiddenGene
EntityPanda fa ()LEntityPanda$Gene; getActiveGene
EntityPanda fb ()Z isLazy
EntityPanda fc ()Z isWorried
EntityPanda fd ()Z isPlayful
EntityPanda ff ()Z isWeak
EntityPanda$Gene a NORMAL
EntityPanda$Gene b LAZY
EntityPanda$Gene c ()Z isRecessive
EntityPanda$Gene c WORRIED
EntityPanda$Gene d PLAYFUL
EntityPanda$Gene e BROWN
EntityPanda$Gene f WEAK
EntityPanda$Gene g AGGRESSIVE
EntityParrot eX ()I getVariant
EntityParrot t (I)V setVariant
EntityPhantom a (I)V setSize
EntityPhantom m ()I getSize
EntityPhantom$AttackPhase a CIRCLE
EntityPhantom$AttackPhase b SWOOP
EntityPig by saddleStorage
EntityPiglin$ArmPose a ATTACKING_WITH_MELEE_WEAPON
EntityPiglin$ArmPose b CROSSBOW_HOLD
EntityPiglin$ArmPose c CROSSBOW_CHARGE
EntityPiglin$ArmPose d ADMIRING_ITEM
EntityPiglin$ArmPose e DANCING
EntityPiglin$ArmPose f DEFAULT
EntityPillager bv inventory
EntityPillager eX ()LInventorySubcontainer; getInventory
EntityPlayer A ()LServerStatisticManager; getStatisticManager
EntityPlayer D ()LEntity; getSpecatorTarget
EntityPlayer G ()LIChatBaseComponent; getPlayerListName
EntityPlayer J ()LAdvancementDataPlayer; getAdvancementData
EntityPlayer K ()LBlockPosition; getSpawn
EntityPlayer L ()LResourceKey; getSpawnDimension
EntityPlayer M ()Z isSpawnForced
EntityPlayer a (LContainer;)V updateInventory
EntityPlayer a (LEntityPlayer;Z)V copyFrom
EntityPlayer a (LResourceKey;LBlockPosition;ZZ)V setRespawnPosition
EntityPlayer a (Ljava/lang/String;Ljava/lang/String;)V setResourcePack
EntityPlayer b playerConnection
EntityPlayer bR removeQueue
EntityPlayer bS advancementDataPlayer
EntityPlayer bT serverStatisticManager
EntityPlayer bU lastHealthScored
EntityPlayer bV lastFoodScored
EntityPlayer bW lastAirScored
EntityPlayer bX lastArmorScored
EntityPlayer bY lastExpLevelScored
EntityPlayer bZ lastExpTotalScored
EntityPlayer c (LWorldServer;)V triggerDimensionAdvancements
EntityPlayer c server
EntityPlayer ca lastHealthSent
EntityPlayer cb lastFoodSent
EntityPlayer cc lastSentSaturationZero
EntityPlayer cd lastSentExp
EntityPlayer ce invulnerableTicks
EntityPlayer ci spectatedEntity
EntityPlayer cj worldChangeInvuln
EntityPlayer cl recipeBook
EntityPlayer cr spawnDimension
EntityPlayer cs spawn
EntityPlayer ct spawnForced
EntityPlayer cu containerCounter
EntityPlayer d playerInteractManager
EntityPlayer e (LEntity;)V setSpectatorTarget
EntityPlayer eX ()Z canPvP
EntityPlayer eY ()V nextContainerCounter
EntityPlayer f ()V syncInventory
EntityPlayer f ping
EntityPlayer g viewingCredits
EntityPlayer n ()V broadcastCarriedItem
EntityPlayer r ()V triggerHealthUpdate
EntityPlayer u ()LWorldServer; getWorldServer
EntityPlayer w_ ()V playerTick
EntityPlayer x ()LEnumChatVisibility; getChatFlags
EntityPlayer z ()V resetIdleTimer
EntityPose a STANDING
EntityPose b FALL_FLYING
EntityPose c SLEEPING
EntityPose d SWIMMING
EntityPose e SPIN_ATTACK
EntityPose f CROUCHING
EntityPose g DYING
EntityPositionTypes$Surface a ON_GROUND
EntityPositionTypes$Surface b IN_WATER
EntityPositionTypes$Surface c NO_RESTRICTIONS
EntityPositionTypes$Surface d IN_LAVA
EntityPotion m ()V splash
EntityPotion n ()Z isLingering
EntityProjectileThrowable b (LItemStack;)V setItem
EntityProjectileThrowable h ()LItem; getDefaultItem
EntityProjectileThrowable i ()LItemStack; getItem
EntityPufferFish b (I)V setPuffState
EntityPufferFish eO ()I getPuffState
EntityRabbit eN ()LSoundEffect; getSoundJump
EntityRabbit eO ()I getRabbitType
EntityRabbit t (I)V setRabbitType
EntityRabbit$PathfinderGoalEatCarrots g entity
EntityRaider bw canJoinRaid
EntityRaider fa ()Z isCanJoinRaid
EntityRaider w (Z)V setCanJoinRaid
EntitySelector b (LCommandListenerWrapper;)Ljava/util/List; getEntities
EntitySelector m checkPermissions
EntitySheep b (LEnumColor;)V setColor
EntitySheep eM ()LEnumColor; getColor
EntitySheep eN ()Z isSheared
EntitySheep t (Z)V setSheared
EntityShulker bv COLOR
EntityShulkerBullet b target
EntityShulkerBullet c dir
EntitySilverfish$PathfinderGoalSilverfishWakeOthers a silverfish
EntitySize a width
EntitySize b height
EntitySlime a (IZ)V setSize
EntitySlime eO ()LSoundEffect; getSoundSquish
EntitySlime eP ()LSoundEffect; getSoundJump
EntitySlime eQ ()I getSize
EntitySnowman eL ()Z hasPumpkin
EntitySnowman t (Z)V setHasPumpkin
EntitySpectralArrow f duration
EntityStrider$GroupData$Rider a NO_RIDER
EntityStrider$GroupData$Rider b BABY_RIDER
EntityStrider$GroupData$Rider c PIGLIN_RIDER
EntityTNTPrimed a (I)V setFuseTicks
EntityTNTPrimed b FUSE_TICKS
EntityTNTPrimed c source
EntityTNTPrimed d fuseTicks
EntityTNTPrimed g ()LEntityLiving; getSource
EntityTNTPrimed i ()I getFuseTicks
EntityTNTPrimed k ()V explode
EntityTameableAnimal B_ ()Ljava/util/UUID; getOwnerUUID
EntityTameableAnimal b (Ljava/util/UUID;)V setOwnerUUID
EntityTameableAnimal bx willSit
EntityTameableAnimal eL ()Z isTamed
EntityTameableAnimal eN ()Z isSitting
EntityTameableAnimal eO ()LEntityLiving; getOwner
EntityTameableAnimal eP ()Z isWillSit
EntityTameableAnimal f (LEntityHuman;)V tame
EntityTameableAnimal u (Z)V setTamed
EntityTameableAnimal v (Z)V setSitting
EntityTameableAnimal w (Z)V setWillSit
EntityThrownTrident ao trident
EntityTippedArrow a (LMobEffect;)V addEffect
EntityTippedArrow an effects
EntityTippedArrow ao hasColor
EntityTippedArrow c (I)V setColor
EntityTippedArrow f COLOR
EntityTippedArrow g potionRegistry
EntityTippedArrow u ()I getColor
EntityTrackerEntry a (LPacket;)V broadcastIncludingSelf
EntityTrackerEntry c tracker
EntityTrackerEntry g xLoc
EntityTrackerEntry h yLoc
EntityTrackerEntry i zLoc
EntityTrackerEntry j yRot
EntityTrackerEntry k xRot
EntityTrackerEntry l headYaw
EntityTrackerEntry n tickCounter
EntityTropicalFish eV ()I getVariant
EntityTropicalFish v (I)V setVariant
EntityTropicalFish$Variant a KOB
EntityTropicalFish$Variant b SUNSTREAK
EntityTropicalFish$Variant c SNOOPER
EntityTropicalFish$Variant d DASHER
EntityTropicalFish$Variant e BRINELY
EntityTropicalFish$Variant f SPOTTY
EntityTropicalFish$Variant g FLOPPER
EntityTropicalFish$Variant h STRIPEY
EntityTropicalFish$Variant i GLITTER
EntityTropicalFish$Variant j BLOCKFISH
EntityTropicalFish$Variant k BETTY
EntityTropicalFish$Variant l CLAYFISH
EntityTurtle eL ()Z hasEgg
EntityTurtle eO ()LBlockPosition; getHomePos
EntityTurtle eP ()LBlockPosition; getTravelPos
EntityTurtle g (LBlockPosition;)V setHomePos
EntityTurtle h (LBlockPosition;)V setTravelPos
EntityTurtle t (Z)V setHasEgg
EntityTypes A FALLING_BLOCK
EntityTypes B FIREWORK_ROCKET
EntityTypes C FOX
EntityTypes D GHAST
EntityTypes E GIANT
EntityTypes F GUARDIAN
EntityTypes G HOGLIN
EntityTypes H HORSE
EntityTypes I HUSK
EntityTypes J ILLUSIONER
EntityTypes K IRON_GOLEM
EntityTypes L ITEM
EntityTypes M ITEM_FRAME
EntityTypes N FIREBALL
EntityTypes O LEASH_KNOT
EntityTypes P LIGHTNING_BOLT
EntityTypes Q LLAMA
EntityTypes R LLAMA_SPIT
EntityTypes S MAGMA_CUBE
EntityTypes T MINECART
EntityTypes U CHEST_MINECART
EntityTypes V COMMAND_BLOCK_MINECART
EntityTypes W FURNACE_MINECART
EntityTypes X HOPPER_MINECART
EntityTypes Y SPAWNER_MINECART
EntityTypes Z TNT_MINECART
EntityTypes a (LEntityTypes;)LMinecraftKey; getName
EntityTypes a (LWorld;LItemStack;LEntityHuman;LBlockPosition;LEnumMobSpawn;ZZ)LEntity; spawnCreature
EntityTypes a (LWorld;LNBTTagCompound;LIChatBaseComponent;LEntityHuman;LBlockPosition;LEnumMobSpawn;ZZ)LEntity; spawnCreature
EntityTypes a AREA_EFFECT_CLOUD
EntityTypes aA SPECTRAL_ARROW
EntityTypes aB SPIDER
EntityTypes aC SQUID
EntityTypes aD STRAY
EntityTypes aE STRIDER
EntityTypes aF EGG
EntityTypes aG ENDER_PEARL
EntityTypes aH EXPERIENCE_BOTTLE
EntityTypes aI POTION
EntityTypes aJ TRIDENT
EntityTypes aK TRADER_LLAMA
EntityTypes aL TROPICAL_FISH
EntityTypes aM TURTLE
EntityTypes aN VEX
EntityTypes aO VILLAGER
EntityTypes aP VINDICATOR
EntityTypes aQ WANDERING_TRADER
EntityTypes aR WITCH
EntityTypes aS WITHER
EntityTypes aT WITHER_SKELETON
EntityTypes aU WITHER_SKULL
EntityTypes aV WOLF
EntityTypes aW ZOGLIN
EntityTypes aX ZOMBIE
EntityTypes aY ZOMBIE_HORSE
EntityTypes aZ ZOMBIE_VILLAGER
EntityTypes aa MULE
EntityTypes ab MOOSHROOM
EntityTypes ac OCELOT
EntityTypes ad PAINTING
EntityTypes ae PANDA
EntityTypes af PARROT
EntityTypes ag PHANTOM
EntityTypes ah PIG
EntityTypes ai PIGLIN
EntityTypes aj PILLAGER
EntityTypes ak POLAR_BEAR
EntityTypes al TNT
EntityTypes am PUFFERFISH
EntityTypes an RABBIT
EntityTypes ao RAVAGER
EntityTypes ap SALMON
EntityTypes aq SHEEP
EntityTypes ar SHULKER
EntityTypes as SHULKER_BULLET
EntityTypes at SILVERFISH
EntityTypes au SKELETON
EntityTypes av SKELETON_HORSE
EntityTypes aw SLIME
EntityTypes ax SMALL_FIREBALL
EntityTypes ay SNOW_GOLEM
EntityTypes az SNOWBALL
EntityTypes b (LWorld;LNBTTagCompound;LIChatBaseComponent;LEntityHuman;LBlockPosition;LEnumMobSpawn;ZZ)LEntity; createCreature
EntityTypes b ARMOR_STAND
EntityTypes ba ZOMBIFIED_PIGLIN
EntityTypes bb PLAYER
EntityTypes bc FISHING_BOBBER
EntityTypes c ARROW
EntityTypes d BAT
EntityTypes e BEE
EntityTypes f BLAZE
EntityTypes g BOAT
EntityTypes h CAT
EntityTypes i CAVE_SPIDER
EntityTypes j CHICKEN
EntityTypes k COD
EntityTypes l COW
EntityTypes m ()I getChunkRange
EntityTypes m CREEPER
EntityTypes n ()I getUpdateInterval
EntityTypes n DOLPHIN
EntityTypes o ()Z isDeltaTracking
EntityTypes o DONKEY
EntityTypes p DRAGON_FIREBALL
EntityTypes q DROWNED
EntityTypes r ELDER_GUARDIAN
EntityTypes s END_CRYSTAL
EntityTypes t ENDER_DRAGON
EntityTypes u ENDERMAN
EntityTypes v ENDERMITE
EntityTypes w EVOKER
EntityTypes x EVOKER_FANGS
EntityTypes y EXPERIENCE_ORB
EntityTypes z EYE_OF_ENDER
EntityTypes$Builder a (I)LEntityTypes$Builder; trackingRange
EntityTypes$Builder b (I)LEntityTypes$Builder; updateInterval
EntityVex eN ()Z isCharging
EntityVex t (Z)V setCharging
EntityVillager a (LVillagerData;)V setVillagerData
EntityVillager fi ()Z canPlant
EntityVillager ft ()V populateTrades
EntityVillager u (I)V setExperience
EntityVillagerAbstract bv trades
EntityVillagerAbstract bx tradingPlayer
EntityVillagerAbstract by inventory
EntityVillagerAbstract eU ()LInventorySubcontainer; getInventory
EntityWither a (II)V setHeadTarget
EntityWither bE bossBattle
EntityWither eM ()I getInvul
EntityWither m ()V beginSpawnSequence
EntityWither s (I)V setInvul
EntityWither t (I)I getHeadTarget
EntityWitherSkull a (Z)V setCharged
EntityWitherSkull k ()Z isCharged
EntityWolf a (LEnumColor;)V setCollarColor
EntityWolf eY ()LEnumColor; getCollarColor
EntityZombie a (I)V startDrownedConversion
EntityZombie a (LDamageSource;F)Z damageEntity
EntityZombie a (Z)V setBaby
EntityZombie bB drownedConversionTime
EntityZombie bw DROWN_CONVERTING
EntityZombie eM ()LSoundEffect; getSoundStep
EntityZombie eU ()Z isDrownConverting
EntityZombieVillager a (LVillagerData;)V setVillagerData
EntityZombieVillager a (Ljava/util/UUID;I)V startConversion
EntityZombieVillager b CONVERTING
EntityZombieVillager bv conversionPlayer
EntityZombieVillager d conversionTime
EntityZombieVillager eX ()Z isConverting
EntityZombieVillager eY ()LVillagerData; getVillagerData
EntityZombieVillager fa ()I getConversionProgress
EntityZombieVillager g (LNBTTagCompound;)V setOffers
EnumAnimation a NONE
EnumAnimation b EAT
EnumAnimation c DRINK
EnumAnimation d BLOCK
EnumAnimation e BOW
EnumAnimation f SPEAR
EnumAnimation g CROSSBOW
EnumArmorMaterial a LEATHER
EnumArmorMaterial b CHAIN
EnumArmorMaterial c IRON
EnumArmorMaterial d GOLD
EnumArmorMaterial e DIAMOND
EnumArmorMaterial f TURTLE
EnumArmorMaterial g NETHERITE
EnumAxisCycle a NONE
EnumAxisCycle b FORWARD
EnumAxisCycle c BACKWARD
EnumBannerPatternType A HALF_VERTICAL
EnumBannerPatternType B HALF_HORIZONTAL
EnumBannerPatternType C HALF_VERTICAL_MIRROR
EnumBannerPatternType D HALF_HORIZONTAL_MIRROR
EnumBannerPatternType E BORDER
EnumBannerPatternType F CURLY_BORDER
EnumBannerPatternType G GRADIENT
EnumBannerPatternType H GRADIENT_UP
EnumBannerPatternType I BRICKS
EnumBannerPatternType J GLOBE
EnumBannerPatternType K CREEPER
EnumBannerPatternType L SKULL
EnumBannerPatternType M FLOWER
EnumBannerPatternType N MOJANG
EnumBannerPatternType O PIGLIN
EnumBannerPatternType a BASE
EnumBannerPatternType b SQUARE_BOTTOM_LEFT
EnumBannerPatternType c SQUARE_BOTTOM_RIGHT
EnumBannerPatternType d SQUARE_TOP_LEFT
EnumBannerPatternType e SQUARE_TOP_RIGHT
EnumBannerPatternType f STRIPE_BOTTOM
EnumBannerPatternType g STRIPE_TOP
EnumBannerPatternType h STRIPE_LEFT
EnumBannerPatternType i STRIPE_RIGHT
EnumBannerPatternType j STRIPE_CENTER
EnumBannerPatternType k STRIPE_MIDDLE
EnumBannerPatternType l STRIPE_DOWNRIGHT
EnumBannerPatternType m STRIPE_DOWNLEFT
EnumBannerPatternType n STRIPE_SMALL
EnumBannerPatternType o CROSS
EnumBannerPatternType p STRAIGHT_CROSS
EnumBannerPatternType q TRIANGLE_BOTTOM
EnumBannerPatternType r TRIANGLE_TOP
EnumBannerPatternType s TRIANGLES_BOTTOM
EnumBannerPatternType t TRIANGLES_TOP
EnumBannerPatternType u DIAGONAL_LEFT
EnumBannerPatternType v DIAGONAL_RIGHT
EnumBannerPatternType w DIAGONAL_LEFT_MIRROR
EnumBannerPatternType x DIAGONAL_RIGHT_MIRROR
EnumBannerPatternType y CIRCLE_MIDDLE
EnumBannerPatternType z RHOMBUS_MIDDLE
EnumBlockMirror a NONE
EnumBlockMirror b LEFT_RIGHT
EnumBlockMirror c FRONT_BACK
EnumBlockRotation a NONE
EnumBlockRotation b CLOCKWISE_90
EnumBlockRotation c CLOCKWISE_180
EnumBlockRotation d COUNTERCLOCKWISE_90
EnumChatFormat a BLACK
EnumChatFormat b DARK_BLUE
EnumChatFormat c ()Z isFormat
EnumChatFormat c DARK_GREEN
EnumChatFormat d DARK_AQUA
EnumChatFormat e DARK_RED
EnumChatFormat f DARK_PURPLE
EnumChatFormat g GOLD
EnumChatFormat h GRAY
EnumChatFormat i DARK_GRAY
EnumChatFormat j BLUE
EnumChatFormat k GREEN
EnumChatFormat l AQUA
EnumChatFormat m RED
EnumChatFormat n LIGHT_PURPLE
EnumChatFormat o YELLOW
EnumChatFormat p WHITE
EnumChatFormat q OBFUSCATED
EnumChatFormat r BOLD
EnumChatFormat s STRIKETHROUGH
EnumChatFormat t UNDERLINE
EnumChatFormat u ITALIC
EnumChatFormat v RESET
EnumChatFormat z character
EnumChatVisibility a FULL
EnumChatVisibility b SYSTEM
EnumChatVisibility c HIDDEN
EnumColor a (I)LEnumColor; fromColorIndex
EnumColor a WHITE
EnumColor b ()I getColorIndex
EnumColor b ORANGE
EnumColor c MAGENTA
EnumColor d LIGHT_BLUE
EnumColor e ()[F getColor
EnumColor e YELLOW
EnumColor f LIME
EnumColor g ()I getFireworksColor
EnumColor g PINK
EnumColor h GRAY
EnumColor i LIGHT_GRAY
EnumColor j CYAN
EnumColor k PURPLE
EnumColor l BLUE
EnumColor m BROWN
EnumColor n GREEN
EnumColor o RED
EnumColor p BLACK
EnumCreatureType a MONSTER
EnumCreatureType b CREATURE
EnumCreatureType c AMBIENT
EnumCreatureType d WATER_CREATURE
EnumCreatureType e WATER_AMBIENT
EnumCreatureType f MISC
EnumDifficulty a (I)LEnumDifficulty; getById
EnumDifficulty a PEACEFUL
EnumDifficulty b EASY
EnumDifficulty c NORMAL
EnumDifficulty d HARD
EnumDirection a (D)LEnumDirection; fromAngle
EnumDirection a (I)LEnumDirection; fromType1
EnumDirection a DOWN
EnumDirection b (I)LEnumDirection; fromType2
EnumDirection b UP
EnumDirection c NORTH
EnumDirection d ()I get2DRotationValue
EnumDirection d SOUTH
EnumDirection e WEST
EnumDirection f ()LEnumDirection; opposite
EnumDirection f EAST
EnumDirection i ()I getAdjacentX
EnumDirection j ()I getAdjacentY
EnumDirection k ()I getAdjacentZ
EnumDirection$EnumAxis a X
EnumDirection$EnumAxis b Y
EnumDirection$EnumAxis c Z
EnumDirection$EnumAxisDirection a POSITIVE
EnumDirection$EnumAxisDirection b NEGATIVE
EnumDirection$EnumDirectionLimit a HORIZONTAL
EnumDirection$EnumDirectionLimit b VERTICAL
EnumDirection8 a NORTH
EnumDirection8 b NORTH_EAST
EnumDirection8 c EAST
EnumDirection8 d SOUTH_EAST
EnumDirection8 e SOUTH
EnumDirection8 f SOUTH_WEST
EnumDirection8 g WEST
EnumDirection8 h NORTH_WEST
EnumDragonRespawn a START
EnumDragonRespawn b PREPARING_TO_SUMMON_PILLARS
EnumDragonRespawn c SUMMONING_PILLARS
EnumDragonRespawn d SUMMONING_DRAGON
EnumDragonRespawn e END
EnumGamemode a ()I getId
EnumGamemode a (I)LEnumGamemode; getById
EnumGamemode a NOT_SET
EnumGamemode b SURVIVAL
EnumGamemode c CREATIVE
EnumGamemode d ADVENTURE
EnumGamemode e ()Z isCreative
EnumGamemode e SPECTATOR
EnumHand a MAIN_HAND
EnumHand b OFF_HAND
EnumInteractionResult a SUCCESS
EnumInteractionResult b CONSUME
EnumInteractionResult c PASS
EnumInteractionResult d FAIL
EnumItemRarity a COMMON
EnumItemRarity b UNCOMMON
EnumItemRarity c RARE
EnumItemRarity d EPIC
EnumItemSlot a (Ljava/lang/String;)LEnumItemSlot; fromName
EnumItemSlot a MAINHAND
EnumItemSlot b OFFHAND
EnumItemSlot c FEET
EnumItemSlot d ()Ljava/lang/String; getSlotName
EnumItemSlot d LEGS
EnumItemSlot e CHEST
EnumItemSlot f HEAD
EnumItemSlot$Function a HAND
EnumItemSlot$Function b ARMOR
EnumMainHand a LEFT
EnumMainHand b RIGHT
EnumMobSpawn a NATURAL
EnumMobSpawn b CHUNK_GENERATION
EnumMobSpawn c SPAWNER
EnumMobSpawn d STRUCTURE
EnumMobSpawn e BREEDING
EnumMobSpawn f MOB_SUMMONED
EnumMobSpawn g JOCKEY
EnumMobSpawn h EVENT
EnumMobSpawn i CONVERSION
EnumMobSpawn j REINFORCEMENT
EnumMobSpawn k TRIGGERED
EnumMobSpawn l BUCKET
EnumMobSpawn m SPAWN_EGG
EnumMobSpawn n COMMAND
EnumMobSpawn o DISPENSER
EnumMobSpawn p PATROL
EnumMonsterType a UNDEFINED
EnumMonsterType b UNDEAD
EnumMonsterType c ARTHROPOD
EnumMonsterType d ILLAGER
EnumMoveType a SELF
EnumMoveType b PLAYER
EnumMoveType c PISTON
EnumMoveType d SHULKER_BOX
EnumMoveType e SHULKER
EnumPistonReaction a NORMAL
EnumPistonReaction b DESTROY
EnumPistonReaction c BLOCK
EnumPistonReaction d IGNORE
EnumPistonReaction e PUSH_ONLY
EnumProtocol a HANDSHAKING
EnumProtocol b PLAY
EnumProtocol c STATUS
EnumProtocol d LOGIN
EnumProtocolDirection a SERVERBOUND
EnumProtocolDirection b CLIENTBOUND
EnumRenderType a INVISIBLE
EnumRenderType b ENTITYBLOCK_ANIMATED
EnumRenderType c MODEL
EnumResourcePackType a CLIENT_RESOURCES
EnumResourcePackType b SERVER_DATA
EnumResourcePackVersion a TOO_OLD
EnumResourcePackVersion b TOO_NEW
EnumResourcePackVersion c COMPATIBLE
EnumSkyBlock a SKY
EnumSkyBlock b BLOCK
EnumToolMaterial a WOOD
EnumToolMaterial b STONE
EnumToolMaterial c IRON
EnumToolMaterial d DIAMOND
EnumToolMaterial e GOLD
EnumToolMaterial f NETHERITE
ExpirableListEntry b ()Ljava/lang/String; getSource
ExpirableListEntry c ()Ljava/util/Date; getExpires
ExpirableListEntry d ()Ljava/lang/String; getReason
Explosion d ()LEntityLiving; getSource
Explosion d world
Explosion e ()V clearBlocks
Explosion e posX
Explosion f ()Ljava/util/List; getBlocks
Explosion f posY
Explosion g posZ
Explosion h source
Explosion i size
Explosion l blocks
Explosion$Effect a NONE
Explosion$Effect b BREAK
Explosion$Effect c DESTROY
ExplosionDamageCalculatorBlock a INSTANCE
Fluid a ()LFluidType; getType
Fluid a (LIBlockAccess;LBlockPosition;)F getHeight
Fluid b ()Z isSource
Fluid c ()Z isEmpty
Fluid g ()LIBlockData; getBlockData
FluidTypeFlowing a FALLING
FluidTypeFlowing b LEVEL
FluidTypes a EMPTY
FluidTypes b FLOWING_WATER
FluidTypes c WATER
FluidTypes d FLOWING_LAVA
FluidTypes e LAVA
FoodInfo a ()I getNutrition
FoodInfo b ()F getSaturationModifier
FoodMetaData a ()I getFoodLevel
FoodMetaData a (IF)V eat
FoodMetaData a foodLevel
FoodMetaData b saturationLevel
FoodMetaData c exhaustionLevel
FoodMetaData d foodTickTimer
FoodMetaData e ()F getSaturationLevel
GameProfileBanList a (Lcom/mojang/authlib/GameProfile;)Z isBanned
GameProfileSerializer a (LNBTTagCompound;)Lcom/mojang/authlib/GameProfile; deserialize
GameProfileSerializer a (LNBTTagCompound;Lcom/mojang/authlib/GameProfile;)LNBTTagCompound; serialize
GameProfilerFiller a (Ljava/lang/String;)V enter
GameProfilerFiller b (Ljava/lang/String;)V exitEnter
GameProfilerFiller c ()V exit
GameRules A DROWNING_DAMAGE
GameRules B FALL_DAMAGE
GameRules C FIRE_DAMAGE
GameRules D DO_PATROL_SPAWNING
GameRules E DO_TRADER_SPAWNING
GameRules F FORGIVE_DEAD_PLAYERS
GameRules G UNIVERSAL_ANGER
GameRules a (LGameRules$GameRuleKey;)LGameRules$GameRuleValue; get
GameRules a DO_FIRE_TICK
GameRules b (LGameRules$GameRuleKey;)Z getBoolean
GameRules b MOB_GRIEFING
GameRules c (LGameRules$GameRuleKey;)I getInt
GameRules c KEEP_INVENTORY
GameRules d DO_MOB_SPAWNING
GameRules e DO_MOB_LOOT
GameRules f DO_TILE_DROPS
GameRules g DO_ENTITY_DROPS
GameRules h COMMAND_BLOCK_OUTPUT
GameRules i NATURAL_REGENERATION
GameRules j DO_DAYLIGHT_CYCLE
GameRules k LOG_ADMIN_COMMANDS
GameRules l SHOW_DEATH_MESSAGES
GameRules m RANDOM_TICK_SPEED
GameRules n SEND_COMMAND_FEEDBACK
GameRules o REDUCED_DEBUG_INFO
GameRules p SPECTATORS_GENERATE_CHUNKS
GameRules q SPAWN_RADIUS
GameRules r DISABLE_ELYTRA_MOVEMENT_CHECK
GameRules s MAX_ENTITY_CRAMMING
GameRules t DO_WEATHER_CYCLE
GameRules u DO_LIMITED_CRAFTING
GameRules v MAX_COMMAND_CHAIN_LENGTH
GameRules w ANNOUNCE_ADVANCEMENTS
GameRules x DISABLE_RAIDS
GameRules y DO_INSOMNIA
GameRules z DO_IMMEDIATE_RESPAWN
GameRules$GameRuleCategory a PLAYER
GameRules$GameRuleCategory b MOBS
GameRules$GameRuleCategory c SPAWNING
GameRules$GameRuleCategory d DROPS
GameRules$GameRuleCategory e UPDATES
GameRules$GameRuleCategory f CHAT
GameRules$GameRuleCategory g MISC
GameRules$GameRuleDefinition a ()LGameRules$GameRuleValue; getValue
GameRules$GameRuleValue a (Ljava/lang/String;)V setValue
GameRules$GameRuleValue a (Lnet/minecraft/server/MinecraftServer;)V onChange
GameRules$GameRuleValue b ()Ljava/lang/String; getValue
GameRules$GameRuleValue c ()I getIntValue
GenLayerCleaner a INSTANCE
GenLayerDeepOcean a INSTANCE
GenLayerDesert a INSTANCE
GenLayerIcePlains a INSTANCE
GenLayerIsland a INSTANCE
GenLayerJungle a INSTANCE
GenLayerMushroomIsland a INSTANCE
GenLayerMushroomShore a INSTANCE
GenLayerOcean a INSTANCE
GenLayerOceanEdge a INSTANCE
GenLayerPlains a INSTANCE
GenLayerRegionHills a INSTANCE
GenLayerRiver a INSTANCE
GenLayerRiverMix a INSTANCE
GenLayerSmooth a INSTANCE
GenLayerSpecial$Special1 a INSTANCE
GenLayerSpecial$Special2 a INSTANCE
GenLayerSpecial$Special3 a INSTANCE
GenLayerTopSoil a INSTANCE
GenLayerZoom a NORMAL
GenLayerZoom b FUZZY
GenLayerZoomVoronoi a INSTANCE
GenLayerZoomVoronoiFixed a INSTANCE
GenLayerZoomerBiome a INSTANCE
GeneratorAccess E ()LIChunkProvider; getChunkProvider
GeneratorAccess F ()LTickList; getFluidTickList
GeneratorAccess G ()LTickList; getBlockTickList
GeneratorAccess a (LBlockPosition;LBlock;)V update
GeneratorAccess a (LEntityHuman;LBlockPosition;LSoundEffect;LSoundCategory;FF)V playSound
GeneratorAccess a (LParticleParam;DDDDDD)V addParticle
GeneratorAccess ac ()LEnumDifficulty; getDifficulty
GeneratorAccess ad ()I getHeight
GeneratorAccess c (ILBlockPosition;I)V triggerEffect
GeneratorAccess d (LBlockPosition;)LDifficultyDamageScaler; getDamageScaler
GeneratorAccess n ()LWorld; getMinecraftWorld
GeneratorAccess u_ ()LWorldData; getWorldData
GeneratorAccess v_ ()Ljava/util/Random; getRandom
GeneratorAccessSeed B ()J getSeed
GeneratorSettings b ()J getSeed
GeneratorSettings c ()Z shouldGenerateMapFeatures
GeneratorSettings e seed
GeneratorSettings f ()LChunkGenerator; getChunkGenerator
GeneratorSettings h ()Z isDebugWorld
GeneratorSettings i ()Z isFlatWorld
GenericAttributes a MAX_HEALTH
GenericAttributes b FOLLOW_RANGE
GenericAttributes c KNOCKBACK_RESISTANCE
GenericAttributes d MOVEMENT_SPEED
GenericAttributes e FLYING_SPEED
GenericAttributes f ATTACK_DAMAGE
GenericAttributes g ATTACK_KNOCKBACK
GenericAttributes h ATTACK_SPEED
GenericAttributes i ARMOR
GenericAttributes j ARMOR_TOUGHNESS
GenericAttributes k LUCK
GenericAttributes l SPAWN_REINFORCEMENTS
GenericAttributes m JUMP_STRENGTH
GlobalPos a ()LResourceKey; getDimensionManager
GlobalPos a (LResourceKey;LBlockPosition;)LGlobalPos; create
GlobalPos b ()LBlockPosition; getBlockPosition
GlobalPos b dimensionManager
GlobalPos c blockPosition
HeightMap$Type a WORLD_SURFACE_WG
HeightMap$Type b WORLD_SURFACE
HeightMap$Type c OCEAN_FLOOR_WG
HeightMap$Type d OCEAN_FLOOR
HeightMap$Type e MOTION_BLOCKING
HeightMap$Type f MOTION_BLOCKING_NO_LEAVES
HeightMap$Use a WORLDGEN
HeightMap$Use b LIVE_WORLD
HeightMap$Use c CLIENT
HorseColor a WHITE
HorseColor b CREAMY
HorseColor c CHESTNUT
HorseColor d BROWN
HorseColor e BLACK
HorseColor f GRAY
HorseColor g DARKBROWN
HorseStyle a NONE
HorseStyle b WHITE
HorseStyle c WHITE_FIELD
HorseStyle d WHITE_DOTS
HorseStyle e BLACK_DOTS
IAsyncTaskHandler a (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; executeFuture
IAsyncTaskHandler at ()Z isNotMainThread
IAsyncTaskHandler au ()Ljava/lang/Thread; getThread
IAsyncTaskHandler bf ()Z isMainThread
IAsyncTaskHandler bj ()V executeAll
IAsyncTaskHandler c (Ljava/lang/Runnable;)V executeTask
IAsyncTaskHandler c (Ljava/util/function/BooleanSupplier;)V awaitTasks
IAsyncTaskHandler d (Ljava/lang/Runnable;)Z canExecute
IAsyncTaskHandler e (Ljava/lang/Runnable;)Ljava/lang/Runnable; postToMainThread
IAsyncTaskHandler g (Ljava/lang/Runnable;)V executeSync
IAsyncTaskHandler x ()Z executeNext
IAsyncTaskHandlerReentrant b depth
IAsyncTaskHandlerReentrant bl ()Z isEntered
IBlockAccess I ()I getBuildHeight
IBlockAccess a (LRayTrace;)LMovingObjectPositionBlock; rayTrace
IBlockAccess a (LVec3D;LVec3D;LBlockPosition;LVoxelShape;LIBlockData;)LMovingObjectPositionBlock; rayTrace
IBlockAccess b (LBlockPosition;)LFluid; getFluid
IBlockAccess c (LBlockPosition;)LTileEntity; getTileEntity
IBlockAccess d_ (LBlockPosition;)LIBlockData; getType
IBlockDataHolder a (LIBlockState;Ljava/lang/Comparable;)Ljava/lang/Object; set
IBlockDataHolder a STATE_TO_VALUE
IBlockDataHolder c (LIBlockState;)Ljava/lang/Comparable; get
IBlockDataHolder s ()Lcom/google/common/collect/ImmutableMap; getStateMap
IBlockLightAccess a (LEnumSkyBlock;LBlockPosition;)I getBrightness
IBlockLightAccess b (LBlockPosition;I)I getLightLevel
IBlockState a ()Ljava/util/Collection; getValues
IBlockState f ()Ljava/lang/String; getName
IBlockState g ()Ljava/lang/Class; getType
IChatBaseComponent a ()Ljava/lang/String; getText
IChatBaseComponent b ()Ljava/util/List; getSiblings
IChatBaseComponent c ()LChatModifier; getChatModifier
IChatBaseComponent e ()LIChatMutableComponent; mutableCopy
IChatMutableComponent a (LChatModifier;)LIChatMutableComponent; setChatModifier
IChatMutableComponent a (LIChatBaseComponent;)LIChatMutableComponent; addSibling
IChatMutableComponent a (Ljava/util/function/UnaryOperator;)LIChatMutableComponent; format
IChunkAccess a (J)V setLastSaved
IChunkAccess a (LBlockPosition;LIBlockData;Z)LIBlockData; setType
IChunkAccess a (LBlockPosition;LTileEntity;)V setTileEntity
IChunkAccess a (LHeightMap$Type;II)I getHighestBlock
IChunkAccess a (Z)V setNeedsSaving
IChunkAccess b (J)V setInhabitedTime
IChunkAccess d ()[LChunkSection; getSections
IChunkAccess d (LBlockPosition;)V removeTileEntity
IChunkAccess g ()LChunkCoordIntPair; getPos
IChunkAccess i ()LBiomeStorage; getBiomeIndex
IChunkAccess j ()Z isNeedsSaving
IChunkAccess k ()LChunkStatus; getChunkStatus
IChunkAccess q ()J getInhabitedTime
IChunkLoader a (LResourceKey;Ljava/util/function/Supplier;LNBTTagCompound;)LNBTTagCompound; getChunkData
IChunkLoader e (LChunkCoordIntPair;)LNBTTagCompound; read
IChunkProvider a (IILChunkStatus;Z)LIChunkAccess; getChunkAt
IChunkProvider a (IIZ)LChunk; getChunkAt
IChunkProvider e ()Ljava/lang/String; getName
IChunkProvider l ()LLightEngine; getLightEngine
ICollisionAccess a_ (LEntity;LAxisAlignedBB;)Z getCubes
ICollisionAccess f ()LWorldBorder; getWorldBorder
ICollisionAccess j (LEntity;)Z getCubes
ICommandListener S_ ()Z shouldBroadcastCommands
ICommandListener a ()Z shouldSendSuccess
ICommandListener a (LIChatBaseComponent;Ljava/util/UUID;)V sendMessage
ICommandListener a_ DUMMY
ICommandListener b ()Z shouldSendFailure
ICompletionProvider c (I)Z hasPermission
IContainerProperties a (I)I getProperty
IContainerProperties a (II)V setProperty
ICrafting a (LContainer;II)V setContainerData
ICrossbow A ()LEntityLiving; getGoalTarget
IDispenseBehavior a NONE
IDragonController i ()LDragonControllerPhase; getControllerPhase
IEntityAccess a (DDDD)Z isPlayerNearby
IEntityAccess a (LEntity;D)LEntityHuman; findNearbyPlayer
IEntityAccess a (LEntity;LAxisAlignedBB;)Ljava/util/List; getEntities
IEntityAccess a (LEntity;LAxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
IEntityAccess w ()Ljava/util/List; getPlayers
IEntityAngerable A ()LEntityLiving; getGoalTarget
IEntityAngerable F_ ()I getAnger
IEntityAngerable G_ ()Ljava/util/UUID; getAngerTarget
IEntityAngerable H_ ()V anger
IEntityAngerable I_ ()Z isAngry
IEntityAngerable K_ ()V pacify
IEntityAngerable a (LEntityLiving;)V setLastDamager
IEntityAngerable a (Ljava/util/UUID;)V setAngerTarget
IEntityAngerable a_ (I)V setAnger
IEntityAngerable i (LEntityLiving;)V setGoalTarget
IFluidContainer a (LGeneratorAccess;LBlockPosition;LIBlockData;LFluid;)Z place
IFluidContainer a (LIBlockAccess;LBlockPosition;LIBlockData;LFluidType;)Z canPlace
IFluidSource b (LGeneratorAccess;LBlockPosition;LIBlockData;)LFluidType; removeFluid
IHopper v ()LWorld; getWorld
IInventory X_ ()I getMaxStackSize
IInventory Z_ ()V update
IInventory a (I)LItemStack; getItem
IInventory a (II)LItemStack; splitStack
IInventory a (ILItemStack;)V setItem
IInventory ab_ ()I getSize
IInventory b (I)LItemStack; splitWithoutUpdate
IInventory b_ (LEntityHuman;)V closeContainer
IInventory c ()Z isEmpty
IInventory c_ (LEntityHuman;)V startOpen
ILightAccess m ()LIBlockAccess; getWorld
IMaterial h ()LItem; getItem
IMerchant a (LEntityHuman;LIChatBaseComponent;I)V openTrade
IMerchant eM ()I getExperience
IMerchant eN ()LEntityHuman; getTrader
IMerchant eP ()LMerchantRecipeList; getOffers
IMerchant eQ ()Z isRegularVillager
IMerchant eR ()LSoundEffect; getTradeSound
IMerchant eV ()LWorld; getWorld
IMerchant f (LEntityHuman;)V setTradingPlayer
IMerchant t (I)V setForcedExperience
IMinecraftServer G ()Ljava/lang/String; getVersion
IMinecraftServer H ()I getPlayerCount
IMinecraftServer I ()I getMaxPlayers
IMinecraftServer J ()[Ljava/lang/String; getPlayers
IMinecraftServer a (Ljava/lang/String;)Ljava/lang/String; executeRemoteCommand
IMinecraftServer g_ ()LDedicatedServerProperties; getDedicatedServerProperties
IMinecraftServer j_ ()Ljava/lang/String; getPlugins
IMinecraftServer k_ ()Ljava/lang/String; getWorld
INamable a ()Ljava/lang/String; getName
INamableTileEntity P ()LIChatBaseComponent; getDisplayName
INamableTileEntity Q ()Z hasCustomName
INamableTileEntity R ()LIChatBaseComponent; getCustomName
INamableTileEntity d ()LIChatBaseComponent; getScoreboardDisplayName
IOWorker$Priority a HIGH
IOWorker$Priority b LOW
IPosition a ()D getX
IPosition b ()D getY
IPosition c ()D getZ
IProjectile b (LEntity;)V setShooter
IProjectile b shooter
IProjectile c (DDDFF)V shoot
IProjectile v ()LEntity; getShooter
IRecipe ah_ ()Z isComplex
IRecipe ai_ ()LRecipeSerializer; getRecipeSerializer
IRecipe c ()LItemStack; getResult
IRecipe f ()LMinecraftKey; getKey
IRegistry a (LMinecraftKey;)Ljava/lang/Object; get
IRegistry aA BIOME_SOURCE
IRegistry aB CHUNK_GENERATOR
IRegistry aC BLOCK_ENTITY_TYPE
IRegistry aD MOTIVE
IRegistry aE CUSTOM_STAT
IRegistry aF CHUNK_STATUS
IRegistry aG STRUCTURE_FEATURE
IRegistry aH STRUCTURE_PIECE
IRegistry aI RULE_TEST
IRegistry aJ POS_RULE_TEST
IRegistry aK STRUCTURE_PROCESSOR
IRegistry aL STRUCTURE_POOL_ELEMENT
IRegistry aM MENU
IRegistry aN RECIPE_TYPE
IRegistry aO RECIPE_SERIALIZER
IRegistry aP ATTRIBUTE
IRegistry aQ STATS
IRegistry aR VILLAGER_TYPE
IRegistry aS VILLAGER_PROFESSION
IRegistry aT POINT_OF_INTEREST_TYPE
IRegistry aU MEMORY_MODULE_TYPE
IRegistry aV SENSOR_TYPE
IRegistry aW SCHEDULE
IRegistry aX ACTIVITY
IRegistry ag SOUND_EVENT
IRegistry ah FLUID
IRegistry ai MOB_EFFECT
IRegistry aj BLOCK
IRegistry ak ENCHANTMENT
IRegistry al ENTITY_TYPE
IRegistry am ITEM
IRegistry an POTION
IRegistry ao CARVER
IRegistry ap SURFACE_BUILDER
IRegistry aq FEATURE
IRegistry ar DECORATOR
IRegistry as BIOME
IRegistry at BLOCK_STATE_PROVIDER_TYPE
IRegistry au BLOCK_PLACER_TYPE
IRegistry av FOLIAGE_PLACER_TYPE
IRegistry aw TRUNK_PLACER_TYPE
IRegistry ax TREE_DECORATOR_TYPE
IRegistry ay FEATURE_SIZE_TYPE
IRegistry az PARTICLE_TYPE
IRegistry b ()Ljava/util/Set; keySet
IRegistry b (LMinecraftKey;)Ljava/util/Optional; getOptional
IRegistry b (Ljava/lang/Object;)LMinecraftKey; getKey
IResourceManager$Empty a INSTANCE
ISaddleable M_ ()Z canSaddle
ISaddleable N_ ()Z hasSaddle
ISaddleable a (LSoundCategory;)V saddle
IScoreboardCriteria a criteria
IScoreboardCriteria b DUMMY
IScoreboardCriteria c ()Ljava/lang/String; getName
IScoreboardCriteria c TRIGGER
IScoreboardCriteria d ()Z isReadOnly
IScoreboardCriteria d DEATH_COUNT
IScoreboardCriteria e PLAYER_KILL_COUNT
IScoreboardCriteria f TOTAL_KILL_COUNT
IScoreboardCriteria g HEALTH
IScoreboardCriteria h FOOD
IScoreboardCriteria i AIR
IScoreboardCriteria j ARMOR
IScoreboardCriteria k XP
IScoreboardCriteria l LEVEL
IScoreboardCriteria$EnumScoreboardHealthDisplay a INTEGER
IScoreboardCriteria$EnumScoreboardHealthDisplay b HEARTS
IShearable L_ ()Z canShear
IShearable a (LSoundCategory;)V shear
ISource h ()LWorld; getWorld
ISourceBlock d ()LBlockPosition; getBlockPosition
ISourceBlock e ()LIBlockData; getBlockData
ISourceBlock g ()LTileEntity; getTileEntity
ITickable al_ ()V tick
ITileEntity a (LIBlockAccess;)LTileEntity; createTile
ITileInventory d ()LIChatBaseComponent; getScoreboardDisplayName
IWorldDataServer a (J)V setTime
IWorldDataServer a (LEnumGamemode;)V setGameType
IWorldDataServer a (Z)V setThundering
IWorldDataServer b (J)V setDayTime
IWorldDataServer e (I)V setThunderDuration
IWorldDataServer f ()Ljava/lang/String; getName
IWorldDataServer f (I)V setWeatherDuration
IWorldDataServer i ()I getThunderDuration
IWorldDataServer k ()I getWeatherDuration
IWorldDataServer l ()LEnumGamemode; getGameType
IWorldInventory a (ILItemStack;LEnumDirection;)Z canPlaceItemThroughFace
IWorldInventory a (LEnumDirection;)[I getSlotsForFace
IWorldInventory b (ILItemStack;LEnumDirection;)Z canTakeItemThroughFace
IWorldReader B (LBlockPosition;)I getLightLevel
IWorldReader C (LBlockPosition;)Z isLoaded
IWorldReader a (II)LIChunkAccess; getChunkAt
IWorldReader a (IIIIII)Z isAreaLoaded
IWorldReader a (IILChunkStatus;)LIChunkAccess; getChunkAt
IWorldReader a (IILChunkStatus;Z)LIChunkAccess; getChunkAt
IWorldReader a (LBlockPosition;LBlockPosition;)Z areChunksLoadedBetween
IWorldReader a (LHeightMap$Type;LBlockPosition;)LBlockPosition; getHighestBlockYAt
IWorldReader b (II)Z isChunkLoaded
IWorldReader d (LAxisAlignedBB;)Z containsLiquid
IWorldReader m ()LDimensionManager; getDimensionManager
IWorldReader t_ ()I getSeaLevel
IWorldReader v (LBlockPosition;)LBiomeBase; getBiome
IWorldReader w (LBlockPosition;)Z isEmpty
IWorldWriter a (LBlockPosition;LIBlockData;I)Z setTypeAndData
IWorldWriter c (LEntity;)Z addEntity
InteractionResultWrapper a (Ljava/lang/Object;)LInteractionResultWrapper; success
InteractionResultWrapper b (Ljava/lang/Object;)LInteractionResultWrapper; consume
InteractionResultWrapper c (Ljava/lang/Object;)LInteractionResultWrapper; pass
InteractionResultWrapper d (Ljava/lang/Object;)LInteractionResultWrapper; fail
InventoryClickType a PICKUP
InventoryClickType b QUICK_MOVE
InventoryClickType c SWAP
InventoryClickType d CLONE
InventoryClickType e THROW
InventoryClickType f QUICK_CRAFT
InventoryClickType g PICKUP_ALL
InventoryCraftResult a items
InventoryCrafting a items
InventoryCrafting d container
InventoryLargeChest a left
InventoryLargeChest b right
InventoryMerchant a merchant
InventoryMerchant b itemsInSlots
InventoryMerchant c recipe
InventoryMerchant d selectedIndex
InventoryMerchant g ()LMerchantRecipe; getRecipe
InventorySubcontainer Z_ ()V update
InventorySubcontainer b items
InventoryUtils a (LWorld;DDDLIInventory;)V dropInventory
InventoryUtils a (LWorld;DDDLItemStack;)V dropItem
InventoryUtils a (LWorld;LBlockPosition;LIInventory;)V dropInventory
InventoryUtils a (LWorld;LEntity;LIInventory;)V dropEntity
IpBanList a (Ljava/net/SocketAddress;)Z isBanned
IpBanList b (Ljava/net/SocketAddress;)LIpBanEntry; get
Item a ()Ljava/lang/String; getName
Item a (LBlock;)LItem; getItemOf
Item a (LItem;)I getId
Item a (LItemStack;LIBlockData;)F getDestroySpeed
Item b (I)LItem; getById
Item b (LIBlockData;)Z canDestroySpecialBlock
Item b maxStackSize
Item c durability
Item h RANDOM
Item i ()I getMaxStackSize
Item j ()I getMaxDurability
Item j craftingResult
Item k ()Z usesDurability
Item k name
Item l foodInfo
Item o ()LItem; getCraftingRemainingItem
Item s ()Z isFood
Item t ()LFoodInfo; getFoodInfo
ItemActionContext a ()LBlockPosition; getClickPosition
ItemActionContext g ()Z isSneaking
ItemActionContext i ()LEnumDirection; getClickedFace
ItemActionContext j ()LVec3D; getPos
ItemActionContext l ()LItemStack; getItemStack
ItemActionContext m ()LEntityHuman; getEntity
ItemActionContext n ()LEnumHand; getHand
ItemActionContext o ()LWorld; getWorld
ItemBlock d ()Z isCheckCollisions
ItemBlock e ()LBlock; getBlock
ItemBlockWallable a wallBlock
ItemBucket a fluidType
ItemCooldown a (LItem;)Z hasCooldown
ItemCooldown a (LItem;I)V setCooldown
ItemCooldown a cooldowns
ItemCooldown b currentTick
ItemCooldown$Info c endTick
ItemFireworks$EffectType a SMALL_BALL
ItemFireworks$EffectType b LARGE_BALL
ItemFireworks$EffectType c STAR
ItemFireworks$EffectType d CREEPER
ItemFireworks$EffectType e BURST
ItemStack B ()I getRepairCost
ItemStack E ()I getCount
ItemStack I ()V checkEmpty
ItemStack a ()Z isEmpty
ItemStack a (I)LItemStack; cloneAndSubtract
ItemStack a (ILEntityLiving;Ljava/util/function/Consumer;)V damage
ItemStack a (ILjava/util/Random;LEntityPlayer;)Z isDamaged
ItemStack a (LEnchantment;I)V addEnchantment
ItemStack a (LItemActionContext;)LEnumInteractionResult; placeItem
ItemStack a (LItemStack;)Z doMaterialsMatch
ItemStack a (LItemStack;LItemStack;)Z equals
ItemStack b ()LItem; getItem
ItemStack b (I)V setDamage
ItemStack b (LIBlockData;)Z canDestroySpecialBlock
ItemStack b (LItemStack;LItemStack;)Z matches
ItemStack b (LNBTTagCompound;)LNBTTagCompound; save
ItemStack c ()I getMaxStackSize
ItemStack c (I)V setRepairCost
ItemStack c (LNBTTagCompound;)V setTag
ItemStack c (Ljava/lang/String;)V removeTag
ItemStack d ()Z isStackable
ItemStack e (I)V setCount
ItemStack f (I)V add
ItemStack f count
ItemStack g ()I getDamage
ItemStack g (I)V subtract
ItemStack h item
ItemStack i ()LItemStack; cloneItemStack
ItemStack i tag
ItemStack n ()Z hasTag
ItemStack o ()LNBTTagCompound; getTag
ItemStack p ()LNBTTagCompound; getOrCreateTag
ItemStack q ()LNBTTagList; getEnchantments
ItemStack r ()LIChatBaseComponent; getName
ItemStack t ()Z hasName
ItemStack w ()Z canEnchant
ItemStack x ()Z hasEnchantments
ItemWorldMap a (LWorld;IIBZZ)LItemStack; createFilledMapView
ItemWorldMap a (LWorldServer;LItemStack;)V applySepiaFilter
ItemWorldMap b (LItemStack;LWorld;)LWorldMap; getSavedMap
Items a AIR
Items jY TURTLE_HELMET
Items jZ SCUTE
Items kA DIAMOND_AXE
Items kB STICK
Items kC BOWL
Items kD MUSHROOM_STEW
Items kE GOLDEN_SWORD
Items kF GOLDEN_SHOVEL
Items kG GOLDEN_PICKAXE
Items kH GOLDEN_AXE
Items kI NETHERITE_SWORD
Items kJ NETHERITE_SHOVEL
Items kK NETHERITE_PICKAXE
Items kL NETHERITE_AXE
Items kM STRING
Items kN FEATHER
Items kO GUNPOWDER
Items kP WOODEN_HOE
Items kQ STONE_HOE
Items kR IRON_HOE
Items kS DIAMOND_HOE
Items kT GOLDEN_HOE
Items kU NETHERITE_HOE
Items kV WHEAT_SEEDS
Items kW WHEAT
Items kX BREAD
Items kY LEATHER_HELMET
Items kZ LEATHER_CHESTPLATE
Items ka IRON_SHOVEL
Items kb IRON_PICKAXE
Items kc IRON_AXE
Items kd FLINT_AND_STEEL
Items ke APPLE
Items kf BOW
Items kg ARROW
Items kh COAL
Items ki CHARCOAL
Items kj DIAMOND
Items kk IRON_INGOT
Items kl GOLD_INGOT
Items km NETHERITE_INGOT
Items kn NETHERITE_SCRAP
Items ko IRON_SWORD
Items kp WOODEN_SWORD
Items kq WOODEN_SHOVEL
Items kr WOODEN_PICKAXE
Items ks WOODEN_AXE
Items kt STONE_SWORD
Items ku STONE_SHOVEL
Items kv STONE_PICKAXE
Items kw STONE_AXE
Items kx DIAMOND_SWORD
Items ky DIAMOND_SHOVEL
Items kz DIAMOND_PICKAXE
Items lA GOLDEN_APPLE
Items lB ENCHANTED_GOLDEN_APPLE
Items lC OAK_SIGN
Items lD SPRUCE_SIGN
Items lE BIRCH_SIGN
Items lF JUNGLE_SIGN
Items lG ACACIA_SIGN
Items lH DARK_OAK_SIGN
Items lI CRIMSON_SIGN
Items lJ WARPED_SIGN
Items lK BUCKET
Items lL WATER_BUCKET
Items lM LAVA_BUCKET
Items lN MINECART
Items lO SADDLE
Items lP REDSTONE
Items lQ SNOWBALL
Items lR OAK_BOAT
Items lS LEATHER
Items lT MILK_BUCKET
Items lU PUFFERFISH_BUCKET
Items lV SALMON_BUCKET
Items lW COD_BUCKET
Items lX TROPICAL_FISH_BUCKET
Items lY BRICK
Items lZ CLAY_BALL
Items la LEATHER_LEGGINGS
Items lb LEATHER_BOOTS
Items lc CHAINMAIL_HELMET
Items ld CHAINMAIL_CHESTPLATE
Items le CHAINMAIL_LEGGINGS
Items lf CHAINMAIL_BOOTS
Items lg IRON_HELMET
Items lh IRON_CHESTPLATE
Items li IRON_LEGGINGS
Items lj IRON_BOOTS
Items lk DIAMOND_HELMET
Items ll DIAMOND_CHESTPLATE
Items lm DIAMOND_LEGGINGS
Items ln DIAMOND_BOOTS
Items lo GOLDEN_HELMET
Items lp GOLDEN_CHESTPLATE
Items lq GOLDEN_LEGGINGS
Items lr GOLDEN_BOOTS
Items ls NETHERITE_HELMET
Items lt NETHERITE_CHESTPLATE
Items lu NETHERITE_LEGGINGS
Items lv NETHERITE_BOOTS
Items lw FLINT
Items lx PORKCHOP
Items ly COOKED_PORKCHOP
Items lz PAINTING
Items mA PINK_DYE
Items mB LIME_DYE
Items mC YELLOW_DYE
Items mD LIGHT_BLUE_DYE
Items mE MAGENTA_DYE
Items mF ORANGE_DYE
Items mG BONE_MEAL
Items mH BLUE_DYE
Items mI BROWN_DYE
Items mJ BLACK_DYE
Items mK WHITE_DYE
Items mL BONE
Items mM SUGAR
Items mO WHITE_BED
Items mP ORANGE_BED
Items mQ MAGENTA_BED
Items mR LIGHT_BLUE_BED
Items mS YELLOW_BED
Items mT LIME_BED
Items mU PINK_BED
Items mV GRAY_BED
Items mW LIGHT_GRAY_BED
Items mX CYAN_BED
Items mY PURPLE_BED
Items mZ BLUE_BED
Items mb PAPER
Items mc BOOK
Items md SLIME_BALL
Items me CHEST_MINECART
Items mf FURNACE_MINECART
Items mg EGG
Items mh COMPASS
Items mi FISHING_ROD
Items mj CLOCK
Items mk GLOWSTONE_DUST
Items ml COD
Items mm SALMON
Items mn TROPICAL_FISH
Items mo PUFFERFISH
Items mp COOKED_COD
Items mq COOKED_SALMON
Items mr INK_SAC
Items ms RED_DYE
Items mt GREEN_DYE
Items mu COCOA_BEANS
Items mv LAPIS_LAZULI
Items mw PURPLE_DYE
Items mx CYAN_DYE
Items my LIGHT_GRAY_DYE
Items mz GRAY_DYE
Items nA MAGMA_CREAM
Items nD ENDER_EYE
Items nE GLISTERING_MELON_SLICE
Items nF BAT_SPAWN_EGG
Items nG BEE_SPAWN_EGG
Items nH BLAZE_SPAWN_EGG
Items nI CAT_SPAWN_EGG
Items nJ CAVE_SPIDER_SPAWN_EGG
Items nK CHICKEN_SPAWN_EGG
Items nL COD_SPAWN_EGG
Items nM COW_SPAWN_EGG
Items nN CREEPER_SPAWN_EGG
Items nO DOLPHIN_SPAWN_EGG
Items nP DONKEY_SPAWN_EGG
Items nQ DROWNED_SPAWN_EGG
Items nR ELDER_GUARDIAN_SPAWN_EGG
Items nS ENDERMAN_SPAWN_EGG
Items nT ENDERMITE_SPAWN_EGG
Items nU EVOKER_SPAWN_EGG
Items nV FOX_SPAWN_EGG
Items nW GHAST_SPAWN_EGG
Items nX GUARDIAN_SPAWN_EGG
Items nY HOGLIN_SPAWN_EGG
Items nZ HORSE_SPAWN_EGG
Items na BROWN_BED
Items nb GREEN_BED
Items nc RED_BED
Items nd BLACK_BED
Items ne COOKIE
Items nf FILLED_MAP
Items ng SHEARS
Items nh MELON_SLICE
Items ni DRIED_KELP
Items nj PUMPKIN_SEEDS
Items nk MELON_SEEDS
Items nl BEEF
Items nm COOKED_BEEF
Items nn CHICKEN
Items no COOKED_CHICKEN
Items np ROTTEN_FLESH
Items nq ENDER_PEARL
Items nr BLAZE_ROD
Items ns GHAST_TEAR
Items nt GOLD_NUGGET
Items nu NETHER_WART
Items nv POTION
Items nw GLASS_BOTTLE
Items nx SPIDER_EYE
Items ny FERMENTED_SPIDER_EYE
Items nz BLAZE_POWDER
Items oA STRIDER_SPAWN_EGG
Items oB TRADER_LLAMA_SPAWN_EGG
Items oC TROPICAL_FISH_SPAWN_EGG
Items oD TURTLE_SPAWN_EGG
Items oE VEX_SPAWN_EGG
Items oF VILLAGER_SPAWN_EGG
Items oG VINDICATOR_SPAWN_EGG
Items oH WANDERING_TRADER_SPAWN_EGG
Items oI WITCH_SPAWN_EGG
Items oJ WITHER_SKELETON_SPAWN_EGG
Items oK WOLF_SPAWN_EGG
Items oL ZOGLIN_SPAWN_EGG
Items oM ZOMBIE_SPAWN_EGG
Items oN ZOMBIE_HORSE_SPAWN_EGG
Items oO ZOMBIE_VILLAGER_SPAWN_EGG
Items oP ZOMBIFIED_PIGLIN_SPAWN_EGG
Items oQ EXPERIENCE_BOTTLE
Items oR FIRE_CHARGE
Items oS WRITABLE_BOOK
Items oT WRITTEN_BOOK
Items oU EMERALD
Items oV ITEM_FRAME
Items oX CARROT
Items oY POTATO
Items oZ BAKED_POTATO
Items oa HUSK_SPAWN_EGG
Items ob LLAMA_SPAWN_EGG
Items oc MAGMA_CUBE_SPAWN_EGG
Items od MOOSHROOM_SPAWN_EGG
Items oe MULE_SPAWN_EGG
Items of OCELOT_SPAWN_EGG
Items og PANDA_SPAWN_EGG
Items oh PARROT_SPAWN_EGG
Items oi PHANTOM_SPAWN_EGG
Items oj PIG_SPAWN_EGG
Items ok PIGLIN_SPAWN_EGG
Items ol PILLAGER_SPAWN_EGG
Items om POLAR_BEAR_SPAWN_EGG
Items on PUFFERFISH_SPAWN_EGG
Items oo RABBIT_SPAWN_EGG
Items op RAVAGER_SPAWN_EGG
Items oq SALMON_SPAWN_EGG
Items or SHEEP_SPAWN_EGG
Items os SHULKER_SPAWN_EGG
Items ot SILVERFISH_SPAWN_EGG
Items ou SKELETON_SPAWN_EGG
Items ov SKELETON_HORSE_SPAWN_EGG
Items ow SLIME_SPAWN_EGG
Items ox SPIDER_SPAWN_EGG
Items oy SQUID_SPAWN_EGG
Items oz STRAY_SPAWN_EGG
Items pA RABBIT_HIDE
Items pB ARMOR_STAND
Items pC IRON_HORSE_ARMOR
Items pD GOLDEN_HORSE_ARMOR
Items pE DIAMOND_HORSE_ARMOR
Items pF LEATHER_HORSE_ARMOR
Items pG LEAD
Items pH NAME_TAG
Items pI COMMAND_BLOCK_MINECART
Items pJ MUTTON
Items pK COOKED_MUTTON
Items pL WHITE_BANNER
Items pM ORANGE_BANNER
Items pN MAGENTA_BANNER
Items pO LIGHT_BLUE_BANNER
Items pP YELLOW_BANNER
Items pQ LIME_BANNER
Items pR PINK_BANNER
Items pS GRAY_BANNER
Items pT LIGHT_GRAY_BANNER
Items pU CYAN_BANNER
Items pV PURPLE_BANNER
Items pW BLUE_BANNER
Items pX BROWN_BANNER
Items pY GREEN_BANNER
Items pZ RED_BANNER
Items pa POISONOUS_POTATO
Items pb MAP
Items pc GOLDEN_CARROT
Items pd SKELETON_SKULL
Items pe WITHER_SKELETON_SKULL
Items pf PLAYER_HEAD
Items pg ZOMBIE_HEAD
Items ph CREEPER_HEAD
Items pi DRAGON_HEAD
Items pj CARROT_ON_A_STICK
Items pk WARPED_FUNGUS_ON_A_STICK
Items pl NETHER_STAR
Items pm PUMPKIN_PIE
Items pn FIREWORK_ROCKET
Items po FIREWORK_STAR
Items pp ENCHANTED_BOOK
Items pq NETHER_BRICK
Items pr QUARTZ
Items ps TNT_MINECART
Items pt HOPPER_MINECART
Items pu PRISMARINE_SHARD
Items pv PRISMARINE_CRYSTALS
Items pw RABBIT
Items px COOKED_RABBIT
Items py RABBIT_STEW
Items pz RABBIT_FOOT
Items qA MUSIC_DISC_BLOCKS
Items qB MUSIC_DISC_CHIRP
Items qC MUSIC_DISC_FAR
Items qD MUSIC_DISC_MALL
Items qE MUSIC_DISC_MELLOHI
Items qF MUSIC_DISC_STAL
Items qG MUSIC_DISC_STRAD
Items qH MUSIC_DISC_WARD
Items qI MUSIC_DISC_11
Items qJ MUSIC_DISC_WAIT
Items qK MUSIC_DISC_PIGSTEP
Items qL TRIDENT
Items qM PHANTOM_MEMBRANE
Items qN NAUTILUS_SHELL
Items qO HEART_OF_THE_SEA
Items qP CROSSBOW
Items qQ SUSPICIOUS_STEW
Items qS FLOWER_BANNER_PATTERN
Items qT CREEPER_BANNER_PATTERN
Items qU SKULL_BANNER_PATTERN
Items qV MOJANG_BANNER_PATTERN
Items qW GLOBE_BANNER_PATTERN
Items qX PIGLIN_BANNER_PATTERN
Items qa BLACK_BANNER
Items qb END_CRYSTAL
Items qc CHORUS_FRUIT
Items qd POPPED_CHORUS_FRUIT
Items qe BEETROOT
Items qf BEETROOT_SEEDS
Items qg BEETROOT_SOUP
Items qh DRAGON_BREATH
Items qi SPLASH_POTION
Items qj SPECTRAL_ARROW
Items qk TIPPED_ARROW
Items ql LINGERING_POTION
Items qm SHIELD
Items qn ELYTRA
Items qo SPRUCE_BOAT
Items qp BIRCH_BOAT
Items qq JUNGLE_BOAT
Items qr ACACIA_BOAT
Items qs DARK_OAK_BOAT
Items qt TOTEM_OF_UNDYING
Items qu SHULKER_SHELL
Items qv IRON_NUGGET
Items qw KNOWLEDGE_BOOK
Items qx DEBUG_STICK
Items qy MUSIC_DISC_13
Items qz MUSIC_DISC_CAT
Items rl SWEET_BERRIES
Items rp HONEYCOMB
Items rs HONEY_BOTTLE
JsonList a ()[Ljava/lang/String; getEntries
JsonList a (LJsonListEntry;)V add
JsonList b (Ljava/lang/Object;)LJsonListEntry; get
JsonList c ()Z isEmpty
JsonList c (Ljava/lang/Object;)V remove
JsonList e ()V save
JsonList f ()V load
JsonListEntry f ()Z hasExpired
JsonListEntry g ()Ljava/lang/Object; getKey
LayerIsland a INSTANCE
LightEngineLayerEventListener$Void a INSTANCE
LightEngineThreaded A_ ()V queueUpdate
LightEngineThreaded$Update a PRE_UPDATE
LightEngineThreaded$Update b POST_UPDATE
LoginListener a networkManager
LoginListener b ()V tick
LoginListener b (LIChatBaseComponent;)V disconnect
LoginListener d random
LoginListener f server
LoginListener k loginKey
LoginListener$EnumProtocolState a HELLO
LoginListener$EnumProtocolState b KEY
LoginListener$EnumProtocolState c AUTHENTICATING
LoginListener$EnumProtocolState d NEGOTIATING
LoginListener$EnumProtocolState e READY_TO_ACCEPT
LoginListener$EnumProtocolState f DELAY_ACCEPT
LoginListener$EnumProtocolState g ACCEPTED
LootContextParameterSet a ()Ljava/util/Set; getRequired
LootContextParameterSet b ()Ljava/util/Set; getOptional
LootContextParameterSet$Builder a ()LLootContextParameterSet; build
LootContextParameterSet$Builder a (LLootContextParameter;)LLootContextParameterSet$Builder; addRequired
LootContextParameterSet$Builder b (LLootContextParameter;)LLootContextParameterSet$Builder; addOptional
LootContextParameterSets a EMPTY
LootContextParameterSets b CHEST
LootContextParameterSets c COMMAND
LootContextParameterSets d SELECTOR
LootContextParameterSets e FISHING
LootContextParameterSets f ENTITY
LootContextParameterSets g GIFT
LootContextParameterSets h BARTER
LootContextParameterSets i ADVANCEMENT_REWARD
LootContextParameterSets k GENERIC
LootContextParameterSets l BLOCK
LootContextParameters a THIS_ENTITY
LootContextParameters b LAST_DAMAGE_PLAYER
LootContextParameters c DAMAGE_SOURCE
LootContextParameters d KILLER_ENTITY
LootContextParameters e DIRECT_KILLER_ENTITY
LootContextParameters f POSITION
LootContextParameters h BLOCK_STATE
LootContextParameters i BLOCK_ENTITY
LootContextParameters j TOOL
LootContextParameters k EXPLOSION_RADIUS
LootEntryAbstract$Serializer a (Lcom/google/gson/JsonObject;LLootEntryAbstract;Lcom/google/gson/JsonSerializationContext;)V serializeType
LootEntryAbstract$Serializer b (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[LLootItemCondition;)LLootEntryAbstract; deserializeType
LootItemFunctionCopyNBT$Action a REPLACE
LootItemFunctionCopyNBT$Action b APPEND
LootItemFunctionCopyNBT$Action c MERGE
LootItemFunctionCopyNBT$Source a THIS
LootItemFunctionCopyNBT$Source b KILLER
LootItemFunctionCopyNBT$Source c KILLER_PLAYER
LootItemFunctionCopyNBT$Source d BLOCK_ENTITY
LootItemFunctionCopyName$Source a THIS
LootItemFunctionCopyName$Source b KILLER
LootItemFunctionCopyName$Source c KILLER_PLAYER
LootItemFunctionCopyName$Source d BLOCK_ENTITY
LootTable a ()LLootContextParameterSet; getLootContextParameterSet
LootTable a (LIInventory;LLootTableInfo;)V fillInventory
LootTable a (LLootTableInfo;)Ljava/util/List; populateLoot
LootTable a (LLootTableInfo;Ljava/util/function/Consumer;)V populateLootDirect
LootTable a EMPTY
LootTable b (LLootTableInfo;Ljava/util/function/Consumer;)V populateLoot
LootTableInfo a (LLootContextParameter;)Z hasContextParameter
LootTableInfo b ()F getLuck
LootTableInfo b luck
LootTableInfo c ()LWorldServer; getWorld
LootTableInfo c (LLootContextParameter;)Ljava/lang/Object; getContextParameter
LootTableInfo c world
LootTableInfo$Builder a (LLootContextParameter;Ljava/lang/Object;)LLootTableInfo$Builder; set
LootTableInfo$Builder a (LLootContextParameterSet;)LLootTableInfo; build
LootTableInfo$Builder b (LLootContextParameter;Ljava/lang/Object;)LLootTableInfo$Builder; setOptional
LootTableInfo$EntityTarget a THIS
LootTableInfo$EntityTarget b KILLER
LootTableInfo$EntityTarget c DIRECT_KILLER
LootTableInfo$EntityTarget d KILLER_PLAYER
LootTableRegistry a (LMinecraftKey;)LLootTable; getLootTable
MapIcon a ()B getType
MapIcon a type
MapIcon b ()LMapIcon$Type; getType
MapIcon b x
MapIcon c ()B getX
MapIcon c y
MapIcon d ()B getY
MapIcon d rotation
MapIcon e ()B getRotation
MapIcon e name
MapIcon g ()LIChatBaseComponent; getName
MapIcon$Type A RED_X
MapIcon$Type a PLAYER
MapIcon$Type b FRAME
MapIcon$Type c RED_MARKER
MapIcon$Type d BLUE_MARKER
MapIcon$Type e TARGET_X
MapIcon$Type f TARGET_POINT
MapIcon$Type g PLAYER_OFF_MAP
MapIcon$Type h PLAYER_OFF_LIMITS
MapIcon$Type i MANSION
MapIcon$Type j MONUMENT
MapIcon$Type k BANNER_WHITE
MapIcon$Type l BANNER_ORANGE
MapIcon$Type m BANNER_MAGENTA
MapIcon$Type n BANNER_LIGHT_BLUE
MapIcon$Type o BANNER_YELLOW
MapIcon$Type p BANNER_LIME
MapIcon$Type q BANNER_PINK
MapIcon$Type r BANNER_GRAY
MapIcon$Type s BANNER_LIGHT_GRAY
MapIcon$Type t BANNER_CYAN
MapIcon$Type u BANNER_PURPLE
MapIcon$Type v BANNER_BLUE
MapIcon$Type w BANNER_BROWN
MapIcon$Type x BANNER_GREEN
MapIcon$Type y BANNER_RED
MapIcon$Type z BANNER_BLACK
Material A BAMBOO
Material B CLOTH
Material C TNT
Material D LEAVES
Material E SHATTERABLE
Material F ICE
Material G CACTUS
Material H STONE
Material I ORE
Material J SNOW_BLOCK
Material K HEAVY
Material L BANNER
Material M PISTON
Material N CORAL
Material O PUMPKIN
Material P DRAGON_EGG
Material Q CAKE
Material U canBurn
Material a ()Z isLiquid
Material a AIR
Material b ()Z isBuildable
Material b STRUCTURE_VOID
Material c ()Z isSolid
Material c PORTAL
Material d ()Z isBurnable
Material d WOOL
Material e ()Z isReplaceable
Material e PLANT
Material f WATER_PLANT
Material g ()LEnumPistonReaction; getPushReaction
Material g REPLACEABLE_PLANT
Material h REPLACEABLE_WATER_PLANT
Material i WATER
Material j BUBBLE_COLUMN
Material k LAVA
Material l PACKED_ICE
Material m FIRE
Material n ORIENTABLE
Material o WEB
Material p BUILDABLE_GLASS
Material q CLAY
Material r EARTH
Material s GRASS
Material t SNOW_LAYER
Material u SAND
Material v SPONGE
Material w SHULKER_SHELL
Material x WOOD
Material y NETHER_WOOD
Material z BAMBOO_SAPLING
MaterialMapColor ai rgb
MathHelper a (D)F sqrt
MathHelper a (F)F sin
MathHelper a (III)I clamp
MathHelper a (Ljava/util/Random;II)I nextInt
MathHelper b (F)F cos
MathHelper c (D)I floor
MemoryModuleType A NEAREST_HOSTILE
MemoryModuleType B HIDING_PLACE
MemoryModuleType C HEARD_BELL_TIME
MemoryModuleType D CANT_REACH_WALK_TARGET_SINCE
MemoryModuleType E GOLEM_LAST_SEEN_TIME
MemoryModuleType F LAST_SLEPT
MemoryModuleType G LAST_WOKEN
MemoryModuleType H LAST_WORKED_AT_POI
MemoryModuleType I NEAREST_VISIBLE_ADULY
MemoryModuleType J NEAREST_VISIBLE_WANTED_ITEM
MemoryModuleType K NEAREST_VISIBLE_NEMSIS
MemoryModuleType L ANGRY_AT
MemoryModuleType M UNIVERSAL_ANGER
MemoryModuleType N ADMIRING_ITEM
MemoryModuleType O ADMIRING_DISABLED
MemoryModuleType P HUNTED_RECENTLY
MemoryModuleType Q CELEBRATE_LOCATION
MemoryModuleType R DANCING
MemoryModuleType S NEAREST_VISIBLE_HUNTABLE_HOGLIN
MemoryModuleType T NEAREST_VISIBLE_BABY_HOGLIN
MemoryModuleType U NEAREST_VISIBLE_BABY_PIGLIN
MemoryModuleType V NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD
MemoryModuleType W NEAREST_ADULT_PIGLINS
MemoryModuleType X NEAREST_VISIBLE_ADULT_PIGLINS
MemoryModuleType Y NEAREST_VISIBLE_ADULT_HOGLINS
MemoryModuleType Z NEAREST_VISIBLE_ADULT_PIGLIN
MemoryModuleType a ()Ljava/util/Optional; getSerializer
MemoryModuleType a DUMMY
MemoryModuleType aa NEAREST_VISIBLE_ZOMBIFIED
MemoryModuleType ab VISIBLE_ADULT_PIGLIN_COUNT
MemoryModuleType ac VISIBLE_ADULT_HOGLIN_COUNT
MemoryModuleType ad NEAREST_PLAYER_HOLDING_WANTED_ITEM
MemoryModuleType ae ATE_RECENTLY
MemoryModuleType af NEAREST_REPELLENT
MemoryModuleType ag PACIFIED
MemoryModuleType b HOME
MemoryModuleType c JOB_SITE
MemoryModuleType d POTENTIAL_JOB_SITE
MemoryModuleType e MEETING_POINT
MemoryModuleType f SECONDARY_JOB_SITE
MemoryModuleType g MOBS
MemoryModuleType h VISIBLE_MOBS
MemoryModuleType i VISIBLE_VILLAGER_BABIES
MemoryModuleType j NEAREST_PLAYERS
MemoryModuleType k NEAREST_VISIBLE_PLAYER
MemoryModuleType l NEAREST_VISIBLE_TARGETABLE_PLAYER
MemoryModuleType m WALK_TARGET
MemoryModuleType n LOOK_TARGET
MemoryModuleType o ATTACK_TARGET
MemoryModuleType p ATTACK_COOLING_DOWN
MemoryModuleType q INTERACTION_TARGET
MemoryModuleType r BREED_TARGET
MemoryModuleType s RIDE_TARGET
MemoryModuleType t PATH
MemoryModuleType u INTERACTABLE_DOORS
MemoryModuleType v OPENED_DOORS
MemoryModuleType w NEAREST_BED
MemoryModuleType x HURT_BY
MemoryModuleType y HURT_BY_ENTITY
MemoryModuleType z AVOID_TARGET
MemoryStatus a VALUE_PRESENT
MemoryStatus b VALUE_ABSENT
MemoryStatus c REGISTERED
MerchantRecipe a (I)V increaseSpecialPrice
MerchantRecipe a buyingItem1
MerchantRecipe b ()LItemStack; getBuyItem1
MerchantRecipe b (I)V setSpecialPrice
MerchantRecipe b buyingItem2
MerchantRecipe c ()LItemStack; getBuyItem2
MerchantRecipe c sellingItem
MerchantRecipe d ()LItemStack; getSellingItem
MerchantRecipe d uses
MerchantRecipe e maxUses
MerchantRecipe f rewardExp
MerchantRecipe g ()I getUses
MerchantRecipe g specialPrice
MerchantRecipe h ()V resetUses
MerchantRecipe h demand
MerchantRecipe i ()I getMaxUses
MerchantRecipe i priceMultiplier
MerchantRecipe j ()V increaseUses
MerchantRecipe j xp
MerchantRecipe k ()I getDemand
MerchantRecipe l ()V setSpecialPrice
MerchantRecipe m ()I getSpecialPrice
MerchantRecipe n ()F getPriceMultiplier
MerchantRecipe o ()I getXp
MerchantRecipe p ()Z isFullyUsed
MerchantRecipe s ()Z isRewardExp
MinecraftEncryption a (ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher; a
MinecraftEncryption a (ILjava/security/Key;)Ljavax/crypto/Cipher; a
MinecraftEncryption a (Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B a
MinecraftEncryption a (Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey; a
MinecraftKey a ()Ljava/lang/String; getKey
MinecraftKey b ()Ljava/lang/String; getNamespace
MinecraftKey b namespace
MinecraftKey c key
MobEffect a ()LMobEffectList; getMobEffect
MobEffect a (LEntityLiving;Ljava/lang/Runnable;)Z tick
MobEffect b ()I getDuration
MobEffect c ()I getAmplifier
MobEffect c duration
MobEffect d ()Z isAmbient
MobEffect d amplification
MobEffect e ()Z isShowParticles
MobEffect e splash
MobEffect f ()Z isShowIcon
MobEffect f ambient
MobEffect h showParticles
MobEffect i showIcon
MobEffect j hiddenEffect
MobEffectInfo a BENEFICIAL
MobEffectInfo b HARMFUL
MobEffectInfo c NEUTRAL
MobEffectList a ()Z isInstant
MobEffectList a (I)LMobEffectList; fromId
MobEffectList a (LEntity;LEntity;LEntityLiving;ID)V applyInstantEffect
MobEffectList a (LEntityLiving;I)V tick
MobEffectList a (LMobEffectList;)I getId
MobEffectList f ()I getColor
MobEffects A UNLUCK
MobEffects B SLOW_FALLING
MobEffects C CONDUIT_POWER
MobEffects D DOLPHINS_GRACE
MobEffects E BAD_OMEN
MobEffects F HERO_OF_THE_VILLAGE
MobEffects a FASTER_MOVEMENT
MobEffects b SLOWER_MOVEMENT
MobEffects c FASTER_DIG
MobEffects d SLOWER_DIG
MobEffects e INCREASE_DAMAGE
MobEffects f HEAL
MobEffects g HARM
MobEffects h JUMP
MobEffects i CONFUSION
MobEffects j REGENERATION
MobEffects k RESISTANCE
MobEffects l FIRE_RESISTANCE
MobEffects m WATER_BREATHING
MobEffects n INVISIBILITY
MobEffects o BLINDNESS
MobEffects p NIGHT_VISION
MobEffects q HUNGER
MobEffects r WEAKNESS
MobEffects s POISON
MobEffects t WITHER
MobEffects u HEALTH_BOOST
MobEffects v ABSORBTION
MobEffects w SATURATION
MobEffects x GLOWING
MobEffects y LEVITATION
MobEffects z LUCK
MobSpawnerAbstract a (LEntityTypes;)V setMobName
MobSpawnerAbstract a (LMobSpawnerData;)V setSpawnData
MobSpawnerAbstract b spawnDelay
MobSpawnerAbstract c mobs
MobSpawnerAbstract d spawnData
MobSpawnerAbstract g ()LMinecraftKey; getMobName
MobSpawnerAbstract g minSpawnDelay
MobSpawnerAbstract h maxSpawnDelay
MobSpawnerAbstract i spawnCount
MobSpawnerAbstract k maxNearbyEntities
MobSpawnerAbstract l requiredPlayerRange
MobSpawnerAbstract m spawnRange
MobSpawnerData b ()LNBTTagCompound; getEntity
MobSpawnerData b entity
MojangsonParser a (Ljava/lang/String;)LNBTTagCompound; parse
MojangsonParser b (Ljava/lang/String;)LNBTBase; parseLiteral
MojangsonParser h ()LNBTBase; parseArray
MovingObjectPosition a pos
MovingObjectPosition c ()LMovingObjectPosition$EnumMovingObjectType; getType
MovingObjectPosition e ()LVec3D; getPos
MovingObjectPosition$EnumMovingObjectType a MISS
MovingObjectPosition$EnumMovingObjectType b BLOCK
MovingObjectPosition$EnumMovingObjectType c ENTITY
MovingObjectPositionBlock a ()LBlockPosition; getBlockPosition
MovingObjectPositionBlock b ()LEnumDirection; getDirection
MovingObjectPositionEntity a ()LEntity; getEntity
NBTBase a ()B getTypeId
NBTBase a (Ljava/io/DataOutput;)V write
NBTBase c ()LNBTBase; clone
NBTBase f_ ()Ljava/lang/String; asString
NBTBase isEmpty ()Z isEmpty
NBTList d (ILNBTBase;)LNBTBase; set
NBTNumber e ()J asLong
NBTNumber f ()I asInt
NBTNumber g ()S asShort
NBTNumber h ()B asByte
NBTNumber i ()D asDouble
NBTNumber j ()F asFloat
NBTTagByte h data
NBTTagByteArray b data
NBTTagByteArray d ()[B getBytes
NBTTagCompound a (Ljava/lang/String;B)V setByte
NBTTagCompound a (Ljava/lang/String;D)V setDouble
NBTTagCompound a (Ljava/lang/String;F)V setFloat
NBTTagCompound a (Ljava/lang/String;J)V setLong
NBTTagCompound a (Ljava/lang/String;LNBTBase;)LNBTBase; set
NBTTagCompound a (Ljava/lang/String;Ljava/lang/String;)V setString
NBTTagCompound a (Ljava/lang/String;S)V setShort
NBTTagCompound a (Ljava/lang/String;Z)V setBoolean
NBTTagCompound a (Ljava/lang/String;[B)V setByteArray
NBTTagCompound a (Ljava/lang/String;[I)V setIntArray
NBTTagCompound b (Ljava/lang/String;I)V setInt
NBTTagCompound c (Ljava/lang/String;)LNBTBase; get
NBTTagCompound c (Ljava/lang/String;I)Z hasKeyOfType
NBTTagCompound d ()Ljava/util/Set; getKeys
NBTTagCompound d (Ljava/lang/String;I)LNBTTagList; getList
NBTTagCompound e (Ljava/lang/String;)Z hasKey
NBTTagCompound f (Ljava/lang/String;)B getByte
NBTTagCompound g ()LNBTTagCompound; clone
NBTTagCompound g (Ljava/lang/String;)S getShort
NBTTagCompound h (Ljava/lang/String;)I getInt
NBTTagCompound i (Ljava/lang/String;)J getLong
NBTTagCompound i map
NBTTagCompound j (Ljava/lang/String;)F getFloat
NBTTagCompound k (Ljava/lang/String;)D getDouble
NBTTagCompound l (Ljava/lang/String;)Ljava/lang/String; getString
NBTTagCompound m (Ljava/lang/String;)[B getByteArray
NBTTagCompound n (Ljava/lang/String;)[I getIntArray
NBTTagCompound o (Ljava/lang/String;)[J getLongArray
NBTTagCompound p (Ljava/lang/String;)LNBTTagCompound; getCompound
NBTTagCompound q (Ljava/lang/String;)Z getBoolean
NBTTagCompound r (Ljava/lang/String;)V remove
NBTTagDouble c data
NBTTagFloat c data
NBTTagInt b data
NBTTagIntArray b data
NBTTagIntArray g ()[I getInts
NBTTagList a (I)LNBTTagCompound; getCompound
NBTTagList c (I)LNBTBase; remove
NBTTagList c list
NBTTagList h type
NBTTagList j (I)Ljava/lang/String; getString
NBTTagList size ()I size
NBTTagLong b data
NBTTagLongArray g ()[J getLongs
NBTTagShort b data
NBTTagString c data
NameReferencingFileConverter g (Lnet/minecraft/server/MinecraftServer;)Ljava/io/File; getPlayersFolder
NetworkManager a (I)V setCompressionLevel
NetworkManager a (LEnumProtocol;)V setProtocol
NetworkManager a (LIChatBaseComponent;)V close
NetworkManager a (LPacket;)V sendPacket
NetworkManager a (LPacket;Lio/netty/util/concurrent/GenericFutureListener;)V sendPacket
NetworkManager a (LPacketListener;)V setPacketListener
NetworkManager b ()Ljava/net/SocketAddress; getSocketAddress
NetworkManager c ()Z isLocal
NetworkManager g ()Z isConnected
NetworkManager i packetQueue
NetworkManager j channel
NetworkManager k ()V stopReading
NetworkManager k socketAddress
NetworkManager l ()V handleDisconnection
NetworkManager l packetListener
NibbleArray a ()[B asBytes
OperatorBoolean a FALSE
OperatorBoolean b NOT_OR
OperatorBoolean c ONLY_SECOND
OperatorBoolean d NOT_FIRST
OperatorBoolean e ONLY_FIRST
OperatorBoolean f NOT_SECOND
OperatorBoolean g NOT_SAME
OperatorBoolean h NOT_AND
OperatorBoolean i AND
OperatorBoolean j SAME
OperatorBoolean k SECOND
OperatorBoolean l CAUSES
OperatorBoolean m FIRST
OperatorBoolean n CAUSED_BY
OperatorBoolean o OR
OperatorBoolean p TRUE
PacketHandshakingInSetProtocol b hostname
PacketHandshakingInSetProtocol c port
PacketLoginInEncryptionBegin a (Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey; a
PacketPlayInAbilities b ()Z isFlying
PacketPlayInAdvancements$Status a OPENED_TAB
PacketPlayInAdvancements$Status b CLOSED_SCREEN
PacketPlayInBlockDig$EnumPlayerDigType a START_DESTROY_BLOCK
PacketPlayInBlockDig$EnumPlayerDigType b ABORT_DESTROY_BLOCK
PacketPlayInBlockDig$EnumPlayerDigType c STOP_DESTROY_BLOCK
PacketPlayInBlockDig$EnumPlayerDigType d DROP_ALL_ITEMS
PacketPlayInBlockDig$EnumPlayerDigType e DROP_ITEM
PacketPlayInBlockDig$EnumPlayerDigType f RELEASE_USE_ITEM
PacketPlayInBlockDig$EnumPlayerDigType g SWAP_ITEM_WITH_OFFHAND
PacketPlayInClientCommand$EnumClientCommand a PERFORM_RESPAWN
PacketPlayInClientCommand$EnumClientCommand b REQUEST_STATS
PacketPlayInCloseWindow a id
PacketPlayInCustomPayload b tag
PacketPlayInCustomPayload c data
PacketPlayInEntityAction b animation
PacketPlayInEntityAction$EnumPlayerAction a PRESS_SHIFT_KEY
PacketPlayInEntityAction$EnumPlayerAction b RELEASE_SHIFT_KEY
PacketPlayInEntityAction$EnumPlayerAction c STOP_SLEEPING
PacketPlayInEntityAction$EnumPlayerAction d START_SPRINTING
PacketPlayInEntityAction$EnumPlayerAction e STOP_SPRINTING
PacketPlayInEntityAction$EnumPlayerAction f START_RIDING_JUMP
PacketPlayInEntityAction$EnumPlayerAction g STOP_RIDING_JUMP
PacketPlayInEntityAction$EnumPlayerAction h OPEN_INVENTORY
PacketPlayInEntityAction$EnumPlayerAction i START_FALL_FLYING
PacketPlayInFlying a x
PacketPlayInFlying b y
PacketPlayInFlying c z
PacketPlayInFlying d yaw
PacketPlayInFlying e pitch
PacketPlayInFlying g hasPos
PacketPlayInFlying h hasLook
PacketPlayInHeldItemSlot a itemInHandIndex
PacketPlayInRecipeDisplayed$Status a SHOWN
PacketPlayInRecipeDisplayed$Status b SETTINGS
PacketPlayInResourcePackStatus a status
PacketPlayInResourcePackStatus$EnumResourcePackStatus a SUCCESSFULLY_LOADED
PacketPlayInResourcePackStatus$EnumResourcePackStatus b DECLINED
PacketPlayInResourcePackStatus$EnumResourcePackStatus c FAILED_DOWNLOAD
PacketPlayInResourcePackStatus$EnumResourcePackStatus d ACCEPTED
PacketPlayInSetCreativeSlot a slot
PacketPlayInSetCreativeSlot c ()LItemStack; getItemStack
PacketPlayInSettings a locale
PacketPlayInSettings b viewDistance
PacketPlayInSettings g ()LEnumMainHand; getMainHand
PacketPlayInUseEntity b action
PacketPlayInUseEntity$EnumEntityUseAction a INTERACT
PacketPlayInUseEntity$EnumEntityUseAction b ATTACK
PacketPlayInUseEntity$EnumEntityUseAction c INTERACT_AT
PacketPlayInVehicleMove b ()D getX
PacketPlayInVehicleMove c ()D getY
PacketPlayInVehicleMove d ()D getZ
PacketPlayInVehicleMove e ()F getYaw
PacketPlayInVehicleMove f ()F getPitch
PacketPlayInWindowClick b slot
PacketPlayInWindowClick c button
PacketPlayInWindowClick e item
PacketPlayInWindowClick f shift
PacketPlayOutBlockChange b block
PacketPlayOutBoss$Action a ADD
PacketPlayOutBoss$Action b REMOVE
PacketPlayOutBoss$Action c UPDATE_PCT
PacketPlayOutBoss$Action d UPDATE_NAME
PacketPlayOutBoss$Action e UPDATE_STYLE
PacketPlayOutBoss$Action f UPDATE_PROPERTIES
PacketPlayOutCombatEvent$EnumCombatEventType a ENTER_COMBAT
PacketPlayOutCombatEvent$EnumCombatEventType b END_COMBAT
PacketPlayOutCombatEvent$EnumCombatEventType c ENTITY_DIED
PacketPlayOutPlayerInfo$EnumPlayerInfoAction a ADD_PLAYER
PacketPlayOutPlayerInfo$EnumPlayerInfoAction b UPDATE_GAME_MODE
PacketPlayOutPlayerInfo$EnumPlayerInfoAction c UPDATE_LATENCY
PacketPlayOutPlayerInfo$EnumPlayerInfoAction d UPDATE_DISPLAY_NAME
PacketPlayOutPlayerInfo$EnumPlayerInfoAction e REMOVE_PLAYER
PacketPlayOutPlayerListHeaderFooter a header
PacketPlayOutPlayerListHeaderFooter b footer
PacketPlayOutPosition$EnumPlayerTeleportFlags a X
PacketPlayOutPosition$EnumPlayerTeleportFlags b Y
PacketPlayOutPosition$EnumPlayerTeleportFlags c Z
PacketPlayOutPosition$EnumPlayerTeleportFlags d Y_ROT
PacketPlayOutPosition$EnumPlayerTeleportFlags e X_ROT
PacketPlayOutRecipes$Action a INIT
PacketPlayOutRecipes$Action b ADD
PacketPlayOutRecipes$Action c REMOVE
PacketPlayOutSpawnPosition a position
PacketPlayOutTitle$EnumTitleAction a TITLE
PacketPlayOutTitle$EnumTitleAction b SUBTITLE
PacketPlayOutTitle$EnumTitleAction c ACTIONBAR
PacketPlayOutTitle$EnumTitleAction d TIMES
PacketPlayOutTitle$EnumTitleAction e CLEAR
PacketPlayOutTitle$EnumTitleAction f RESET
PacketPlayOutWorldBorder$EnumWorldBorderAction a SET_SIZE
PacketPlayOutWorldBorder$EnumWorldBorderAction b LERP_SIZE
PacketPlayOutWorldBorder$EnumWorldBorderAction c SET_CENTER
PacketPlayOutWorldBorder$EnumWorldBorderAction d INITIALIZE
PacketPlayOutWorldBorder$EnumWorldBorderAction e SET_WARNING_TIME
PacketPlayOutWorldBorder$EnumWorldBorderAction f SET_WARNING_BLOCKS
PacketStatusListener b minecraftServer
PacketStatusListener c networkManager
Paintings a ()I getWidth
Paintings b ()I getHeight
ParticleParam b ()LParticle; getParticle
Particles A FLAME
Particles B SOUL_FIRE_FLAME
Particles C SOUL
Particles D FLASH
Particles E HAPPY_VILLAGER
Particles F COMPOSTER
Particles G HEART
Particles H INSTANT_EFFECT
Particles I ITEM
Particles J ITEM_SLIME
Particles K ITEM_SNOWBALL
Particles L LARGE_SMOKE
Particles M LAVA
Particles N MYCELIUM
Particles O NOTE
Particles P POOF
Particles Q PORTAL
Particles R RAIN
Particles S SMOKE
Particles T SNEEZE
Particles U SPIT
Particles V SQUID_INK
Particles W SWEEP_ATTACK
Particles X TOTEM_OF_UNDYING
Particles Y UNDERWATER
Particles Z SPLASH
Particles a AMBIENT_ENTITY_EFFECT
Particles aa WITCH
Particles ab BUBBLE_POP
Particles ac CURRENT_DOWN
Particles ad BUBBLE_COLUMN_UP
Particles ae NAUTILUS
Particles af DOLPHIN
Particles ag CAMPFIRE_COSY_SMOKE
Particles ah CAMPFIRE_SIGNAL_SMOKE
Particles ai DRIPPING_HONEY
Particles aj FALLING_HONEY
Particles ak LANDING_HONEY
Particles al FALLING_NECTAR
Particles am ASH
Particles an CRIMSON_SPORE
Particles ao WARPED_SPORE
Particles ap DRIPPING_OBSIDIAN_TEAR
Particles aq FALLING_OBSIDIAN_TEAR
Particles ar LANDING_OBSIDIAN_TEAR
Particles as REVERSE_PORTAL
Particles at WHITE_ASH
Particles b ANGRY_VILLAGER
Particles c BARRIER
Particles d BLOCK
Particles e BUBBLE
Particles f CLOUD
Particles g CRIT
Particles h DAMAGE_INDICATOR
Particles i DRAGON_BREATH
Particles j DRIPPING_LAVA
Particles k FALLING_LAVA
Particles l LANDING_LAVA
Particles m DRIPPING_WATER
Particles n FALLING_WATER
Particles o DUST
Particles p EFFECT
Particles q ELDER_GUARDIAN
Particles r ENCHANTED_HIT
Particles s ENCHANT
Particles t END_ROD
Particles u ENTITY_EFFECT
Particles v EXPLOSION_EMITTER
Particles w EXPLOSION
Particles x FALLING_DUST
Particles y FIREWORK
Particles z FISHING
PathMode a LAND
PathMode b WATER
PathMode c AIR
PathType a BLOCKED
PathType b OPEN
PathType c WALKABLE
PathType d TRAPDOOR
PathType e FENCE
PathType f LAVA
PathType g WATER
PathType h WATER_BORDER
PathType i RAIL
PathType j UNPASSABLE_RAIL
PathType k DANGER_FIRE
PathType l DAMAGE_FIRE
PathType m DANGER_CACTUS
PathType n DAMAGE_CACTUS
PathType o DANGER_OTHER
PathType p DAMAGE_OTHER
PathType q DOOR_OPEN
PathType r DOOR_WOOD_CLOSED
PathType s DOOR_IRON_CLOSED
PathType t BREACH
PathType u LEAVES
PathType v STICKY_HONEY
PathType w COCOA
PathfinderGoal$Type a MOVE
PathfinderGoal$Type b LOOK
PathfinderGoal$Type c JUMP
PathfinderGoal$Type d TARGET
PathfinderGoalBoat a GO_TO_BOAT
PathfinderGoalBoat b GO_IN_BOAT_DIRECTION
PathfinderGoalBreed a animal
PathfinderGoalBreed c partner
PathfinderGoalCrossbowAttack$State a UNCHARGED
PathfinderGoalCrossbowAttack$State b CHARGING
PathfinderGoalCrossbowAttack$State c CHARGED
PathfinderGoalCrossbowAttack$State d READY_TO_ATTACK
PathfinderGoalDoorInteract d entity
PathfinderGoalDoorInteract e door
PathfinderGoalRandomStroll a (I)V setTimeBetweenMovement
PathfinderGoalRemoveBlock h entity
PathfinderGoalSelector b ()V doTick
PathfinderGoalSit a entity
PathfinderGoalTame a entity
PathfinderGoalTempt b target
PersistentBase b id
PersistentBase d ()Ljava/lang/String; getId
PersistentRaid a (LBlockPosition;I)LRaid; getNearbyRaid
PersistentRaid a raids
PistonExtendsChecker c ()Ljava/util/List; getMovedBlocks
PistonExtendsChecker d ()Ljava/util/List; getBrokenBlocks
PlayerAbilities a isInvulnerable
PlayerAbilities b isFlying
PlayerAbilities c canFly
PlayerAbilities d canInstantlyBuild
PlayerAbilities e mayBuild
PlayerAbilities f flySpeed
PlayerAbilities g walkSpeed
PlayerChunk a (LChunkStatus;)Ljava/util/concurrent/CompletableFuture; getStatusFutureUnchecked
PlayerChunk a UNLOADED_CHUNK_ACCESS
PlayerChunk b (I)LChunkStatus; getChunkStatus
PlayerChunk b UNLOADED_CHUNK_ACCESS_FUTURE
PlayerChunk c (I)LPlayerChunk$State; getChunkState
PlayerChunk c UNLOADED_CHUNK
PlayerChunk d ()LChunk; getChunk
PlayerChunk d UNLOADED_CHUNK_FUTURE
PlayerChunk e CHUNK_STATUSES
PlayerChunk f CHUNK_STATES
PlayerChunk g ()Ljava/util/concurrent/CompletableFuture; getChunkSave
PlayerChunk g statusFutures
PlayerChunk h fullChunkFuture
PlayerChunk i tickingFuture
PlayerChunk j ()I getTicketLevel
PlayerChunk j entityTickingFuture
PlayerChunk k chunkSave
PlayerChunk l ()Z hasBeenLoaded
PlayerChunk l oldTicketLevel
PlayerChunk m ticketLevel
PlayerChunk o location
PlayerChunk p dirtyBlocks
PlayerChunk q dirtyCount
PlayerChunk u lightEngine
PlayerChunk w players
PlayerChunk x hasBeenLoaded
PlayerChunk$State a (LPlayerChunk$State;)Z isAtLeast
PlayerChunk$State a INACCESSIBLE
PlayerChunk$State b BORDER
PlayerChunk$State c TICKING
PlayerChunk$State d ENTITY_TICKING
PlayerChunkMap B viewDistance
PlayerChunkMap a (I)V setViewDistance
PlayerChunkMap a (J)LPlayerChunk; getUpdatingChunk
PlayerChunkMap a (LEntity;)V addEntity
PlayerChunkMap a (LEntity;LPacket;)V broadcast
PlayerChunkMap a (LEntityPlayer;)V movePlayer
PlayerChunkMap a (LEntityPlayer;LChunkCoordIntPair;[LPacket;ZZ)V sendChunk
PlayerChunkMap a (LIChunkAccess;)Z saveChunk
PlayerChunkMap a (Ljava/util/function/BooleanSupplier;)V unloadChunks
PlayerChunkMap a (Z)V save
PlayerChunkMap a GOLDEN_TICKET
PlayerChunkMap b (J)LPlayerChunk; getVisibleChunk
PlayerChunkMap b (LEntity;)V removeEntity
PlayerChunkMap b (LEntity;LPacket;)V broadcastIncludingSelf
PlayerChunkMap d (LChunkCoordIntPair;)Z isOutsideOfRange
PlayerChunkMap d updatingChunks
PlayerChunkMap e visibleChunks
PlayerChunkMap f pendingUnload
PlayerChunkMap g loadedChunks
PlayerChunkMap h world
PlayerChunkMap i (LChunkCoordIntPair;)LNBTTagCompound; readChunkData
PlayerChunkMap i lightEngine
PlayerChunkMap j executor
PlayerChunkMap k chunkGenerator
PlayerChunkMap n unloadQueue
PlayerChunkMap o updatingChunksModified
PlayerChunkMap q mailboxWorldGen
PlayerChunkMap r mailboxMain
PlayerChunkMap s worldLoadListener
PlayerChunkMap t chunkDistanceManager
PlayerChunkMap v definedStructureManager
PlayerChunkMap x playerMap
PlayerChunkMap y trackedEntities
PlayerChunkMap$EntityTracker a (LEntityPlayer;)V clear
PlayerChunkMap$EntityTracker a (LPacket;)V broadcast
PlayerChunkMap$EntityTracker a (Ljava/util/List;)V track
PlayerChunkMap$EntityTracker b (LEntityPlayer;)V updatePlayer
PlayerChunkMap$EntityTracker b (LPacket;)V broadcastIncludingSelf
PlayerChunkMap$EntityTracker b trackerEntry
PlayerChunkMap$EntityTracker c tracker
PlayerChunkMap$EntityTracker d trackingDistance
PlayerChunkMap$EntityTracker f trackedPlayers
PlayerConnection F receivedMovePackets
PlayerConnection G processedMovePackets
PlayerConnection a (LPacket;)V sendPacket
PlayerConnection a networkManager
PlayerConnection b ()V tick
PlayerConnection b (LIChatBaseComponent;)V disconnect
PlayerConnection b player
PlayerConnection c ()V syncPosition
PlayerConnection c (Ljava/lang/String;)V handleCommand
PlayerConnection d ()Z isExemptPlayer
PlayerConnection d minecraftServer
PlayerConnection f lastKeepAlive
PlayerConnection g awaitingKeepAlive
PlayerConnection i chatThrottle
PlayerConnection y teleportPos
PlayerConnection z teleportAwait
PlayerConnectionUtils a (LPacket;LPacketListener;LIAsyncTaskHandler;)V ensureMainThread
PlayerConnectionUtils a (LPacket;LPacketListener;LWorldServer;)V ensureMainThread
PlayerInteractManager a (LBlockPosition;)Z breakBlock
PlayerInteractManager a (LEnumGamemode;)V setGameMode
PlayerInteractManager a world
PlayerInteractManager b ()LEnumGamemode; getGameMode
PlayerInteractManager b player
PlayerInteractManager d gamemode
PlayerInteractManager e ()Z isCreative
PlayerInteractManager g lastDigTick
PlayerInteractManager i currentTick
PlayerInventory a (LItemStack;LItemStack;)Z isSimilarAndNotFull
PlayerInventory a items
PlayerInventory b armor
PlayerInventory c extraSlots
PlayerInventory d (LItemStack;)I firstPartial
PlayerInventory d itemInHandIndex
PlayerInventory e (LItemStack;)Z pickup
PlayerInventory e player
PlayerInventory f ()LItemStack; getItemInHand
PlayerInventory g ()I getHotbarSize
PlayerInventory g (LItemStack;)V setCarried
PlayerInventory g carried
PlayerInventory h ()I getFirstEmptySlotIndex
PlayerInventory k ()V dropContents
PlayerInventory m ()LItemStack; getCarried
PlayerList a ()V reloadWhitelist
PlayerList a (LEntityHuman;)LServerStatisticManager; getStatisticManager
PlayerList a (LEntityHuman;DDDDLResourceKey;LPacket;)V sendPacketNearby
PlayerList a (LEntityPlayer;Z)LEntityPlayer; moveToWorld
PlayerList a (LIChatBaseComponent;LChatMessageType;Ljava/util/UUID;)V sendMessage
PlayerList a (LPacket;)V sendAll
PlayerList a (LScoreboardServer;LEntityPlayer;)V sendScoreboard
PlayerList a (LWorldServer;)V setPlayerFileData
PlayerList a (Lcom/mojang/authlib/GameProfile;)V addOp
PlayerList a (Ljava/lang/String;)LEntityPlayer; getPlayer
PlayerList a (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)LIChatBaseComponent; attemptLogin
PlayerList a (Ljava/util/UUID;)LEntityPlayer; getPlayer
PlayerList a (Z)V setHasWhitelist
PlayerList b (LEntityPlayer;)V savePlayerFile
PlayerList b (Lcom/mojang/authlib/GameProfile;)V removeOp
PlayerList c ()Lnet/minecraft/server/MinecraftServer; getServer
PlayerList c (LEntityPlayer;)V disconnect
PlayerList d ()V tick
PlayerList e (LEntityPlayer;)V updateClient
PlayerList e (Lcom/mojang/authlib/GameProfile;)Z isWhitelisted
PlayerList f ()LGameProfileBanList; getProfileBans
PlayerList f maxPlayers
PlayerList g ()LIpBanList; getIPBans
PlayerList g (Lcom/mojang/authlib/GameProfile;)LEntityPlayer; processLogin
PlayerList h ()V savePlayers
PlayerList h (Lcom/mojang/authlib/GameProfile;)Z isOp
PlayerList h server
PlayerList i ()LWhiteList; getWhitelist
PlayerList i players
PlayerList j ()[Ljava/lang/String; getWhitelisted
PlayerList k ()LOpList; getOPs
PlayerList m ()I getPlayerCount
PlayerList m operators
PlayerList n ()I getMaxPlayers
PlayerList n whitelist
PlayerList o ()Z getHasWhitelist
PlayerList p ()I getViewDistance
PlayerList q ()LNBTTagCompound; save
PlayerList q playerFileData
PlayerList r ()V shutdown
PlayerList r hasWhitelist
PlayerList s ()Ljava/util/List; getPlayers
PlayerList t ()V reload
PlayerList t viewDistance
PlayerListBox a ()V tick
PointGroupO A INVERT_Y
PointGroupO B INVERT_Z
PointGroupO C ROT_60_REF_NNN
PointGroupO D ROT_60_REF_NNP
PointGroupO E ROT_60_REF_NPN
PointGroupO F ROT_60_REF_NPP
PointGroupO G ROT_60_REF_PNN
PointGroupO H ROT_60_REF_PNP
PointGroupO I ROT_60_REF_PPN
PointGroupO J ROT_60_REF_PPP
PointGroupO K SWAP_XY
PointGroupO L SWAP_YZ
PointGroupO M SWAP_XZ
PointGroupO N SWAP_NEG_XY
PointGroupO O SWAP_NEG_YZ
PointGroupO P SWAP_NEG_XZ
PointGroupO Q ROT_90_REF_X_NEG
PointGroupO R ROT_90_REF_X_POS
PointGroupO S ROT_90_REF_Y_NEG
PointGroupO T ROT_90_REF_Y_POS
PointGroupO U ROT_90_REF_Z_NEG
PointGroupO V ROT_90_REF_Z_POS
PointGroupO a IDENTITY
PointGroupO b ROT_180_FACE_XY
PointGroupO c ROT_180_FACE_XZ
PointGroupO d ROT_180_FACE_YZ
PointGroupO e ROT_120_NNN
PointGroupO f ROT_120_NNP
PointGroupO g ROT_120_NPN
PointGroupO h ROT_120_NPP
PointGroupO i ROT_120_PNN
PointGroupO j ROT_120_PNP
PointGroupO k ROT_120_PPN
PointGroupO l ROT_120_PPP
PointGroupO m ROT_180_EDGE_XY_NEG
PointGroupO n ROT_180_EDGE_XY_POS
PointGroupO o ROT_180_EDGE_XZ_NEG
PointGroupO p ROT_180_EDGE_XZ_POS
PointGroupO q ROT_180_EDGE_YZ_NEG
PointGroupO r ROT_180_EDGE_YZ_POS
PointGroupO s ROT_90_X_NEG
PointGroupO t ROT_90_X_POS
PointGroupO u ROT_90_Y_NEG
PointGroupO v ROT_90_Y_POS
PointGroupO w ROT_90_Z_NEG
PointGroupO x ROT_90_Z_POS
PointGroupO y INVERSION
PointGroupO z INVERT_X
PointGroupS a P123
PointGroupS b P213
PointGroupS c P132
PointGroupS d P231
PointGroupS e P312
PointGroupS f P321
PortalTravelAgent a (LEntity;)Z createPortal
PortalTravelAgent a (LEntity;F)Z findAndTeleport
PortalTravelAgent a world
PotionUtil a (LItemStack;)Ljava/util/List; getEffects
Potions A STRONG_HEALING
Potions B HARMING
Potions C STRONG_HARMING
Potions D POISON
Potions E LONG_POISON
Potions F STRONG_POISON
Potions G REGENERATION
Potions H LONG_REGENERATION
Potions I STRONG_REGENERATION
Potions J STRENGTH
Potions K LONG_STRENGTH
Potions L STRONG_STRENGTH
Potions M WEAKNESS
Potions N LONG_WEAKNESS
Potions O LUCK
Potions P SLOW_FALLING
Potions Q LONG_SLOW_FALLING
Potions a EMPTY
Potions b WATER
Potions c MUNDANE
Potions d THICK
Potions e AWKWARD
Potions f NIGHT_VISION
Potions g LONG_NIGHT_VISION
Potions h INVISIBILITY
Potions i LONG_INVISIBILITY
Potions j LEAPING
Potions k LONG_LEAPING
Potions l STRONG_LEAPING
Potions m FIRE_RESISTANCE
Potions n LONG_FIRE_RESISTANCE
Potions o SWIFTNESS
Potions p LONG_SWIFTNESS
Potions q STRONG_SWIFTNESS
Potions r SLOWNESS
Potions s LONG_SLOWNESS
Potions t STRONG_SLOWNESS
Potions u TURTLE_MASTER
Potions v LONG_TURTLE_MASTER
Potions w STRONG_TURTLE_MASTER
Potions x WATER_BREATHING
Potions y LONG_WATER_BREATHING
Potions z HEALING
PropertyManager a (Ljava/lang/String;I)I getInt
PropertyManager a (Ljava/lang/String;J)J getLong
PropertyManager a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getString
PropertyManager a (Ljava/lang/String;Z)Z getBoolean
PropertyManager b (Ljava/nio/file/Path;)Ljava/util/Properties; loadPropertiesFile
PropertyManager b (Ljava/util/Properties;)LPropertyManager; reload
PropertyManager b properties
PropertyManager c (Ljava/nio/file/Path;)V savePropertiesFile
PropertyManager$EditableProperty a (Ljava/lang/Object;)LPropertyManager; set
Raid d ()Z isStopped
Raid e ()Z isVictory
Raid f ()Z isLoss
Raid g raiders
Raid h heroes
Raid i ()LWorld; getWorld
Raid i ticksActive
Raid j ()Z isStarted
Raid j center
Raid k ()I getGroupsSpawned
Raid k world
Raid l ()I getMaxBadOmenLevel
Raid l started
Raid m ()I getBadOmenLevel
Raid m id
Raid n ()V stop
Raid n totalHealth
Raid o badOmenLevel
Raid p ()V updateProgress
Raid p active
Raid q ()F sumMobHealth
Raid q groupsSpawned
Raid r bossBattle
Raid s postRaidTicks
Raid t ()LBlockPosition; getCenter
Raid t preRaidTicks
Raid u ()I getId
Raid u random
Raid v numGroups
Raid w status
Raid$Status a ONGOING
Raid$Status b VICTORY
Raid$Status c LOSS
Raid$Status d STOPPED
Raid$Wave a VINDICATOR
Raid$Wave b EVOKER
Raid$Wave c PILLAGER
Raid$Wave d WITCH
Raid$Wave e RAVAGER
RayTrace$BlockCollisionOption a COLLIDER
RayTrace$BlockCollisionOption b OUTLINE
RayTrace$BlockCollisionOption c VISUAL
RayTrace$FluidCollisionOption a NONE
RayTrace$FluidCollisionOption b SOURCE_ONLY
RayTrace$FluidCollisionOption c ANY
RayTrace$FluidCollisionOption d predicate
RecipeBookServer i ()LNBTTagCompound; save
RecipeCooking b ()F getExperience
RecipeCooking b key
RecipeCooking c group
RecipeCooking d ingredient
RecipeCooking e ()I getCookingTime
RecipeCooking e result
RecipeCooking f experience
RecipeCooking g cookingTime
RecipeItemStack c choices
RecipeItemStack f ()V buildChoices
RecipeSingleItem a ingredient
RecipeSingleItem b result
RecipeSingleItem c key
RecipeSingleItem d group
Recipes a CRAFTING
Recipes b SMELTING
Recipes c BLASTING
Recipes d SMOKING
Recipes e CAMPFIRE_COOKING
Recipes f STONECUTTING
Recipes g SMITHING
RegionFile c dataFile
RegionFile close ()V close
RegionFile d (LChunkCoordIntPair;)Z chunkExists
RegionFile f (LChunkCoordIntPair;)I getOffset
RegionFile i freeSectors
RegionFileCache a (LChunkCoordIntPair;)LNBTTagCompound; read
RegionFileCache a (LChunkCoordIntPair;LNBTTagCompound;)V write
RegionFileCache a cache
RegionFileCache b (LChunkCoordIntPair;)LRegionFile; getFile
Registry a (I)Ljava/lang/Object; fromId
RegistryBlockID a (I)Ljava/lang/Object; fromId
RegistryBlockID a (Ljava/lang/Object;)I getId
RegistryID a (I)Ljava/lang/Object; fromId
RegistryID a (Ljava/lang/Object;)I getId
RemoteControlCommandListener c buffer
RemoteControlCommandListener d ()V clearMessages
RemoteControlCommandListener d server
RemoteControlCommandListener e ()Ljava/lang/String; getMessages
RemoteControlCommandListener f ()LCommandListenerWrapper; getWrapper
RemoteStatusListener$RemoteStatusChallenge a time
RemoteStatusListener$RemoteStatusChallenge b token
RemoteStatusListener$RemoteStatusChallenge c identity
ReputationType a MAJOR_NEGATIVE
ReputationType b MINOR_NEGATIVE
ReputationType c MINOR_POSITIVE
ReputationType d MAJOR_POSITIVE
ReputationType e TRADING
ResourcePackLoader$Position a TOP
ResourcePackLoader$Position b BOTTOM
ResourcePackSourceFolder b file
SaddleStorage a (Z)V setSaddle
SaddleStorage b ()Z hasSaddle
SaveData D ()LNBTTagCompound; getCustomBossEvents
SaveData a (LEnumDifficulty;)V setDifficulty
SaveData a (LEnumGamemode;)V setGameType
SaveData b (LNBTTagCompound;)V setCustomBossEvents
SaveData f ()Ljava/lang/String; getName
SaveData l ()LEnumGamemode; getGameType
SaveData m ()Z isHardcore
SaveData r ()LEnumDifficulty; getDifficulty
SaveData s ()Z isDifficultyLocked
SaveData z ()LGeneratorSettings; getGeneratorSettings
SavedFile a ADVANCEMENTS
SavedFile b STATS
SavedFile c PLAYERDATA
SavedFile d PLAYERS
SavedFile e LEVEL_DAT
SavedFile f GENERATED
SavedFile g DATAPACKS
SavedFile h RESOURCES_ZIP
SavedFile i ROOT
Schedule a EMPTY
Schedule b SIMPLE
Schedule c VILLAGER_BABY
Schedule d VILLAGER_DEFAULT
Scoreboard a (I)LScoreboardObjective; getObjectiveForSlot
Scoreboard a (ILScoreboardObjective;)V setDisplaySlot
Scoreboard a (LIScoreboardCriteria;Ljava/lang/String;Ljava/util/function/Consumer;)V getObjectivesForCriteria
Scoreboard a (LScoreboardObjective;)V handleObjectiveAdded
Scoreboard a (LScoreboardScore;)V handleScoreChanged
Scoreboard a (LScoreboardTeam;)V handleTeamAdded
Scoreboard a (Ljava/lang/String;)V handlePlayerRemoved
Scoreboard a (Ljava/lang/String;LIScoreboardCriteria;LIChatBaseComponent;LIScoreboardCriteria$EnumScoreboardHealthDisplay;)LScoreboardObjective; registerObjective
Scoreboard a (Ljava/lang/String;LScoreboardTeam;)Z addPlayerToTeam
Scoreboard a objectivesByName
Scoreboard b (I)Ljava/lang/String; getSlotName
Scoreboard b (LScoreboardObjective;)V handleObjectiveChanged
Scoreboard b (LScoreboardTeam;)V handleTeamChanged
Scoreboard b (Ljava/lang/String;LScoreboardTeam;)V removePlayerFromTeam
Scoreboard b objectivesByCriteria
Scoreboard c ()Ljava/util/Collection; getObjectives
Scoreboard c (LScoreboardObjective;)V handleObjectiveRemoved
Scoreboard c (LScoreboardTeam;)V handleTeamRemoved
Scoreboard c (Ljava/lang/String;LScoreboardObjective;)LScoreboardScore; getPlayerScoreForObjective
Scoreboard c playerScores
Scoreboard d (LScoreboardTeam;)V removeTeam
Scoreboard d (Ljava/lang/String;)LScoreboardObjective; getObjective
Scoreboard d (Ljava/lang/String;LScoreboardObjective;)V resetPlayerScores
Scoreboard d displaySlots
Scoreboard e ()Ljava/util/Collection; getPlayers
Scoreboard e (Ljava/lang/String;)Ljava/util/Map; getPlayerObjectives
Scoreboard e teamsByName
Scoreboard f (Ljava/lang/String;)LScoreboardTeam; getTeam
Scoreboard f teamsByPlayer
Scoreboard g ()Ljava/util/Collection; getTeams
Scoreboard g (Ljava/lang/String;)LScoreboardTeam; createTeam
Scoreboard h (Ljava/lang/String;)Z removePlayerFromTeam
Scoreboard i (LScoreboardObjective;)Ljava/util/Collection; getScoresForObjective
Scoreboard i (Ljava/lang/String;)LScoreboardTeam; getPlayerTeam
Scoreboard j (LScoreboardObjective;)V unregisterObjective
Scoreboard j (Ljava/lang/String;)I getSlotForName
ScoreboardObjective a (LIChatBaseComponent;)V setDisplayName
ScoreboardObjective a (LIScoreboardCriteria$EnumScoreboardHealthDisplay;)V setRenderType
ScoreboardObjective b ()Ljava/lang/String; getName
ScoreboardObjective c ()LIScoreboardCriteria; getCriteria
ScoreboardObjective d ()LIChatBaseComponent; getDisplayName
ScoreboardObjective d displayName
ScoreboardObjective f ()LIScoreboardCriteria$EnumScoreboardHealthDisplay; getRenderType
ScoreboardScore a ()V incrementScore
ScoreboardScore a (I)V addScore
ScoreboardScore b ()I getScore
ScoreboardScore c (I)V setScore
ScoreboardScore d ()LScoreboardObjective; getObjective
ScoreboardScore d playerName
ScoreboardScore e ()Ljava/lang/String; getPlayerName
ScoreboardScore e score
ScoreboardServer d (LScoreboardObjective;)Ljava/util/List; getScoreboardScorePacketsForObjective
ScoreboardServer$Action a CHANGE
ScoreboardServer$Action b REMOVE
ScoreboardTeam a (LEnumChatFormat;)V setColor
ScoreboardTeam a (LIChatBaseComponent;)V setDisplayName
ScoreboardTeam a (LScoreboardTeamBase$EnumNameTagVisibility;)V setNameTagVisibility
ScoreboardTeam a (LScoreboardTeamBase$EnumTeamPush;)V setCollisionRule
ScoreboardTeam a (Z)V setAllowFriendlyFire
ScoreboardTeam b (LIChatBaseComponent;)V setPrefix
ScoreboardTeam b (LScoreboardTeamBase$EnumNameTagVisibility;)V setDeathMessageVisibility
ScoreboardTeam b (Z)V setCanSeeFriendlyInvisibles
ScoreboardTeam c ()LIChatBaseComponent; getDisplayName
ScoreboardTeam c (LIChatBaseComponent;)V setSuffix
ScoreboardTeam e ()LIChatBaseComponent; getPrefix
ScoreboardTeam f ()LIChatBaseComponent; getSuffix
ScoreboardTeam i ()Z canSeeFriendlyInvisibles
ScoreboardTeam j ()LScoreboardTeamBase$EnumNameTagVisibility; getNameTagVisibility
ScoreboardTeam m ()I packOptionData
ScoreboardTeam n ()LEnumChatFormat; getColor
ScoreboardTeamBase a (LScoreboardTeamBase;)Z isAlly
ScoreboardTeamBase b ()Ljava/lang/String; getName
ScoreboardTeamBase d (LIChatBaseComponent;)LIChatMutableComponent; getFormattedName
ScoreboardTeamBase g ()Ljava/util/Collection; getPlayerNameSet
ScoreboardTeamBase h ()Z allowFriendlyFire
ScoreboardTeamBase k ()LScoreboardTeamBase$EnumNameTagVisibility; getDeathMessageVisibility
ScoreboardTeamBase l ()LScoreboardTeamBase$EnumTeamPush; getCollisionRule
ScoreboardTeamBase$EnumNameTagVisibility a ALWAYS
ScoreboardTeamBase$EnumNameTagVisibility b NEVER
ScoreboardTeamBase$EnumNameTagVisibility c HIDE_FOR_OTHER_TEAMS
ScoreboardTeamBase$EnumNameTagVisibility d HIDE_FOR_OWN_TEAM
ScoreboardTeamBase$EnumTeamPush a ALWAYS
ScoreboardTeamBase$EnumTeamPush b NEVER
ScoreboardTeamBase$EnumTeamPush c PUSH_OTHER_TEAMS
ScoreboardTeamBase$EnumTeamPush d PUSH_OWN_TEAM
ServerCommand a command
ServerCommand b source
ServerConnection f listeningChannels
ServerConnection g connectedChannels
ServerPing a (LIChatBaseComponent;)V setMOTD
ServerPing a (LServerPing$ServerData;)V setServerInfo
ServerPing a (LServerPing$ServerPingPlayerSample;)V setPlayerSample
ServerPing a (Ljava/lang/String;)V setFavicon
ServerPing c ()LServerPing$ServerData; getServerData
ServerPing$ServerData b ()I getProtocolVersion
ServerStatisticManager a ()V save
ShapeDetector$Shape a position
ShapeDetector$Shape b velocity
ShapeDetector$Shape c yaw
ShapeDetector$ShapeDetectorCollection b ()LEnumDirection; getFacing
ShapeDetectorBlock d ()LBlockPosition; getPosition
ShapedRecipes a width
ShapedRecipes b height
ShapedRecipes c items
ShapedRecipes d result
ShapedRecipes e key
ShapedRecipes f group
ShapelessRecipes a key
ShapelessRecipes b group
ShapelessRecipes c result
ShapelessRecipes d ingredients
SharedConstants a ()Lcom/mojang/bridge/game/GameVersion; getGameVersion
SharedConstants a (C)Z isAllowedChatCharacter
SharedConstants e allowedCharacters
Slot a ()I getMaxStackSize
Slot a (LEntityHuman;)Z isAllowed
Slot a (LItemStack;)Z isAllowed
Slot a index
Slot b (LItemStack;)I getMaxStackSize
Slot c inventory
Slot d (LItemStack;)V set
Slot d rawSlotIndex
Slot e ()LItemStack; getItem
Slot f ()Z hasItem
SoundCategory a MASTER
SoundCategory b MUSIC
SoundCategory c RECORDS
SoundCategory d WEATHER
SoundCategory e BLOCKS
SoundCategory f HOSTILE
SoundCategory g NEUTRAL
SoundCategory h PLAYERS
SoundCategory i AMBIENT
SoundCategory j VOICE
SoundEffects A BLOCK_ANCIENT_DEBRIS_FALL
SoundEffects B BLOCK_ANVIL_BREAK
SoundEffects C BLOCK_ANVIL_DESTROY
SoundEffects D BLOCK_ANVIL_FALL
SoundEffects E BLOCK_ANVIL_HIT
SoundEffects F BLOCK_ANVIL_LAND
SoundEffects G BLOCK_ANVIL_PLACE
SoundEffects H BLOCK_ANVIL_STEP
SoundEffects I BLOCK_ANVIL_USE
SoundEffects J ITEM_ARMOR_EQUIP_CHAIN
SoundEffects K ITEM_ARMOR_EQUIP_DIAMOND
SoundEffects L ITEM_ARMOR_EQUIP_ELYTRA
SoundEffects M ITEM_ARMOR_EQUIP_GENERIC
SoundEffects N ITEM_ARMOR_EQUIP_GOLD
SoundEffects O ITEM_ARMOR_EQUIP_IRON
SoundEffects P ITEM_ARMOR_EQUIP_LEATHER
SoundEffects Q ITEM_ARMOR_EQUIP_NETHERITE
SoundEffects R ITEM_ARMOR_EQUIP_TURTLE
SoundEffects S ENTITY_ARMOR_STAND_BREAK
SoundEffects T ENTITY_ARMOR_STAND_FALL
SoundEffects U ENTITY_ARMOR_STAND_HIT
SoundEffects V ENTITY_ARMOR_STAND_PLACE
SoundEffects W ENTITY_ARROW_HIT
SoundEffects X ENTITY_ARROW_HIT_PLAYER
SoundEffects Y ENTITY_ARROW_SHOOT
SoundEffects Z ITEM_AXE_STRIP
SoundEffects a AMBIENT_CAVE
SoundEffects aA ENTITY_BEE_LOOP_AGGRESSIVE
SoundEffects aB ENTITY_BEE_LOOP
SoundEffects aC ENTITY_BEE_STING
SoundEffects aD ENTITY_BEE_POLLINATE
SoundEffects aE BLOCK_BEEHIVE_DRIP
SoundEffects aF BLOCK_BEEHIVE_ENTER
SoundEffects aG BLOCK_BEEHIVE_EXIT
SoundEffects aH BLOCK_BEEHIVE_SHEAR
SoundEffects aI BLOCK_BEEHIVE_WORK
SoundEffects aJ BLOCK_BELL_USE
SoundEffects aK BLOCK_BELL_RESONATE
SoundEffects aL ENTITY_BLAZE_AMBIENT
SoundEffects aM ENTITY_BLAZE_BURN
SoundEffects aN ENTITY_BLAZE_DEATH
SoundEffects aO ENTITY_BLAZE_HURT
SoundEffects aP ENTITY_BLAZE_SHOOT
SoundEffects aQ ENTITY_BOAT_PADDLE_LAND
SoundEffects aR ENTITY_BOAT_PADDLE_WATER
SoundEffects aS BLOCK_BONE_BLOCK_BREAK
SoundEffects aT BLOCK_BONE_BLOCK_FALL
SoundEffects aU BLOCK_BONE_BLOCK_HIT
SoundEffects aV BLOCK_BONE_BLOCK_PLACE
SoundEffects aW BLOCK_BONE_BLOCK_STEP
SoundEffects aX ITEM_BOOK_PAGE_TURN
SoundEffects aY ITEM_BOOK_PUT
SoundEffects aZ BLOCK_BLASTFURNACE_FIRE_CRACKLE
SoundEffects aa BLOCK_BAMBOO_BREAK
SoundEffects ab BLOCK_BAMBOO_FALL
SoundEffects ac BLOCK_BAMBOO_HIT
SoundEffects ad BLOCK_BAMBOO_PLACE
SoundEffects ae BLOCK_BAMBOO_STEP
SoundEffects af BLOCK_BAMBOO_SAPLING_BREAK
SoundEffects ag BLOCK_BAMBOO_SAPLING_HIT
SoundEffects ah BLOCK_BAMBOO_SAPLING_PLACE
SoundEffects ai BLOCK_BARREL_CLOSE
SoundEffects aj BLOCK_BARREL_OPEN
SoundEffects ak BLOCK_BASALT_BREAK
SoundEffects al BLOCK_BASALT_STEP
SoundEffects am BLOCK_BASALT_PLACE
SoundEffects an BLOCK_BASALT_HIT
SoundEffects ao BLOCK_BASALT_FALL
SoundEffects ap ENTITY_BAT_AMBIENT
SoundEffects aq ENTITY_BAT_DEATH
SoundEffects ar ENTITY_BAT_HURT
SoundEffects as ENTITY_BAT_LOOP
SoundEffects at ENTITY_BAT_TAKEOFF
SoundEffects au BLOCK_BEACON_ACTIVATE
SoundEffects av BLOCK_BEACON_AMBIENT
SoundEffects aw BLOCK_BEACON_DEACTIVATE
SoundEffects ax BLOCK_BEACON_POWER_SELECT
SoundEffects ay ENTITY_BEE_DEATH
SoundEffects az ENTITY_BEE_HURT
SoundEffects b AMBIENT_BASALT_DELTAS_ADDITIONS
SoundEffects bA BLOCK_CHAIN_FALL
SoundEffects bB BLOCK_CHAIN_HIT
SoundEffects bC BLOCK_CHAIN_PLACE
SoundEffects bD BLOCK_CHAIN_STEP
SoundEffects bE BLOCK_CHEST_CLOSE
SoundEffects bF BLOCK_CHEST_LOCKED
SoundEffects bG BLOCK_CHEST_OPEN
SoundEffects bH ENTITY_CHICKEN_AMBIENT
SoundEffects bI ENTITY_CHICKEN_DEATH
SoundEffects bJ ENTITY_CHICKEN_EGG
SoundEffects bK ENTITY_CHICKEN_HURT
SoundEffects bL ENTITY_CHICKEN_STEP
SoundEffects bM BLOCK_CHORUS_FLOWER_DEATH
SoundEffects bN BLOCK_CHORUS_FLOWER_GROW
SoundEffects bO ITEM_CHORUS_FRUIT_TELEPORT
SoundEffects bP ENTITY_COD_AMBIENT
SoundEffects bQ ENTITY_COD_DEATH
SoundEffects bR ENTITY_COD_FLOP
SoundEffects bS ENTITY_COD_HURT
SoundEffects bT BLOCK_COMPARATOR_CLICK
SoundEffects bU BLOCK_COMPOSTER_EMPTY
SoundEffects bV BLOCK_COMPOSTER_FILL
SoundEffects bW BLOCK_COMPOSTER_FILL_SUCCESS
SoundEffects bX BLOCK_COMPOSTER_READY
SoundEffects bY BLOCK_CONDUIT_ACTIVATE
SoundEffects bZ BLOCK_CONDUIT_AMBIENT
SoundEffects ba ITEM_BOTTLE_EMPTY
SoundEffects bb ITEM_BOTTLE_FILL
SoundEffects bc ITEM_BOTTLE_FILL_DRAGONBREATH
SoundEffects bd BLOCK_BREWING_STAND_BREW
SoundEffects be BLOCK_BUBBLE_COLUMN_BUBBLE_POP
SoundEffects bf BLOCK_BUBBLE_COLUMN_UPWARDS_AMBIENT
SoundEffects bg BLOCK_BUBBLE_COLUMN_UPWARDS_INSIDE
SoundEffects bh BLOCK_BUBBLE_COLUMN_WHIRLPOOL_AMBIENT
SoundEffects bi BLOCK_BUBBLE_COLUMN_WHIRLPOOL_INSIDE
SoundEffects bj ITEM_BUCKET_EMPTY
SoundEffects bk ITEM_BUCKET_EMPTY_FISH
SoundEffects bl ITEM_BUCKET_EMPTY_LAVA
SoundEffects bm ITEM_BUCKET_FILL
SoundEffects bn ITEM_BUCKET_FILL_FISH
SoundEffects bo ITEM_BUCKET_FILL_LAVA
SoundEffects bp BLOCK_CAMPFIRE_CRACKLE
SoundEffects bq ENTITY_CAT_AMBIENT
SoundEffects br ENTITY_CAT_STRAY_AMBIENT
SoundEffects bs ENTITY_CAT_DEATH
SoundEffects bt ENTITY_CAT_EAT
SoundEffects bu ENTITY_CAT_HISS
SoundEffects bv ENTITY_CAT_BEG_FOR_FOOD
SoundEffects bw ENTITY_CAT_HURT
SoundEffects bx ENTITY_CAT_PURR
SoundEffects by ENTITY_CAT_PURREOW
SoundEffects bz BLOCK_CHAIN_BREAK
SoundEffects c AMBIENT_BASALT_DELTAS_LOOP
SoundEffects cA BLOCK_DISPENSER_DISPENSE
SoundEffects cB BLOCK_DISPENSER_FAIL
SoundEffects cC BLOCK_DISPENSER_LAUNCH
SoundEffects cD ENTITY_DOLPHIN_AMBIENT
SoundEffects cE ENTITY_DOLPHIN_AMBIENT_WATER
SoundEffects cF ENTITY_DOLPHIN_ATTACK
SoundEffects cG ENTITY_DOLPHIN_DEATH
SoundEffects cH ENTITY_DOLPHIN_EAT
SoundEffects cI ENTITY_DOLPHIN_HURT
SoundEffects cJ ENTITY_DOLPHIN_JUMP
SoundEffects cK ENTITY_DOLPHIN_PLAY
SoundEffects cL ENTITY_DOLPHIN_SPLASH
SoundEffects cM ENTITY_DOLPHIN_SWIM
SoundEffects cN ENTITY_DONKEY_AMBIENT
SoundEffects cO ENTITY_DONKEY_ANGRY
SoundEffects cP ENTITY_DONKEY_CHEST
SoundEffects cQ ENTITY_DONKEY_DEATH
SoundEffects cR ENTITY_DONKEY_EAT
SoundEffects cS ENTITY_DONKEY_HURT
SoundEffects cT ENTITY_DROWNED_AMBIENT
SoundEffects cU ENTITY_DROWNED_AMBIENT_WATER
SoundEffects cV ENTITY_DROWNED_DEATH
SoundEffects cW ENTITY_DROWNED_DEATH_WATER
SoundEffects cX ENTITY_DROWNED_HURT
SoundEffects cY ENTITY_DROWNED_HURT_WATER
SoundEffects cZ ENTITY_DROWNED_SHOOT
SoundEffects ca BLOCK_CONDUIT_AMBIENT_SHORT
SoundEffects cb BLOCK_CONDUIT_ATTACK_TARGET
SoundEffects cc BLOCK_CONDUIT_DEACTIVATE
SoundEffects cd BLOCK_CORAL_BLOCK_BREAK
SoundEffects ce BLOCK_CORAL_BLOCK_FALL
SoundEffects cf BLOCK_CORAL_BLOCK_HIT
SoundEffects cg BLOCK_CORAL_BLOCK_PLACE
SoundEffects ch BLOCK_CORAL_BLOCK_STEP
SoundEffects ci ENTITY_COW_AMBIENT
SoundEffects cj ENTITY_COW_DEATH
SoundEffects ck ENTITY_COW_HURT
SoundEffects cl ENTITY_COW_MILK
SoundEffects cm ENTITY_COW_STEP
SoundEffects cn ENTITY_CREEPER_DEATH
SoundEffects co ENTITY_CREEPER_HURT
SoundEffects cp ENTITY_CREEPER_PRIMED
SoundEffects cq BLOCK_CROP_BREAK
SoundEffects cr ITEM_CROP_PLANT
SoundEffects cs ITEM_CROSSBOW_HIT
SoundEffects ct ITEM_CROSSBOW_LOADING_END
SoundEffects cu ITEM_CROSSBOW_LOADING_MIDDLE
SoundEffects cv ITEM_CROSSBOW_LOADING_START
SoundEffects cw ITEM_CROSSBOW_QUICK_CHARGE_1
SoundEffects cx ITEM_CROSSBOW_QUICK_CHARGE_2
SoundEffects cy ITEM_CROSSBOW_QUICK_CHARGE_3
SoundEffects cz ITEM_CROSSBOW_SHOOT
SoundEffects d AMBIENT_BASALT_DELTAS_MOOD
SoundEffects dA ENTITY_ENDERMAN_HURT
SoundEffects dB ENTITY_ENDERMAN_SCREAM
SoundEffects dC ENTITY_ENDERMAN_STARE
SoundEffects dD ENTITY_ENDERMAN_TELEPORT
SoundEffects dE ENTITY_ENDERMITE_AMBIENT
SoundEffects dF ENTITY_ENDERMITE_DEATH
SoundEffects dG ENTITY_ENDERMITE_HURT
SoundEffects dH ENTITY_ENDERMITE_STEP
SoundEffects dI ENTITY_ENDER_PEARL_THROW
SoundEffects dJ BLOCK_END_GATEWAY_SPAWN
SoundEffects dK BLOCK_END_PORTAL_FRAME_FILL
SoundEffects dL BLOCK_END_PORTAL_SPAWN
SoundEffects dM ENTITY_EVOKER_AMBIENT
SoundEffects dN ENTITY_EVOKER_CAST_SPELL
SoundEffects dO ENTITY_EVOKER_CELEBRATE
SoundEffects dP ENTITY_EVOKER_DEATH
SoundEffects dQ ENTITY_EVOKER_FANGS_ATTACK
SoundEffects dR ENTITY_EVOKER_HURT
SoundEffects dS ENTITY_EVOKER_PREPARE_ATTACK
SoundEffects dT ENTITY_EVOKER_PREPARE_SUMMON
SoundEffects dU ENTITY_EVOKER_PREPARE_WOLOLO
SoundEffects dV ENTITY_EXPERIENCE_BOTTLE_THROW
SoundEffects dW ENTITY_EXPERIENCE_ORB_PICKUP
SoundEffects dX BLOCK_FENCE_GATE_CLOSE
SoundEffects dY BLOCK_FENCE_GATE_OPEN
SoundEffects dZ ITEM_FIRECHARGE_USE
SoundEffects da ENTITY_DROWNED_STEP
SoundEffects db ENTITY_DROWNED_SWIM
SoundEffects dc ENTITY_EGG_THROW
SoundEffects dd ENTITY_ELDER_GUARDIAN_AMBIENT
SoundEffects de ENTITY_ELDER_GUARDIAN_AMBIENT_LAND
SoundEffects df ENTITY_ELDER_GUARDIAN_CURSE
SoundEffects dg ENTITY_ELDER_GUARDIAN_DEATH
SoundEffects dh ENTITY_ELDER_GUARDIAN_DEATH_LAND
SoundEffects di ENTITY_ELDER_GUARDIAN_FLOP
SoundEffects dj ENTITY_ELDER_GUARDIAN_HURT
SoundEffects dk ENTITY_ELDER_GUARDIAN_HURT_LAND
SoundEffects dl ITEM_ELYTRA_FLYING
SoundEffects dm BLOCK_ENCHANTMENT_TABLE_USE
SoundEffects dn BLOCK_ENDER_CHEST_CLOSE
SoundEffects do BLOCK_ENDER_CHEST_OPEN
SoundEffects dp ENTITY_ENDER_DRAGON_AMBIENT
SoundEffects dq ENTITY_ENDER_DRAGON_DEATH
SoundEffects dr ENTITY_DRAGON_FIREBALL_EXPLODE
SoundEffects ds ENTITY_ENDER_DRAGON_FLAP
SoundEffects dt ENTITY_ENDER_DRAGON_GROWL
SoundEffects du ENTITY_ENDER_DRAGON_HURT
SoundEffects dv ENTITY_ENDER_DRAGON_SHOOT
SoundEffects dw ENTITY_ENDER_EYE_DEATH
SoundEffects dx ENTITY_ENDER_EYE_LAUNCH
SoundEffects dy ENTITY_ENDERMAN_AMBIENT
SoundEffects dz ENTITY_ENDERMAN_DEATH
SoundEffects e AMBIENT_CRIMSON_FOREST_ADDITIONS
SoundEffects eA BLOCK_ROOTS_BREAK
SoundEffects eB BLOCK_ROOTS_STEP
SoundEffects eC BLOCK_ROOTS_PLACE
SoundEffects eD BLOCK_ROOTS_HIT
SoundEffects eE BLOCK_ROOTS_FALL
SoundEffects eF BLOCK_FURNACE_FIRE_CRACKLE
SoundEffects eG ENTITY_GENERIC_BIG_FALL
SoundEffects eH ENTITY_GENERIC_BURN
SoundEffects eI ENTITY_GENERIC_DEATH
SoundEffects eJ ENTITY_GENERIC_DRINK
SoundEffects eK ENTITY_GENERIC_EAT
SoundEffects eL ENTITY_GENERIC_EXPLODE
SoundEffects eM ENTITY_GENERIC_EXTINGUISH_FIRE
SoundEffects eN ENTITY_GENERIC_HURT
SoundEffects eO ENTITY_GENERIC_SMALL_FALL
SoundEffects eP ENTITY_GENERIC_SPLASH
SoundEffects eQ ENTITY_GENERIC_SWIM
SoundEffects eR ENTITY_GHAST_AMBIENT
SoundEffects eS ENTITY_GHAST_DEATH
SoundEffects eT ENTITY_GHAST_HURT
SoundEffects eU ENTITY_GHAST_SCREAM
SoundEffects eV ENTITY_GHAST_SHOOT
SoundEffects eW ENTITY_GHAST_WARN
SoundEffects eX BLOCK_GILDED_BLACKSTONE_BREAK
SoundEffects eY BLOCK_GILDED_BLACKSTONE_FALL
SoundEffects eZ BLOCK_GILDED_BLACKSTONE_HIT
SoundEffects ea ENTITY_FIREWORK_ROCKET_BLAST
SoundEffects eb ENTITY_FIREWORK_ROCKET_BLAST_FAR
SoundEffects ec ENTITY_FIREWORK_ROCKET_LARGE_BLAST
SoundEffects ed ENTITY_FIREWORK_ROCKET_LARGE_BLAST_FAR
SoundEffects ee ENTITY_FIREWORK_ROCKET_LAUNCH
SoundEffects ef ENTITY_FIREWORK_ROCKET_SHOOT
SoundEffects eg ENTITY_FIREWORK_ROCKET_TWINKLE
SoundEffects eh ENTITY_FIREWORK_ROCKET_TWINKLE_FAR
SoundEffects ei BLOCK_FIRE_AMBIENT
SoundEffects ej BLOCK_FIRE_EXTINGUISH
SoundEffects ek ENTITY_FISH_SWIM
SoundEffects el ENTITY_FISHING_BOBBER_RETRIEVE
SoundEffects em ENTITY_FISHING_BOBBER_SPLASH
SoundEffects en ENTITY_FISHING_BOBBER_THROW
SoundEffects eo ITEM_FLINTANDSTEEL_USE
SoundEffects ep ENTITY_FOX_AGGRO
SoundEffects eq ENTITY_FOX_AMBIENT
SoundEffects er ENTITY_FOX_BITE
SoundEffects es ENTITY_FOX_DEATH
SoundEffects et ENTITY_FOX_EAT
SoundEffects eu ENTITY_FOX_HURT
SoundEffects ev ENTITY_FOX_SCREECH
SoundEffects ew ENTITY_FOX_SLEEP
SoundEffects ex ENTITY_FOX_SNIFF
SoundEffects ey ENTITY_FOX_SPIT
SoundEffects ez ENTITY_FOX_TELEPORT
SoundEffects f AMBIENT_CRIMSON_FOREST_LOOP
SoundEffects fA ITEM_HOE_TILL
SoundEffects fB ENTITY_HOGLIN_AMBIENT
SoundEffects fC ENTITY_HOGLIN_ANGRY
SoundEffects fD ENTITY_HOGLIN_ATTACK
SoundEffects fE ENTITY_HOGLIN_CONVERTED_TO_ZOMBIFIED
SoundEffects fF ENTITY_HOGLIN_DEATH
SoundEffects fG ENTITY_HOGLIN_HURT
SoundEffects fH ENTITY_HOGLIN_RETREAT
SoundEffects fI ENTITY_HOGLIN_STEP
SoundEffects fJ BLOCK_HONEY_BLOCK_BREAK
SoundEffects fK BLOCK_HONEY_BLOCK_FALL
SoundEffects fL BLOCK_HONEY_BLOCK_HIT
SoundEffects fM BLOCK_HONEY_BLOCK_PLACE
SoundEffects fN BLOCK_HONEY_BLOCK_SLIDE
SoundEffects fO BLOCK_HONEY_BLOCK_STEP
SoundEffects fP ITEM_HONEY_BOTTLE_DRINK
SoundEffects fQ ENTITY_HORSE_AMBIENT
SoundEffects fR ENTITY_HORSE_ANGRY
SoundEffects fS ENTITY_HORSE_ARMOR
SoundEffects fT ENTITY_HORSE_BREATHE
SoundEffects fU ENTITY_HORSE_DEATH
SoundEffects fV ENTITY_HORSE_EAT
SoundEffects fW ENTITY_HORSE_GALLOP
SoundEffects fX ENTITY_HORSE_HURT
SoundEffects fY ENTITY_HORSE_JUMP
SoundEffects fZ ENTITY_HORSE_LAND
SoundEffects fa BLOCK_GILDED_BLACKSTONE_PLACE
SoundEffects fb BLOCK_GILDED_BLACKSTONE_STEP
SoundEffects fc BLOCK_GLASS_BREAK
SoundEffects fd BLOCK_GLASS_FALL
SoundEffects fe BLOCK_GLASS_HIT
SoundEffects ff BLOCK_GLASS_PLACE
SoundEffects fg BLOCK_GLASS_STEP
SoundEffects fh BLOCK_GRASS_BREAK
SoundEffects fi BLOCK_GRASS_FALL
SoundEffects fj BLOCK_GRASS_HIT
SoundEffects fk BLOCK_GRASS_PLACE
SoundEffects fl BLOCK_GRASS_STEP
SoundEffects fm BLOCK_GRAVEL_BREAK
SoundEffects fn BLOCK_GRAVEL_FALL
SoundEffects fo BLOCK_GRAVEL_HIT
SoundEffects fp BLOCK_GRAVEL_PLACE
SoundEffects fq BLOCK_GRAVEL_STEP
SoundEffects fr BLOCK_GRINDSTONE_USE
SoundEffects fs ENTITY_GUARDIAN_AMBIENT
SoundEffects ft ENTITY_GUARDIAN_AMBIENT_LAND
SoundEffects fu ENTITY_GUARDIAN_ATTACK
SoundEffects fv ENTITY_GUARDIAN_DEATH
SoundEffects fw ENTITY_GUARDIAN_DEATH_LAND
SoundEffects fx ENTITY_GUARDIAN_FLOP
SoundEffects fy ENTITY_GUARDIAN_HURT
SoundEffects fz ENTITY_GUARDIAN_HURT_LAND
SoundEffects g AMBIENT_CRIMSON_FOREST_MOOD
SoundEffects gA ENTITY_IRON_GOLEM_HURT
SoundEffects gB ENTITY_IRON_GOLEM_REPAIR
SoundEffects gC ENTITY_IRON_GOLEM_STEP
SoundEffects gD BLOCK_IRON_TRAPDOOR_CLOSE
SoundEffects gE BLOCK_IRON_TRAPDOOR_OPEN
SoundEffects gF ENTITY_ITEM_FRAME_ADD_ITEM
SoundEffects gG ENTITY_ITEM_FRAME_BREAK
SoundEffects gH ENTITY_ITEM_FRAME_PLACE
SoundEffects gI ENTITY_ITEM_FRAME_REMOVE_ITEM
SoundEffects gJ ENTITY_ITEM_FRAME_ROTATE_ITEM
SoundEffects gK ENTITY_ITEM_BREAK
SoundEffects gL ENTITY_ITEM_PICKUP
SoundEffects gM BLOCK_LADDER_BREAK
SoundEffects gN BLOCK_LADDER_FALL
SoundEffects gO BLOCK_LADDER_HIT
SoundEffects gP BLOCK_LADDER_PLACE
SoundEffects gQ BLOCK_LADDER_STEP
SoundEffects gR BLOCK_LANTERN_BREAK
SoundEffects gS BLOCK_LANTERN_FALL
SoundEffects gT BLOCK_LANTERN_HIT
SoundEffects gU BLOCK_LANTERN_PLACE
SoundEffects gV BLOCK_LANTERN_STEP
SoundEffects gW BLOCK_LAVA_AMBIENT
SoundEffects gX BLOCK_LAVA_EXTINGUISH
SoundEffects gY BLOCK_LAVA_POP
SoundEffects gZ ENTITY_LEASH_KNOT_BREAK
SoundEffects ga ENTITY_HORSE_SADDLE
SoundEffects gb ENTITY_HORSE_STEP
SoundEffects gc ENTITY_HORSE_STEP_WOOD
SoundEffects gd ENTITY_HOSTILE_BIG_FALL
SoundEffects ge ENTITY_HOSTILE_DEATH
SoundEffects gf ENTITY_HOSTILE_HURT
SoundEffects gg ENTITY_HOSTILE_SMALL_FALL
SoundEffects gh ENTITY_HOSTILE_SPLASH
SoundEffects gi ENTITY_HOSTILE_SWIM
SoundEffects gj ENTITY_HUSK_AMBIENT
SoundEffects gk ENTITY_HUSK_CONVERTED_TO_ZOMBIE
SoundEffects gl ENTITY_HUSK_DEATH
SoundEffects gm ENTITY_HUSK_HURT
SoundEffects gn ENTITY_HUSK_STEP
SoundEffects go ENTITY_ILLUSIONER_AMBIENT
SoundEffects gp ENTITY_ILLUSIONER_CAST_SPELL
SoundEffects gq ENTITY_ILLUSIONER_DEATH
SoundEffects gr ENTITY_ILLUSIONER_HURT
SoundEffects gs ENTITY_ILLUSIONER_MIRROR_MOVE
SoundEffects gt ENTITY_ILLUSIONER_PREPARE_BLINDNESS
SoundEffects gu ENTITY_ILLUSIONER_PREPARE_MIRROR
SoundEffects gv BLOCK_IRON_DOOR_CLOSE
SoundEffects gw BLOCK_IRON_DOOR_OPEN
SoundEffects gx ENTITY_IRON_GOLEM_ATTACK
SoundEffects gy ENTITY_IRON_GOLEM_DAMAGE
SoundEffects gz ENTITY_IRON_GOLEM_DEATH
SoundEffects h AMBIENT_NETHER_WASTES_ADDITIONS
SoundEffects hA ENTITY_MAGMA_CUBE_SQUISH_SMALL
SoundEffects hB BLOCK_METAL_BREAK
SoundEffects hC BLOCK_METAL_FALL
SoundEffects hD BLOCK_METAL_HIT
SoundEffects hE BLOCK_METAL_PLACE
SoundEffects hF BLOCK_METAL_PRESSURE_PLATE_CLICK_OFF
SoundEffects hG BLOCK_METAL_PRESSURE_PLATE_CLICK_ON
SoundEffects hH BLOCK_METAL_STEP
SoundEffects hI ENTITY_MINECART_INSIDE
SoundEffects hJ ENTITY_MINECART_RIDING
SoundEffects hK ENTITY_MOOSHROOM_CONVERT
SoundEffects hL ENTITY_MOOSHROOM_EAT
SoundEffects hM ENTITY_MOOSHROOM_MILK
SoundEffects hN ENTITY_MOOSHROOM_SUSPICIOUS_MILK
SoundEffects hO ENTITY_MOOSHROOM_SHEAR
SoundEffects hP ENTITY_MULE_AMBIENT
SoundEffects hQ ENTITY_MULE_ANGRY
SoundEffects hR ENTITY_MULE_CHEST
SoundEffects hS ENTITY_MULE_DEATH
SoundEffects hT ENTITY_MULE_EAT
SoundEffects hU ENTITY_MULE_HURT
SoundEffects hV MUSIC_CREATIVE
SoundEffects hW MUSIC_CREDITS
SoundEffects hX MUSIC_DISC_11
SoundEffects hY MUSIC_DISC_13
SoundEffects hZ MUSIC_DISC_BLOCKS
SoundEffects ha ENTITY_LEASH_KNOT_PLACE
SoundEffects hb BLOCK_LEVER_CLICK
SoundEffects hc ENTITY_LIGHTNING_BOLT_IMPACT
SoundEffects hd ENTITY_LIGHTNING_BOLT_THUNDER
SoundEffects he ENTITY_LINGERING_POTION_THROW
SoundEffects hf ENTITY_LLAMA_AMBIENT
SoundEffects hg ENTITY_LLAMA_ANGRY
SoundEffects hh ENTITY_LLAMA_CHEST
SoundEffects hi ENTITY_LLAMA_DEATH
SoundEffects hj ENTITY_LLAMA_EAT
SoundEffects hk ENTITY_LLAMA_HURT
SoundEffects hl ENTITY_LLAMA_SPIT
SoundEffects hm ENTITY_LLAMA_STEP
SoundEffects hn ENTITY_LLAMA_SWAG
SoundEffects ho ENTITY_MAGMA_CUBE_DEATH_SMALL
SoundEffects hp BLOCK_LODESTONE_BREAK
SoundEffects hq BLOCK_LODESTONE_STEP
SoundEffects hr BLOCK_LODESTONE_PLACE
SoundEffects hs BLOCK_LODESTONE_HIT
SoundEffects ht BLOCK_LODESTONE_FALL
SoundEffects hu ITEM_LODESTONE_COMPASS_LOCK
SoundEffects hv ENTITY_MAGMA_CUBE_DEATH
SoundEffects hw ENTITY_MAGMA_CUBE_HURT
SoundEffects hx ENTITY_MAGMA_CUBE_HURT_SMALL
SoundEffects hy ENTITY_MAGMA_CUBE_JUMP
SoundEffects hz ENTITY_MAGMA_CUBE_SQUISH
SoundEffects i AMBIENT_NETHER_WASTES_LOOP
SoundEffects iA ITEM_NETHER_WART_PLANT
SoundEffects iB BLOCK_STEM_BREAK
SoundEffects iC BLOCK_STEM_STEP
SoundEffects iD BLOCK_STEM_PLACE
SoundEffects iE BLOCK_STEM_HIT
SoundEffects iF BLOCK_STEM_FALL
SoundEffects iG BLOCK_NYLIUM_BREAK
SoundEffects iH BLOCK_NYLIUM_STEP
SoundEffects iI BLOCK_NYLIUM_PLACE
SoundEffects iJ BLOCK_NYLIUM_HIT
SoundEffects iK BLOCK_NYLIUM_FALL
SoundEffects iL BLOCK_NETHER_SPROUTS_BREAK
SoundEffects iM BLOCK_NETHER_SPROUTS_STEP
SoundEffects iN BLOCK_NETHER_SPROUTS_PLACE
SoundEffects iO BLOCK_NETHER_SPROUTS_HIT
SoundEffects iP BLOCK_NETHER_SPROUTS_FALL
SoundEffects iQ BLOCK_FUNGUS_BREAK
SoundEffects iR BLOCK_FUNGUS_STEP
SoundEffects iS BLOCK_FUNGUS_PLACE
SoundEffects iT BLOCK_FUNGUS_HIT
SoundEffects iU BLOCK_FUNGUS_FALL
SoundEffects iV BLOCK_WEEPING_VINES_BREAK
SoundEffects iW BLOCK_WEEPING_VINES_STEP
SoundEffects iX BLOCK_WEEPING_VINES_PLACE
SoundEffects iY BLOCK_WEEPING_VINES_HIT
SoundEffects iZ BLOCK_WEEPING_VINES_FALL
SoundEffects ia MUSIC_DISC_CAT
SoundEffects ib MUSIC_DISC_CHIRP
SoundEffects ic MUSIC_DISC_FAR
SoundEffects id MUSIC_DISC_MALL
SoundEffects ie MUSIC_DISC_MELLOHI
SoundEffects if MUSIC_DISC_PIGSTEP
SoundEffects ig MUSIC_DISC_STAL
SoundEffects ih MUSIC_DISC_STRAD
SoundEffects ii MUSIC_DISC_WAIT
SoundEffects ij MUSIC_DISC_WARD
SoundEffects ik MUSIC_DRAGON
SoundEffects il MUSIC_END
SoundEffects im MUSIC_GAME
SoundEffects in MUSIC_MENU
SoundEffects io MUSIC_NETHER_BASALT_DELTAS
SoundEffects ip MUSIC_NETHER_NETHER_WASTES
SoundEffects iq MUSIC_NETHER_SOUL_SAND_VALLEY
SoundEffects ir MUSIC_NETHER_CRIMSON_FOREST
SoundEffects is MUSIC_NETHER_WARPED_FOREST
SoundEffects it MUSIC_UNDER_WATER
SoundEffects iu BLOCK_NETHER_BRICKS_BREAK
SoundEffects iv BLOCK_NETHER_BRICKS_STEP
SoundEffects iw BLOCK_NETHER_BRICKS_PLACE
SoundEffects ix BLOCK_NETHER_BRICKS_HIT
SoundEffects iy BLOCK_NETHER_BRICKS_FALL
SoundEffects iz BLOCK_NETHER_WART_BREAK
SoundEffects j AMBIENT_NETHER_WASTES_MOOD
SoundEffects jA BLOCK_NOTE_BLOCK_IRON_XYLOPHONE
SoundEffects jB BLOCK_NOTE_BLOCK_COW_BELL
SoundEffects jC BLOCK_NOTE_BLOCK_DIDGERIDOO
SoundEffects jD BLOCK_NOTE_BLOCK_BIT
SoundEffects jE BLOCK_NOTE_BLOCK_BANJO
SoundEffects jF ENTITY_OCELOT_HURT
SoundEffects jG ENTITY_OCELOT_AMBIENT
SoundEffects jH ENTITY_OCELOT_DEATH
SoundEffects jI ENTITY_PAINTING_BREAK
SoundEffects jJ ENTITY_PAINTING_PLACE
SoundEffects jK ENTITY_PANDA_PRE_SNEEZE
SoundEffects jL ENTITY_PANDA_SNEEZE
SoundEffects jM ENTITY_PANDA_AMBIENT
SoundEffects jN ENTITY_PANDA_DEATH
SoundEffects jO ENTITY_PANDA_EAT
SoundEffects jP ENTITY_PANDA_STEP
SoundEffects jQ ENTITY_PANDA_CANT_BREED
SoundEffects jR ENTITY_PANDA_AGGRESSIVE_AMBIENT
SoundEffects jS ENTITY_PANDA_WORRIED_AMBIENT
SoundEffects jT ENTITY_PANDA_HURT
SoundEffects jU ENTITY_PANDA_BITE
SoundEffects jV ENTITY_PARROT_AMBIENT
SoundEffects jW ENTITY_PARROT_DEATH
SoundEffects jX ENTITY_PARROT_EAT
SoundEffects jY ENTITY_PARROT_FLY
SoundEffects jZ ENTITY_PARROT_HURT
SoundEffects ja BLOCK_WART_BLOCK_BREAK
SoundEffects jb BLOCK_WART_BLOCK_STEP
SoundEffects jc BLOCK_WART_BLOCK_PLACE
SoundEffects jd BLOCK_WART_BLOCK_HIT
SoundEffects je BLOCK_WART_BLOCK_FALL
SoundEffects jf BLOCK_NETHERITE_BLOCK_BREAK
SoundEffects jg BLOCK_NETHERITE_BLOCK_STEP
SoundEffects jh BLOCK_NETHERITE_BLOCK_PLACE
SoundEffects ji BLOCK_NETHERITE_BLOCK_HIT
SoundEffects jj BLOCK_NETHERITE_BLOCK_FALL
SoundEffects jk BLOCK_NETHERRACK_BREAK
SoundEffects jl BLOCK_NETHERRACK_STEP
SoundEffects jm BLOCK_NETHERRACK_PLACE
SoundEffects jn BLOCK_NETHERRACK_HIT
SoundEffects jo BLOCK_NETHERRACK_FALL
SoundEffects jp BLOCK_NOTE_BLOCK_BASEDRUM
SoundEffects jq BLOCK_NOTE_BLOCK_BASS
SoundEffects jr BLOCK_NOTE_BLOCK_BELL
SoundEffects js BLOCK_NOTE_BLOCK_CHIME
SoundEffects jt BLOCK_NOTE_BLOCK_FLUTE
SoundEffects ju BLOCK_NOTE_BLOCK_GUITAR
SoundEffects jv BLOCK_NOTE_BLOCK_HARP
SoundEffects jw BLOCK_NOTE_BLOCK_HAT
SoundEffects jx BLOCK_NOTE_BLOCK_PLING
SoundEffects jy BLOCK_NOTE_BLOCK_SNARE
SoundEffects jz BLOCK_NOTE_BLOCK_XYLOPHONE
SoundEffects k AMBIENT_SOUL_SAND_VALLEY_ADDITIONS
SoundEffects kA ENTITY_PARROT_IMITATE_WITHER
SoundEffects kB ENTITY_PARROT_IMITATE_WITHER_SKELETON
SoundEffects kC ENTITY_PARROT_IMITATE_ZOGLIN
SoundEffects kD ENTITY_PARROT_IMITATE_ZOMBIE
SoundEffects kE ENTITY_PARROT_IMITATE_ZOMBIE_VILLAGER
SoundEffects kF ENTITY_PARROT_STEP
SoundEffects kG ENTITY_PHANTOM_AMBIENT
SoundEffects kH ENTITY_PHANTOM_BITE
SoundEffects kI ENTITY_PHANTOM_DEATH
SoundEffects kJ ENTITY_PHANTOM_FLAP
SoundEffects kK ENTITY_PHANTOM_HURT
SoundEffects kL ENTITY_PHANTOM_SWOOP
SoundEffects kM ENTITY_PIG_AMBIENT
SoundEffects kN ENTITY_PIG_DEATH
SoundEffects kO ENTITY_PIG_HURT
SoundEffects kP ENTITY_PIG_SADDLE
SoundEffects kQ ENTITY_PIG_STEP
SoundEffects kR ENTITY_PIGLIN_ADMIRING_ITEM
SoundEffects kS ENTITY_PIGLIN_AMBIENT
SoundEffects kT ENTITY_PIGLIN_ANGRY
SoundEffects kU ENTITY_PIGLIN_CELEBRATE
SoundEffects kV ENTITY_PIGLIN_DEATH
SoundEffects kW ENTITY_PIGLIN_JEALOUS
SoundEffects kX ENTITY_PIGLIN_HURT
SoundEffects kY ENTITY_PIGLIN_RETREAT
SoundEffects kZ ENTITY_PIGLIN_STEP
SoundEffects ka ENTITY_PARROT_IMITATE_BLAZE
SoundEffects kb ENTITY_PARROT_IMITATE_CREEPER
SoundEffects kc ENTITY_PARROT_IMITATE_DROWNED
SoundEffects kd ENTITY_PARROT_IMITATE_ELDER_GUARDIAN
SoundEffects ke ENTITY_PARROT_IMITATE_ENDER_DRAGON
SoundEffects kf ENTITY_PARROT_IMITATE_ENDERMITE
SoundEffects kg ENTITY_PARROT_IMITATE_EVOKER
SoundEffects kh ENTITY_PARROT_IMITATE_GHAST
SoundEffects ki ENTITY_PARROT_IMITATE_GUARDIAN
SoundEffects kj ENTITY_PARROT_IMITATE_HOGLIN
SoundEffects kk ENTITY_PARROT_IMITATE_HUSK
SoundEffects kl ENTITY_PARROT_IMITATE_ILLUSIONER
SoundEffects km ENTITY_PARROT_IMITATE_MAGMA_CUBE
SoundEffects kn ENTITY_PARROT_IMITATE_PHANTOM
SoundEffects ko ENTITY_PARROT_IMITATE_PIGLIN
SoundEffects kp ENTITY_PARROT_IMITATE_PILLAGER
SoundEffects kq ENTITY_PARROT_IMITATE_RAVAGER
SoundEffects kr ENTITY_PARROT_IMITATE_SHULKER
SoundEffects ks ENTITY_PARROT_IMITATE_SILVERFISH
SoundEffects kt ENTITY_PARROT_IMITATE_SKELETON
SoundEffects ku ENTITY_PARROT_IMITATE_SLIME
SoundEffects kv ENTITY_PARROT_IMITATE_SPIDER
SoundEffects kw ENTITY_PARROT_IMITATE_STRAY
SoundEffects kx ENTITY_PARROT_IMITATE_VEX
SoundEffects ky ENTITY_PARROT_IMITATE_VINDICATOR
SoundEffects kz ENTITY_PARROT_IMITATE_WITCH
SoundEffects l AMBIENT_SOUL_SAND_VALLEY_LOOP
SoundEffects lA ENTITY_POLAR_BEAR_AMBIENT
SoundEffects lB ENTITY_POLAR_BEAR_AMBIENT_BABY
SoundEffects lC ENTITY_POLAR_BEAR_DEATH
SoundEffects lD ENTITY_POLAR_BEAR_HURT
SoundEffects lE ENTITY_POLAR_BEAR_STEP
SoundEffects lF ENTITY_POLAR_BEAR_WARNING
SoundEffects lG BLOCK_PORTAL_AMBIENT
SoundEffects lH BLOCK_PORTAL_TRAVEL
SoundEffects lI BLOCK_PORTAL_TRIGGER
SoundEffects lJ ENTITY_PUFFER_FISH_AMBIENT
SoundEffects lK ENTITY_PUFFER_FISH_BLOW_OUT
SoundEffects lL ENTITY_PUFFER_FISH_BLOW_UP
SoundEffects lM ENTITY_PUFFER_FISH_DEATH
SoundEffects lN ENTITY_PUFFER_FISH_FLOP
SoundEffects lO ENTITY_PUFFER_FISH_HURT
SoundEffects lP ENTITY_PUFFER_FISH_STING
SoundEffects lQ BLOCK_PUMPKIN_CARVE
SoundEffects lR ENTITY_RABBIT_AMBIENT
SoundEffects lS ENTITY_RABBIT_ATTACK
SoundEffects lT ENTITY_RABBIT_DEATH
SoundEffects lU ENTITY_RABBIT_HURT
SoundEffects lV ENTITY_RABBIT_JUMP
SoundEffects lW EVENT_RAID_HORN
SoundEffects lX ENTITY_RAVAGER_AMBIENT
SoundEffects lY ENTITY_RAVAGER_ATTACK
SoundEffects lZ ENTITY_RAVAGER_CELEBRATE
SoundEffects la ENTITY_PIGLIN_CONVERTED_TO_ZOMBIFIED
SoundEffects lb ENTITY_PILLAGER_AMBIENT
SoundEffects lc ENTITY_PILLAGER_CELEBRATE
SoundEffects ld ENTITY_PILLAGER_DEATH
SoundEffects le ENTITY_PILLAGER_HURT
SoundEffects lf BLOCK_PISTON_CONTRACT
SoundEffects lg BLOCK_PISTON_EXTEND
SoundEffects lh ENTITY_PLAYER_ATTACK_CRIT
SoundEffects li ENTITY_PLAYER_ATTACK_KNOCKBACK
SoundEffects lj ENTITY_PLAYER_ATTACK_NODAMAGE
SoundEffects lk ENTITY_PLAYER_ATTACK_STRONG
SoundEffects ll ENTITY_PLAYER_ATTACK_SWEEP
SoundEffects lm ENTITY_PLAYER_ATTACK_WEAK
SoundEffects ln ENTITY_PLAYER_BIG_FALL
SoundEffects lo ENTITY_PLAYER_BREATH
SoundEffects lp ENTITY_PLAYER_BURP
SoundEffects lq ENTITY_PLAYER_DEATH
SoundEffects lr ENTITY_PLAYER_HURT
SoundEffects ls ENTITY_PLAYER_HURT_DROWN
SoundEffects lt ENTITY_PLAYER_HURT_ON_FIRE
SoundEffects lu ENTITY_PLAYER_HURT_SWEET_BERRY_BUSH
SoundEffects lv ENTITY_PLAYER_LEVELUP
SoundEffects lw ENTITY_PLAYER_SMALL_FALL
SoundEffects lx ENTITY_PLAYER_SPLASH
SoundEffects ly ENTITY_PLAYER_SPLASH_HIGH_SPEED
SoundEffects lz ENTITY_PLAYER_SWIM
SoundEffects m AMBIENT_SOUL_SAND_VALLEY_MOOD
SoundEffects mA BLOCK_SAND_HIT
SoundEffects mB BLOCK_SAND_PLACE
SoundEffects mC BLOCK_SAND_STEP
SoundEffects mD BLOCK_SCAFFOLDING_BREAK
SoundEffects mE BLOCK_SCAFFOLDING_FALL
SoundEffects mF BLOCK_SCAFFOLDING_HIT
SoundEffects mG BLOCK_SCAFFOLDING_PLACE
SoundEffects mH BLOCK_SCAFFOLDING_STEP
SoundEffects mI ENTITY_SHEEP_AMBIENT
SoundEffects mJ ENTITY_SHEEP_DEATH
SoundEffects mK ENTITY_SHEEP_HURT
SoundEffects mL ENTITY_SHEEP_SHEAR
SoundEffects mM ENTITY_SHEEP_STEP
SoundEffects mN ITEM_SHIELD_BLOCK
SoundEffects mO ITEM_SHIELD_BREAK
SoundEffects mP BLOCK_SHROOMLIGHT_BREAK
SoundEffects mQ BLOCK_SHROOMLIGHT_STEP
SoundEffects mR BLOCK_SHROOMLIGHT_PLACE
SoundEffects mS BLOCK_SHROOMLIGHT_HIT
SoundEffects mT BLOCK_SHROOMLIGHT_FALL
SoundEffects mU ITEM_SHOVEL_FLATTEN
SoundEffects mV ENTITY_SHULKER_AMBIENT
SoundEffects mW BLOCK_SHULKER_BOX_CLOSE
SoundEffects mX BLOCK_SHULKER_BOX_OPEN
SoundEffects mY ENTITY_SHULKER_BULLET_HIT
SoundEffects mZ ENTITY_SHULKER_BULLET_HURT
SoundEffects ma ENTITY_RAVAGER_DEATH
SoundEffects mb ENTITY_RAVAGER_HURT
SoundEffects mc ENTITY_RAVAGER_STEP
SoundEffects md ENTITY_RAVAGER_STUNNED
SoundEffects me ENTITY_RAVAGER_ROAR
SoundEffects mf BLOCK_NETHER_GOLD_ORE_BREAK
SoundEffects mg BLOCK_NETHER_GOLD_ORE_FALL
SoundEffects mh BLOCK_NETHER_GOLD_ORE_HIT
SoundEffects mi BLOCK_NETHER_GOLD_ORE_PLACE
SoundEffects mj BLOCK_NETHER_GOLD_ORE_STEP
SoundEffects mk BLOCK_NETHER_ORE_BREAK
SoundEffects ml BLOCK_NETHER_ORE_FALL
SoundEffects mm BLOCK_NETHER_ORE_HIT
SoundEffects mn BLOCK_NETHER_ORE_PLACE
SoundEffects mo BLOCK_NETHER_ORE_STEP
SoundEffects mp BLOCK_REDSTONE_TORCH_BURNOUT
SoundEffects mq BLOCK_RESPAWN_ANCHOR_AMBIENT
SoundEffects mr BLOCK_RESPAWN_ANCHOR_CHARGE
SoundEffects ms BLOCK_RESPAWN_ANCHOR_DEPLETE
SoundEffects mt BLOCK_RESPAWN_ANCHOR_SET_SPAWN
SoundEffects mu ENTITY_SALMON_AMBIENT
SoundEffects mv ENTITY_SALMON_DEATH
SoundEffects mw ENTITY_SALMON_FLOP
SoundEffects mx ENTITY_SALMON_HURT
SoundEffects my BLOCK_SAND_BREAK
SoundEffects mz BLOCK_SAND_FALL
SoundEffects n AMBIENT_WARPED_FOREST_ADDITIONS
SoundEffects nA ENTITY_SLIME_HURT
SoundEffects nB ENTITY_SLIME_JUMP
SoundEffects nC ENTITY_SLIME_SQUISH
SoundEffects nD BLOCK_SLIME_BLOCK_BREAK
SoundEffects nE BLOCK_SLIME_BLOCK_FALL
SoundEffects nF BLOCK_SLIME_BLOCK_HIT
SoundEffects nG BLOCK_SLIME_BLOCK_PLACE
SoundEffects nH BLOCK_SLIME_BLOCK_STEP
SoundEffects nI BLOCK_SOUL_SAND_BREAK
SoundEffects nJ BLOCK_SOUL_SAND_STEP
SoundEffects nK BLOCK_SOUL_SAND_PLACE
SoundEffects nL BLOCK_SOUL_SAND_HIT
SoundEffects nM BLOCK_SOUL_SAND_FALL
SoundEffects nN BLOCK_SOUL_SOIL_BREAK
SoundEffects nO BLOCK_SOUL_SOIL_STEP
SoundEffects nP BLOCK_SOUL_SOIL_PLACE
SoundEffects nQ BLOCK_SOUL_SOIL_HIT
SoundEffects nR BLOCK_SOUL_SOIL_FALL
SoundEffects nS PARTICLE_SOUL_ESCAPE
SoundEffects nT ENTITY_STRIDER_AMBIENT
SoundEffects nU ENTITY_STRIDER_HAPPY
SoundEffects nV ENTITY_STRIDER_RETREAT
SoundEffects nW ENTITY_STRIDER_DEATH
SoundEffects nX ENTITY_STRIDER_HURT
SoundEffects nY ENTITY_STRIDER_STEP
SoundEffects nZ ENTITY_STRIDER_STEP_LAVA
SoundEffects na ENTITY_SHULKER_CLOSE
SoundEffects nb ENTITY_SHULKER_DEATH
SoundEffects nc ENTITY_SHULKER_HURT
SoundEffects nd ENTITY_SHULKER_HURT_CLOSED
SoundEffects ne ENTITY_SHULKER_OPEN
SoundEffects nf ENTITY_SHULKER_SHOOT
SoundEffects ng ENTITY_SHULKER_TELEPORT
SoundEffects nh ENTITY_SILVERFISH_AMBIENT
SoundEffects ni ENTITY_SILVERFISH_DEATH
SoundEffects nj ENTITY_SILVERFISH_HURT
SoundEffects nk ENTITY_SILVERFISH_STEP
SoundEffects nl ENTITY_SKELETON_AMBIENT
SoundEffects nm ENTITY_SKELETON_DEATH
SoundEffects nn ENTITY_SKELETON_HORSE_AMBIENT
SoundEffects no ENTITY_SKELETON_HORSE_DEATH
SoundEffects np ENTITY_SKELETON_HORSE_HURT
SoundEffects nq ENTITY_SKELETON_HORSE_SWIM
SoundEffects nr ENTITY_SKELETON_HORSE_AMBIENT_WATER
SoundEffects ns ENTITY_SKELETON_HORSE_GALLOP_WATER
SoundEffects nt ENTITY_SKELETON_HORSE_JUMP_WATER
SoundEffects nu ENTITY_SKELETON_HORSE_STEP_WATER
SoundEffects nv ENTITY_SKELETON_HURT
SoundEffects nw ENTITY_SKELETON_SHOOT
SoundEffects nx ENTITY_SKELETON_STEP
SoundEffects ny ENTITY_SLIME_ATTACK
SoundEffects nz ENTITY_SLIME_DEATH
SoundEffects o AMBIENT_WARPED_FOREST_LOOP
SoundEffects oA ENTITY_SQUID_DEATH
SoundEffects oB ENTITY_SQUID_HURT
SoundEffects oC ENTITY_SQUID_SQUIRT
SoundEffects oD BLOCK_STONE_BREAK
SoundEffects oE BLOCK_STONE_BUTTON_CLICK_OFF
SoundEffects oF BLOCK_STONE_BUTTON_CLICK_ON
SoundEffects oG BLOCK_STONE_FALL
SoundEffects oH BLOCK_STONE_HIT
SoundEffects oI BLOCK_STONE_PLACE
SoundEffects oJ BLOCK_STONE_PRESSURE_PLATE_CLICK_OFF
SoundEffects oK BLOCK_STONE_PRESSURE_PLATE_CLICK_ON
SoundEffects oL BLOCK_STONE_STEP
SoundEffects oM ENTITY_STRAY_AMBIENT
SoundEffects oN ENTITY_STRAY_DEATH
SoundEffects oO ENTITY_STRAY_HURT
SoundEffects oP ENTITY_STRAY_STEP
SoundEffects oQ BLOCK_SWEET_BERRY_BUSH_BREAK
SoundEffects oR BLOCK_SWEET_BERRY_BUSH_PLACE
SoundEffects oS ITEM_SWEET_BERRIES_PICK_FROM_BUSH
SoundEffects oT ENCHANT_THORNS_HIT
SoundEffects oU ENTITY_TNT_PRIMED
SoundEffects oV ITEM_TOTEM_USE
SoundEffects oW ITEM_TRIDENT_HIT
SoundEffects oX ITEM_TRIDENT_HIT_GROUND
SoundEffects oY ITEM_TRIDENT_RETURN
SoundEffects oZ ITEM_TRIDENT_RIPTIDE_1
SoundEffects oa ENTITY_STRIDER_EAT
SoundEffects ob ENTITY_STRIDER_SADDLE
SoundEffects oc ENTITY_SLIME_DEATH_SMALL
SoundEffects od ENTITY_SLIME_HURT_SMALL
SoundEffects oe ENTITY_SLIME_JUMP_SMALL
SoundEffects of ENTITY_SLIME_SQUISH_SMALL
SoundEffects og BLOCK_SMITHING_TABLE_USE
SoundEffects oh BLOCK_SMOKER_SMOKE
SoundEffects oi ENTITY_SNOWBALL_THROW
SoundEffects oj BLOCK_SNOW_BREAK
SoundEffects ok BLOCK_SNOW_FALL
SoundEffects ol ENTITY_SNOW_GOLEM_AMBIENT
SoundEffects om ENTITY_SNOW_GOLEM_DEATH
SoundEffects on ENTITY_SNOW_GOLEM_HURT
SoundEffects oo ENTITY_SNOW_GOLEM_SHOOT
SoundEffects op ENTITY_SNOW_GOLEM_SHEAR
SoundEffects oq BLOCK_SNOW_HIT
SoundEffects or BLOCK_SNOW_PLACE
SoundEffects os BLOCK_SNOW_STEP
SoundEffects ot ENTITY_SPIDER_AMBIENT
SoundEffects ou ENTITY_SPIDER_DEATH
SoundEffects ov ENTITY_SPIDER_HURT
SoundEffects ow ENTITY_SPIDER_STEP
SoundEffects ox ENTITY_SPLASH_POTION_BREAK
SoundEffects oy ENTITY_SPLASH_POTION_THROW
SoundEffects oz ENTITY_SQUID_AMBIENT
SoundEffects p AMBIENT_WARPED_FOREST_MOOD
SoundEffects pA UI_LOOM_TAKE_RESULT
SoundEffects pB UI_CARTOGRAPHY_TABLE_TAKE_RESULT
SoundEffects pC UI_STONECUTTER_TAKE_RESULT
SoundEffects pD UI_STONECUTTER_SELECT_RECIPE
SoundEffects pE UI_TOAST_CHALLENGE_COMPLETE
SoundEffects pF UI_TOAST_IN
SoundEffects pG UI_TOAST_OUT
SoundEffects pH ENTITY_VEX_AMBIENT
SoundEffects pI ENTITY_VEX_CHARGE
SoundEffects pJ ENTITY_VEX_DEATH
SoundEffects pK ENTITY_VEX_HURT
SoundEffects pL ENTITY_VILLAGER_AMBIENT
SoundEffects pM ENTITY_VILLAGER_CELEBRATE
SoundEffects pN ENTITY_VILLAGER_DEATH
SoundEffects pO ENTITY_VILLAGER_HURT
SoundEffects pP ENTITY_VILLAGER_NO
SoundEffects pQ ENTITY_VILLAGER_TRADE
SoundEffects pR ENTITY_VILLAGER_YES
SoundEffects pS ENTITY_VILLAGER_WORK_ARMORER
SoundEffects pT ENTITY_VILLAGER_WORK_BUTCHER
SoundEffects pU ENTITY_VILLAGER_WORK_CARTOGRAPHER
SoundEffects pV ENTITY_VILLAGER_WORK_CLERIC
SoundEffects pW ENTITY_VILLAGER_WORK_FARMER
SoundEffects pX ENTITY_VILLAGER_WORK_FISHERMAN
SoundEffects pY ENTITY_VILLAGER_WORK_FLETCHER
SoundEffects pZ ENTITY_VILLAGER_WORK_LEATHERWORKER
SoundEffects pa ITEM_TRIDENT_RIPTIDE_2
SoundEffects pb ITEM_TRIDENT_RIPTIDE_3
SoundEffects pc ITEM_TRIDENT_THROW
SoundEffects pd ITEM_TRIDENT_THUNDER
SoundEffects pe BLOCK_TRIPWIRE_ATTACH
SoundEffects pf BLOCK_TRIPWIRE_CLICK_OFF
SoundEffects pg BLOCK_TRIPWIRE_CLICK_ON
SoundEffects ph BLOCK_TRIPWIRE_DETACH
SoundEffects pi ENTITY_TROPICAL_FISH_AMBIENT
SoundEffects pj ENTITY_TROPICAL_FISH_DEATH
SoundEffects pk ENTITY_TROPICAL_FISH_FLOP
SoundEffects pl ENTITY_TROPICAL_FISH_HURT
SoundEffects pm ENTITY_TURTLE_AMBIENT_LAND
SoundEffects pn ENTITY_TURTLE_DEATH
SoundEffects po ENTITY_TURTLE_DEATH_BABY
SoundEffects pp ENTITY_TURTLE_EGG_BREAK
SoundEffects pq ENTITY_TURTLE_EGG_CRACK
SoundEffects pr ENTITY_TURTLE_EGG_HATCH
SoundEffects ps ENTITY_TURTLE_HURT
SoundEffects pt ENTITY_TURTLE_HURT_BABY
SoundEffects pu ENTITY_TURTLE_LAY_EGG
SoundEffects pv ENTITY_TURTLE_SHAMBLE
SoundEffects pw ENTITY_TURTLE_SHAMBLE_BABY
SoundEffects px ENTITY_TURTLE_SWIM
SoundEffects py UI_BUTTON_CLICK
SoundEffects pz UI_LOOM_SELECT_PATTERN
SoundEffects q AMBIENT_UNDERWATER_ENTER
SoundEffects qA BLOCK_WET_GRASS_HIT
SoundEffects qB BLOCK_WET_GRASS_PLACE
SoundEffects qC BLOCK_WET_GRASS_STEP
SoundEffects qD ENTITY_WITCH_AMBIENT
SoundEffects qE ENTITY_WITCH_CELEBRATE
SoundEffects qF ENTITY_WITCH_DEATH
SoundEffects qG ENTITY_WITCH_DRINK
SoundEffects qH ENTITY_WITCH_HURT
SoundEffects qI ENTITY_WITCH_THROW
SoundEffects qJ ENTITY_WITHER_AMBIENT
SoundEffects qK ENTITY_WITHER_BREAK_BLOCK
SoundEffects qL ENTITY_WITHER_DEATH
SoundEffects qM ENTITY_WITHER_HURT
SoundEffects qN ENTITY_WITHER_SHOOT
SoundEffects qO ENTITY_WITHER_SKELETON_AMBIENT
SoundEffects qP ENTITY_WITHER_SKELETON_DEATH
SoundEffects qQ ENTITY_WITHER_SKELETON_HURT
SoundEffects qR ENTITY_WITHER_SKELETON_STEP
SoundEffects qS ENTITY_WITHER_SPAWN
SoundEffects qT ENTITY_WOLF_AMBIENT
SoundEffects qU ENTITY_WOLF_DEATH
SoundEffects qV ENTITY_WOLF_GROWL
SoundEffects qW ENTITY_WOLF_HOWL
SoundEffects qX ENTITY_WOLF_HURT
SoundEffects qY ENTITY_WOLF_PANT
SoundEffects qZ ENTITY_WOLF_SHAKE
SoundEffects qa ENTITY_VILLAGER_WORK_LIBRARIAN
SoundEffects qb ENTITY_VILLAGER_WORK_MASON
SoundEffects qc ENTITY_VILLAGER_WORK_SHEPHERD
SoundEffects qd ENTITY_VILLAGER_WORK_TOOLSMITH
SoundEffects qe ENTITY_VILLAGER_WORK_WEAPONSMITH
SoundEffects qf ENTITY_VINDICATOR_AMBIENT
SoundEffects qg ENTITY_VINDICATOR_CELEBRATE
SoundEffects qh ENTITY_VINDICATOR_DEATH
SoundEffects qi ENTITY_VINDICATOR_HURT
SoundEffects qj BLOCK_VINE_STEP
SoundEffects qk BLOCK_LILY_PAD_PLACE
SoundEffects ql ENTITY_WANDERING_TRADER_AMBIENT
SoundEffects qm ENTITY_WANDERING_TRADER_DEATH
SoundEffects qn ENTITY_WANDERING_TRADER_DISAPPEARED
SoundEffects qo ENTITY_WANDERING_TRADER_DRINK_MILK
SoundEffects qp ENTITY_WANDERING_TRADER_DRINK_POTION
SoundEffects qq ENTITY_WANDERING_TRADER_HURT
SoundEffects qr ENTITY_WANDERING_TRADER_NO
SoundEffects qs ENTITY_WANDERING_TRADER_REAPPEARED
SoundEffects qt ENTITY_WANDERING_TRADER_TRADE
SoundEffects qu ENTITY_WANDERING_TRADER_YES
SoundEffects qv BLOCK_WATER_AMBIENT
SoundEffects qw WEATHER_RAIN
SoundEffects qx WEATHER_RAIN_ABOVE
SoundEffects qy BLOCK_WET_GRASS_BREAK
SoundEffects qz BLOCK_WET_GRASS_FALL
SoundEffects r AMBIENT_UNDERWATER_EXIT
SoundEffects rA ENTITY_ZOMBIE_AMBIENT
SoundEffects rB ENTITY_ZOMBIE_ATTACK_WOODEN_DOOR
SoundEffects rC ENTITY_ZOMBIE_ATTACK_IRON_DOOR
SoundEffects rD ENTITY_ZOMBIE_BREAK_WOODEN_DOOR
SoundEffects rE ENTITY_ZOMBIE_CONVERTED_TO_DROWNED
SoundEffects rF ENTITY_ZOMBIE_DEATH
SoundEffects rG ENTITY_ZOMBIE_DESTROY_EGG
SoundEffects rH ENTITY_ZOMBIE_HORSE_AMBIENT
SoundEffects rI ENTITY_ZOMBIE_HORSE_DEATH
SoundEffects rJ ENTITY_ZOMBIE_HORSE_HURT
SoundEffects rK ENTITY_ZOMBIE_HURT
SoundEffects rL ENTITY_ZOMBIE_INFECT
SoundEffects rM ENTITY_ZOMBIFIED_PIGLIN_AMBIENT
SoundEffects rN ENTITY_ZOMBIFIED_PIGLIN_ANGRY
SoundEffects rO ENTITY_ZOMBIFIED_PIGLIN_DEATH
SoundEffects rP ENTITY_ZOMBIFIED_PIGLIN_HURT
SoundEffects rQ ENTITY_ZOMBIE_STEP
SoundEffects rR ENTITY_ZOMBIE_VILLAGER_AMBIENT
SoundEffects rS ENTITY_ZOMBIE_VILLAGER_CONVERTED
SoundEffects rT ENTITY_ZOMBIE_VILLAGER_CURE
SoundEffects rU ENTITY_ZOMBIE_VILLAGER_DEATH
SoundEffects rV ENTITY_ZOMBIE_VILLAGER_HURT
SoundEffects rW ENTITY_ZOMBIE_VILLAGER_STEP
SoundEffects ra ENTITY_WOLF_STEP
SoundEffects rb ENTITY_WOLF_WHINE
SoundEffects rc BLOCK_WOODEN_DOOR_CLOSE
SoundEffects rd BLOCK_WOODEN_DOOR_OPEN
SoundEffects re BLOCK_WOODEN_TRAPDOOR_CLOSE
SoundEffects rf BLOCK_WOODEN_TRAPDOOR_OPEN
SoundEffects rg BLOCK_WOOD_BREAK
SoundEffects rh BLOCK_WOODEN_BUTTON_CLICK_OFF
SoundEffects ri BLOCK_WOODEN_BUTTON_CLICK_ON
SoundEffects rj BLOCK_WOOD_FALL
SoundEffects rk BLOCK_WOOD_HIT
SoundEffects rl BLOCK_WOOD_PLACE
SoundEffects rm BLOCK_WOODEN_PRESSURE_PLATE_CLICK_OFF
SoundEffects rn BLOCK_WOODEN_PRESSURE_PLATE_CLICK_ON
SoundEffects ro BLOCK_WOOD_STEP
SoundEffects rp BLOCK_WOOL_BREAK
SoundEffects rq BLOCK_WOOL_FALL
SoundEffects rr BLOCK_WOOL_HIT
SoundEffects rs BLOCK_WOOL_PLACE
SoundEffects rt BLOCK_WOOL_STEP
SoundEffects ru ENTITY_ZOGLIN_AMBIENT
SoundEffects rv ENTITY_ZOGLIN_ANGRY
SoundEffects rw ENTITY_ZOGLIN_ATTACK
SoundEffects rx ENTITY_ZOGLIN_DEATH
SoundEffects ry ENTITY_ZOGLIN_HURT
SoundEffects rz ENTITY_ZOGLIN_STEP
SoundEffects s AMBIENT_UNDERWATER_LOOP
SoundEffects t AMBIENT_UNDERWATER_LOOP_ADDITIONS
SoundEffects u AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE
SoundEffects v AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE
SoundEffects w BLOCK_ANCIENT_DEBRIS_BREAK
SoundEffects x BLOCK_ANCIENT_DEBRIS_STEP
SoundEffects y BLOCK_ANCIENT_DEBRIS_PLACE
SoundEffects z BLOCK_ANCIENT_DEBRIS_HIT
SpawnerCreature a (LWorld;LChunk;)LBlockPosition; getRandomPosition
Statistic a ()LStatisticWrapper; getWrapper
StatisticList A AVIATE_ONE_CM
StatisticList B SWIM_ONE_CM
StatisticList C STRIDER_ONE_CM
StatisticList D JUMP
StatisticList E DROP
StatisticList F DAMAGE_DEALT
StatisticList G DAMAGE_DEALT_ABSORBED
StatisticList H DAMAGE_DEALT_RESISTED
StatisticList I DAMAGE_TAKEN
StatisticList J DAMAGE_BLOCKED_BY_SHIELD
StatisticList K DAMAGE_ABSORBED
StatisticList L DAMAGE_RESISTED
StatisticList M DEATHS
StatisticList N MOB_KILLS
StatisticList O ANIMALS_BRED
StatisticList P PLAYER_KILLS
StatisticList Q FISH_CAUGHT
StatisticList R TALKED_TO_VILLAGER
StatisticList S TRADED_WITH_VILLAGER
StatisticList T EAT_CAKE_SLICE
StatisticList U FILL_CAULDRON
StatisticList V USE_CAULDRON
StatisticList W CLEAN_ARMOR
StatisticList X CLEAN_BANNER
StatisticList Y CLEAN_SHULKER_BOX
StatisticList Z INTERACT_WITH_BREWINGSTAND
StatisticList a BLOCK_MINED
StatisticList aA RAID_WIN
StatisticList aB INTERACT_WITH_ANVIL
StatisticList aC INTERACT_WITH_GRINDSTONE
StatisticList aD TARGET_HIT
StatisticList aE INTERACT_WITH_SMITHING_TABLE
StatisticList aa INTERACT_WITH_BEACON
StatisticList ab INSPECT_DROPPER
StatisticList ac INSPECT_HOPPER
StatisticList ad INSPECT_DISPENSER
StatisticList ae PLAY_NOTEBLOCK
StatisticList af TUNE_NOTEBLOCK
StatisticList ag POT_FLOWER
StatisticList ah TRIGGER_TRAPPED_CHEST
StatisticList ai OPEN_ENDERCHEST
StatisticList aj ENCHANT_ITEM
StatisticList ak PLAY_RECORD
StatisticList al INTERACT_WITH_FURNACE
StatisticList am INTERACT_WITH_CRAFTING_TABLE
StatisticList an OPEN_CHEST
StatisticList ao SLEEP_IN_BED
StatisticList ap OPEN_SHULKER_BOX
StatisticList aq OPEN_BARREL
StatisticList ar INTERACT_WITH_BLAST_FURNACE
StatisticList as INTERACT_WITH_SMOKER
StatisticList at INTERACT_WITH_LECTERN
StatisticList au INTERACT_WITH_CAMPFIRE
StatisticList av INTERACT_WITH_CARTOGRAPHY_TABLE
StatisticList aw INTERACT_WITH_LOOM
StatisticList ax INTERACT_WITH_STONECUTTER
StatisticList ay BELL_RING
StatisticList az RAID_TRIGGER
StatisticList b ITEM_CRAFTED
StatisticList c ITEM_USED
StatisticList d ITEM_BROKEN
StatisticList e ITEM_PICKED_UP
StatisticList f ITEM_DROPPED
StatisticList g ENTITY_KILLED
StatisticList h ENTITY_KILLED_BY
StatisticList i CUSTOM
StatisticList j LEAVE_GAME
StatisticList k PLAY_ONE_MINUTE
StatisticList l TIME_SINCE_DEATH
StatisticList m TIME_SINCE_REST
StatisticList n SNEAK_TIME
StatisticList o WALK_ONE_CM
StatisticList p CROUCH_ONE_CM
StatisticList q SPRINT_ONE_CM
StatisticList r WALK_ON_WATER_ONE_CM
StatisticList s FALL_ONE_CM
StatisticList t CLIMB_ONE_CM
StatisticList u FLY_ONE_CM
StatisticList v WALK_UNDER_WATER_ONE_CM
StatisticList w MINECART_ONE_CM
StatisticList x BOAT_ONE_CM
StatisticList y PIG_ONE_CM
StatisticList z HORSE_ONE_CM
StatisticManager a (LEntityHuman;LStatistic;I)V setStatistic
StatisticManager a (LStatistic;)I getStatisticValue
StatisticWrapper a ()LIRegistry; getRegistry
StructureGenerator a (LIWorldReader;LStructureManager;LBlockPosition;IZJLStructureSettingsFeature;)LBlockPosition; getNearestGeneratedFeature
StructureGenerator b PILLAGER_OUTPOST
StructureGenerator c MINESHAFT
StructureGenerator d MANSION
StructureGenerator e JUNGLE_PYRAMID
StructureGenerator f DESERT_PYRAMID
StructureGenerator g IGLOO
StructureGenerator h RUINED_PORTAL
StructureGenerator i SHIPWRECK
StructureGenerator j SWAMP_HUT
StructureGenerator k STRONGHOLD
StructureGenerator l MONUMENT
StructureGenerator m OCEAN_RUIN
StructureGenerator n FORTRESS
StructureGenerator o ENDCITY
StructureGenerator p BURIED_TREASURE
StructureGenerator q VILLAGE
StructureGenerator r NETHER_FOSSIL
StructureGenerator s BASTION_REMNANT
SystemUtils b ()J getMonotonicMillis
SystemUtils c ()J getMonotonicNanos
SystemUtils d ()J getTimeMillis
SystemUtils$IdentityHashingStrategy a INSTANCE
SystemUtils$OS a LINUX
SystemUtils$OS b SOLARIS
SystemUtils$OS c WINDOWS
SystemUtils$OS d OSX
SystemUtils$OS e UNKNOWN
Tag a (Ljava/lang/Object;)Z isTagged
Tag b ()Ljava/util/List; getTagged
TagRegistry a ()LTagsServer; getBlockTags
TagRegistry a blockTags
TagRegistry b ()LTagsServer; getItemTags
TagRegistry b itemTags
TagRegistry c fluidTags
TagRegistry d ()LTagsServer; getFluidTags
TagRegistry d entityTags
TagRegistry e ()LTagsServer; getEntityTags
TagRegistry f ()V bind
TagsBlock A BANNERS
TagsBlock B SAND
TagsBlock C STAIRS
TagsBlock D SLABS
TagsBlock E WALLS
TagsBlock F ANVIL
TagsBlock G RAILS
TagsBlock H LEAVES
TagsBlock I TRAPDOORS
TagsBlock J SMALL_FLOWERS
TagsBlock K BEDS
TagsBlock L FENCES
TagsBlock M TALL_FLOWERS
TagsBlock N FLOWERS
TagsBlock O PIGLIN_REPELLENTS
TagsBlock P GOLD_ORES
TagsBlock Q NON_FLAMMABLE_WOOD
TagsBlock R FLOWER_POTS
TagsBlock S ENDERMAN_HOLDABLE
TagsBlock T ICE
TagsBlock U VALID_SPAWN
TagsBlock V IMPERMEABLE
TagsBlock W UNDERWATER_BONEMEALS
TagsBlock X CORAL_BLOCKS
TagsBlock Y WALL_CORALS
TagsBlock Z CORAL_PLANTS
TagsBlock a WOOL
TagsBlock aa CORALS
TagsBlock ab BAMBOO_PLANTABLE_ON
TagsBlock ac STANDING_SIGNS
TagsBlock ad WALL_SIGNS
TagsBlock ae SIGNS
TagsBlock af DRAGON_IMMUNE
TagsBlock ag WITHER_IMMUNE
TagsBlock ah WITHER_SUMMON_BASE_BLOCKS
TagsBlock ai BEEHIVES
TagsBlock aj CROPS
TagsBlock ak BEE_GROWABLES
TagsBlock al PORTALS
TagsBlock am FIRE
TagsBlock an NYLIUM
TagsBlock ao WART_BLOCKS
TagsBlock ap BEACON_BASE_BLOCKS
TagsBlock aq SOUL_SPEED_BLOCKS
TagsBlock ar WALL_POST_OVERRIDE
TagsBlock as CLIMBABLE
TagsBlock at SHULKER_BOXES
TagsBlock au HOGLIN_REPELLENTS
TagsBlock av SOUL_FIRE_BASE_BLOCKS
TagsBlock aw STRIDER_WARM_BLOCKS
TagsBlock ax CAMPFIRES
TagsBlock ay GUARDED_BY_PIGLINS
TagsBlock az PREVENT_MOB_SPAWNING_INSIDE
TagsBlock b PLANKS
TagsBlock c STONE_BRICKS
TagsBlock d WOODEN_BUTTONS
TagsBlock e BUTTONS
TagsBlock f CARPETS
TagsBlock g WOODEN_DOORS
TagsBlock h WOODEN_STAIRS
TagsBlock i WOODEN_SLABS
TagsBlock j WOODEN_FENCES
TagsBlock k PRESSURE_PLATES
TagsBlock l WOODEN_PRESSURE_PLATES
TagsBlock m STONE_PRESSURE_PLATES
TagsBlock n WOODEN_TRAPDOORS
TagsBlock o DOORS
TagsBlock p SAPLINGS
TagsBlock q LOGS_THAT_BURN
TagsBlock r LOGS
TagsBlock s DARK_OAK_LOGS
TagsBlock t OAK_LOGS
TagsBlock u BIRCH_LOGS
TagsBlock v ACACIA_LOGS
TagsBlock w JUNGLE_LOGS
TagsBlock x SPRUCE_LOGS
TagsBlock y CRIMSON_STEMS
TagsBlock z WARPED_STEMS
TagsEntity a SKELETONS
TagsEntity b RADIERS
TagsEntity c BEEHIVE_INHABITORS
TagsEntity d ARROWS
TagsEntity e IMPACT_PROJECTILES
TagsFluid a WATER
TagsFluid b LAVA
TagsItem A STAIRS
TagsItem B SLABS
TagsItem C WALLS
TagsItem D ANVIL
TagsItem E RAILS
TagsItem F LEAVES
TagsItem G TRAPDOORS
TagsItem H SMALL_FLOWERS
TagsItem I BEDS
TagsItem J FENCES
TagsItem K TALL_FLOWERS
TagsItem L FLOWERS
TagsItem M PIGLIN_REPELLENTS
TagsItem N PIGLIN_LOVED
TagsItem O GOLD_ORES
TagsItem P NON_FLAMMABLE_WOOD
TagsItem Q SOUL_FIRE_BASE_BLOCKS
TagsItem R BOATS
TagsItem S FISHES
TagsItem T SIGNS
TagsItem U MUSIC_DISCS
TagsItem V CREEPER_DROP_MUSIC_DISCS
TagsItem W COALS
TagsItem X ARROWS
TagsItem Y LECTERN_BOOKS
TagsItem Z BEACON_PAYMENT_ITEMS
TagsItem a WOOL
TagsItem aa STONE_TOOL_MATERIALS
TagsItem ab FURNACE_MATERIALS
TagsItem b PLANKS
TagsItem c STONE_BRICKS
TagsItem d WOODEN_BUTTONS
TagsItem e BUTTONS
TagsItem f CARPETS
TagsItem g WOODEN_DOORS
TagsItem h WOODEN_STAIRS
TagsItem i WOODEN_SLABS
TagsItem j WOODEN_FENCES
TagsItem k WOODEN_PRESSURE_PLATES
TagsItem l WOODEN_TRAPDOORS
TagsItem m DOORS
TagsItem n SAPLINGS
TagsItem o LOGS_THAT_BURN
TagsItem p LOGS
TagsItem q DARK_OAK_LOGS
TagsItem r OAK_LOGS
TagsItem s BIRCH_LOGS
TagsItem t ACACIA_LOGS
TagsItem u JUNGLE_LOGS
TagsItem v SPRUCE_LOGS
TagsItem w CRIMSON_STEMS
TagsItem x WARPED_STEMS
TagsItem y BANNERS
TagsItem z SAND
TickListPriority a EXTREMELY_HIGH
TickListPriority b VERY_HIGH
TickListPriority c HIGH
TickListPriority d NORMAL
TickListPriority e LOW
TickListPriority f VERY_LOW
TickListPriority g EXTREMELY_LOW
TickListServer c nextTickListHash
TickListServer d nextTickList
Ticket a ()LTicketType; getTicketType
Ticket c identifier
TicketType a START
TicketType b DRAGON
TicketType c PLAYER
TicketType d FORCED
TicketType e LIGHT
TicketType f PORTAL
TicketType g POST_TELEPORT
TicketType h UNKNOWN
TicketType k loadPeriod
TileEntity Z_ ()V update
TileEntity a ()LPacketPlayOutTileEntityData; getUpdatePacket
TileEntity a (LBlockPosition;)V setPosition
TileEntity a (LIBlockData;LNBTTagCompound;)V load
TileEntity a (LNBTTagCompound;)LNBTTagCompound; save
TileEntity a (LWorld;LBlockPosition;)V setLocation
TileEntity a_ (II)Z setProperty
TileEntity b (LIBlockData;LNBTTagCompound;)LTileEntity; create
TileEntity b tileType
TileEntity d world
TileEntity e position
TileEntity n ()Z hasWorld
TileEntity o ()LBlockPosition; getPosition
TileEntity p ()LIBlockData; getBlock
TileEntity q ()Z isRemoved
TileEntity s ()V invalidateBlockCache
TileEntity t ()Z isFilteredNBT
TileEntity u ()LTileEntityTypes; getTileType
TileEntity v ()LWorld; getWorld
TileEntityBanner b color
TileEntityBanner c patterns
TileEntityBarrel a items
TileEntityBeacon a (LIChatBaseComponent;)V setCustomName
TileEntityBeacon h levels
TileEntityBeacon j ()V applyEffects
TileEntityBeacon j primaryEffect
TileEntityBeacon k secondaryEffect
TileEntityBeacon l customName
TileEntityBeacon m chestLock
TileEntityBeacon n containerProperties
TileEntityBed a color
TileEntityBeehive a (LEntity;Z)V addBee
TileEntityBeehive a (LIBlockData;LTileEntityBeehive$HiveBee;Ljava/util/List;LTileEntityBeehive$ReleaseStatus;)Z releaseBee
TileEntityBeehive a (LIBlockData;LTileEntityBeehive$ReleaseStatus;)Ljava/util/List; releaseBees
TileEntityBeehive a bees
TileEntityBeehive b flowerPos
TileEntityBeehive f ()Z isEmpty
TileEntityBeehive h ()Z isFull
TileEntityBeehive j ()I getBeeCount
TileEntityBeehive k ()Z isSedated
TileEntityBeehive$HiveBee a entityData
TileEntityBeehive$HiveBee b ticksInHive
TileEntityBeehive$HiveBee c minOccupationTicks
TileEntityBeehive$ReleaseStatus a HONEY_DELIVERED
TileEntityBeehive$ReleaseStatus b BEE_RELEASED
TileEntityBeehive$ReleaseStatus c EMERGENCY
TileEntityBrewingStand h items
TileEntityBrewingStand i brewTime
TileEntityBrewingStand l fuelLevel
TileEntityCampfire a items
TileEntityCampfire b cookingTimes
TileEntityCampfire c cookingTotalTimes
TileEntityCampfire d ()LNonNullList; getItems
TileEntityChest c viewingCount
TileEntityChest h ()V onOpen
TileEntityChest i items
TileEntityCommand d ()LCommandBlockListenerAbstract; getCommandBlock
TileEntityCommand$Type a SEQUENCE
TileEntityCommand$Type b AUTO
TileEntityCommand$Type c REDSTONE
TileEntityConduit j target
TileEntityContainer a (ILPlayerInventory;)LContainer; createContainer
TileEntityContainer a (LIChatBaseComponent;)V setCustomName
TileEntityContainer a chestLock
TileEntityContainer b customName
TileEntityContainer g ()LIChatBaseComponent; getContainerName
TileEntityDispenser a (LItemStack;)I addItem
TileEntityDispenser b items
TileEntityEnchantTable a (LIChatBaseComponent;)V setCustomName
TileEntityEndGateway b age
TileEntityEndGateway g exitPortal
TileEntityEndGateway h exactTeleport
TileEntityFurnace a (LItemStack;)I fuelTime
TileEntityFurnace a items
TileEntityFurnace b (LIRecipe;)Z canBurn
TileEntityFurnace b (LItemStack;)Z isFuel
TileEntityFurnace c (LIRecipe;)V burn
TileEntityFurnace h ()I getRecipeCookingTime
TileEntityFurnace j ()Z isBurning
TileEntityFurnace j burnTime
TileEntityFurnace k ticksForCurrentFuel
TileEntityFurnace l cookTime
TileEntityFurnace m cookTimeTotal
TileEntityHopper a (LIInventory;LIInventory;LItemStack;LEnumDirection;)LItemStack; addItem
TileEntityHopper c (I)V setCooldown
TileEntityHopper i items
TileEntityJigsaw$JointType a ROLLABLE
TileEntityJigsaw$JointType b ALIGNED
TileEntityJukeBox a (LItemStack;)V setRecord
TileEntityJukeBox d ()LItemStack; getRecord
TileEntityLectern a (I)V setPage
TileEntityLectern a (LItemStack;)V setBook
TileEntityLectern a inventory
TileEntityLectern b containerProperties
TileEntityLectern c book
TileEntityLectern f ()LItemStack; getBook
TileEntityLectern g ()Z hasBook
TileEntityLectern g page
TileEntityLectern h ()I getPage
TileEntityLectern h maxPage
TileEntityLootable a (LMinecraftKey;J)V setLootTable
TileEntityLootable g lootTable
TileEntityLootable h lootTableSeed
TileEntityMobSpawner d ()LMobSpawnerAbstract; getSpawner
TileEntityShulkerBox b contents
TileEntityShulkerBox$AnimationPhase a CLOSED
TileEntityShulkerBox$AnimationPhase b OPENING
TileEntityShulkerBox$AnimationPhase c OPENED
TileEntityShulkerBox$AnimationPhase d CLOSING
TileEntitySign a (LEnumColor;)Z setColor
TileEntitySign a lines
TileEntitySign b isEditable
TileEntitySign g ()LEnumColor; getColor
TileEntitySign h color
TileEntitySkull a (Lcom/mojang/authlib/GameProfile;)V setGameProfile
TileEntitySkull a userCache
TileEntitySkull b sessionService
TileEntitySkull c gameProfile
TileEntityStructure a (LBlockPropertyStructureMode;)V setUsageMode
TileEntityStructure a (LEntityLiving;)V setAuthor
TileEntityStructure a (Ljava/lang/String;)V setStructureName
TileEntityStructure a structureName
TileEntityStructure b author
TileEntityStructure c metadata
TileEntityStructure d ()Ljava/lang/String; getStructureName
TileEntityStructure g relativePosition
TileEntityStructure h size
TileEntityStructure i mirror
TileEntityStructure j rotation
TileEntityStructure k usageMode
TileEntityStructure l ignoreEntities
TileEntityStructure m powered
TileEntityStructure n showAir
TileEntityStructure o showBoundingBox
TileEntityStructure p integrity
TileEntityStructure q seed
TileEntityStructure x ()LBlockPropertyStructureMode; getUsageMode
TileEntityStructure$UpdateType a UPDATE_DATA
TileEntityStructure$UpdateType b SAVE_AREA
TileEntityStructure$UpdateType c LOAD_AREA
TileEntityStructure$UpdateType d SCAN_AREA
TileEntityTypes A SMOKER
TileEntityTypes B BLAST_FURNACE
TileEntityTypes C LECTERN
TileEntityTypes D BELL
TileEntityTypes E JIGSAW
TileEntityTypes F CAMPFIRE
TileEntityTypes G BEEHIVE
TileEntityTypes a (LBlock;)Z isValidBlock
TileEntityTypes a FURNACE
TileEntityTypes b CHEST
TileEntityTypes c TRAPPED_CHEST
TileEntityTypes d ENDER_CHEST
TileEntityTypes e JUKEBOX
TileEntityTypes f DISPENSER
TileEntityTypes g DROPPER
TileEntityTypes h SIGN
TileEntityTypes i MOB_SPAWNER
TileEntityTypes j PISTON
TileEntityTypes k BREWING_STAND
TileEntityTypes l ENCHANTING_TABLE
TileEntityTypes m END_PORTAL
TileEntityTypes n BEACON
TileEntityTypes o SKULL
TileEntityTypes p DAYLIGHT_DETECTOR
TileEntityTypes q HOPPER
TileEntityTypes r COMPARATOR
TileEntityTypes s BANNER
TileEntityTypes t STRUCTURE_BLOCK
TileEntityTypes u END_GATEWAY
TileEntityTypes v COMMAND_BLOCK
TileEntityTypes w SHULKER_BOX
TileEntityTypes x BED
TileEntityTypes y CONDUIT
TileEntityTypes z BARREL
Unit a INSTANCE
UserCache a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; getProfile
UserCache a (Ljava/util/UUID;)Lcom/mojang/authlib/GameProfile; getProfile
Vec3D b (DDD)LVec3D; add
Vec3D b x
Vec3D c y
Vec3D d z
Vec3D g (LVec3D;)D distanceSquared
Vector3f a x
Vector3f b ()F getX
Vector3f b y
Vector3f c ()F getY
Vector3f c z
Vector3f d ()F getZ
VillagePlace$Occupancy a HAS_SPACE
VillagePlace$Occupancy b IS_OCCUPIED
VillagePlace$Occupancy c ANY
VillageSiege$State a SIEGE_CAN_ACTIVATE
VillageSiege$State b SIEGE_TONIGHT
VillageSiege$State c SIEGE_DONE
VillagerData a ()LVillagerType; getType
VillagerData a (I)LVillagerData; withLevel
VillagerData a (LVillagerProfession;)LVillagerData; withProfession
VillagerData a (LVillagerType;)LVillagerData; withType
VillagerData b ()LVillagerProfession; getProfession
VillagerData c ()I getLevel
VillagerDataHolder eY ()LVillagerData; getVillagerData
VillagerProfession a NONE
VillagerProfession b ARMORER
VillagerProfession c BUTCHER
VillagerProfession d CARTOGRAPHER
VillagerProfession e CLERIC
VillagerProfession f FARMER
VillagerProfession g FISHERMAN
VillagerProfession h FLETCHER
VillagerProfession i LEATHERWORKER
VillagerProfession j LIBRARIAN
VillagerProfession k MASON
VillagerProfession l NITWIT
VillagerProfession m SHEPHERD
VillagerProfession n TOOLSMITH
VillagerProfession o WEAPONSMITH
VillagerType a DESERT
VillagerType b JUNGLE
VillagerType c PLAINS
VillagerType d SAVANNA
VillagerType e SNOW
VillagerType f SWAMP
VillagerType g TAIGA
VirtualLevelReadable a (LHeightMap$Type;LBlockPosition;)LBlockPosition; getHighestBlockYAt
VoxelShape a ()LAxisAlignedBB; getBoundingBox
VoxelShape a (LVec3D;LVec3D;LBlockPosition;)LMovingObjectPositionBlock; rayTrace
VoxelShape b ()Z isEmpty
VoxelShapes a (DDDDDD)LVoxelShape; create
WeightedRandomEnchant b enchantment
WeightedRandomEnchant c level
WhiteList a (Lcom/mojang/authlib/GameProfile;)Z isWhitelisted
World A biomeManager
World B dimensionKey
World C typeKey
World D ()LScoreboard; getScoreboard
World J ()Z isDay
World K ()Z isNight
World L ()V tickBlockEntities
World Q ()J getTime
World R ()J getDayTime
World S ()LGameRules; getGameRules
World U ()Z isRaining
World V ()LResourceKey; getTypeKey
World W ()LResourceKey; getDimensionKey
World X ()LGameProfilerFiller; getMethodProfiler
World Y ()Ljava/util/function/Supplier; getMethodProfilerSupplier
World Z ()Z isDebugWorld
World a (I)LEntity; getEntity
World a (LBlockPosition;LBlock;II)V playBlockAction
World a (LBlockPosition;LEnumDirection;)Z isBlockFacePowered
World a (LBlockPosition;LIBlockData;)Z setTypeUpdate
World a (LBlockPosition;LIBlockData;LIBlockData;I)V notify
World a (LBlockPosition;LTileEntity;)V setTileEntity
World a (LEntity;B)V broadcastEntityEffect
World a (LEntity;DDDFLExplosion$Effect;)LExplosion; explode
World a (LEntity;DDDFZLExplosion$Effect;)LExplosion; createExplosion
World a (LEntity;LAxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
World a (LEntity;LDamageSource;LExplosionDamageCalculator;DDDFZLExplosion$Effect;)LExplosion; createExplosion
World a (LEntityHuman;DDDLSoundEffect;LSoundCategory;FF)V playSound
World a (LEntityHuman;LEntity;LSoundEffect;LSoundCategory;FF)V playSound
World b (LBlockPosition;LBlock;)V applyPhysics
World b (LBlockPosition;LEnumDirection;)I getBlockFacePower
World b (ZZ)V setSpawnFlags
World b serverThread
World c (LBlockPosition;LBlock;)V updateAdjacentComparators
World c debugWorld
World g OVERWORLD
World h THE_NETHER
World i THE_END
World j (LBlockPosition;)Z isValidLocation
World j tileEntityList
World k tileEntityListTick
World l ()Lnet/minecraft/server/MinecraftServer; getMinecraftServer
World l (LBlockPosition;)Z isOutsideWorld
World l tileEntityListPending
World m tileEntityListUnload
World n (LBlockPosition;)LChunk; getChunkAtWorldCoords
World o ()LCraftingManager; getCraftingManager
World o (LBlockPosition;)V removeTileEntity
World p lastRainLevel
World q ()Z isSavingDisabled
World q (LBlockPosition;)I getBlockPower
World q rainLevel
World r (LBlockPosition;)Z isBlockIndirectlyPowered
World r lastThunderLevel
World s thunderLevel
World t ()I getWorldMapCount
World t (LBlockPosition;)Z isRainingAt
World t random
World u worldData
World v isClientSide
World w tickingTileEntities
World y methodProfiler
World z worldBorder
WorldBorder a ()D getCenterX
WorldBorder a (D)V setSize
WorldBorder a (DDJ)V transitionSizeBetween
WorldBorder a (LChunkCoordIntPair;)Z isInBounds
WorldBorder b ()D getCenterZ
WorldBorder b (D)V setDamageBuffer
WorldBorder b (I)V setWarningTime
WorldBorder c (D)V setDamageAmount
WorldBorder c (DD)V setCenter
WorldBorder c (I)V setWarningDistance
WorldBorder i ()D getSize
WorldBorder n ()D getDamageBuffer
WorldBorder o ()D getDamageAmount
WorldBorder q ()I getWarningTime
WorldBorder r ()I getWarningDistance
WorldData b (Z)V setStorm
WorldData d ()J getTime
WorldData e ()J getDayTime
WorldData h ()Z isThundering
WorldData j ()Z hasStorm
WorldData m ()Z isHardcore
WorldData r ()LEnumDifficulty; getDifficulty
WorldData s ()Z isDifficultyLocked
WorldDataMutable a (LBlockPosition;)V setSpawn
WorldDataServer o clearWeatherTime
WorldDataServer p raining
WorldDataServer q rainTime
WorldDataServer r thundering
WorldDataServer s thunderTime
WorldDataServer x customBossEvents
WorldDimension b OVERWORLD
WorldDimension c THE_NETHER
WorldDimension d THE_END
WorldGenFeatureDefinedStructurePoolTemplate$Matching a TERRAIN_MATCHING
WorldGenFeatureDefinedStructurePoolTemplate$Matching b RIGID
WorldGenFeatureOceanRuin$Temperature a WARM
WorldGenFeatureOceanRuin$Temperature b COLD
WorldGenFeatureOreConfiguration$Target a NATURAL_STONE
WorldGenFeatureOreConfiguration$Target b NETHERRACK
WorldGenFeatureOreConfiguration$Target c NETHER_ORE_REPLACEABLES
WorldGenFeatureRuinedPortal$Type a STANDARD
WorldGenFeatureRuinedPortal$Type b DESERT
WorldGenFeatureRuinedPortal$Type c JUNGLE
WorldGenFeatureRuinedPortal$Type d SWAMP
WorldGenFeatureRuinedPortal$Type e MOUNTAIN
WorldGenFeatureRuinedPortal$Type f OCEAN
WorldGenFeatureRuinedPortal$Type g NETHER
WorldGenFeatureRuinedPortalPieces$Position a ON_LAND_SURFACE
WorldGenFeatureRuinedPortalPieces$Position b PARTLY_BURIED
WorldGenFeatureRuinedPortalPieces$Position c ON_OCEAN_FLOOR
WorldGenFeatureRuinedPortalPieces$Position d IN_MOUNTAIN
WorldGenFeatureRuinedPortalPieces$Position e UNDERGROUND
WorldGenFeatureRuinedPortalPieces$Position f IN_NETHER
WorldGenMineshaft$Type a NORMAL
WorldGenMineshaft$Type b MESA
WorldGenStage$Decoration a RAW_GENERATION
WorldGenStage$Decoration b LAKES
WorldGenStage$Decoration c LOCAL_MODIFICATIONS
WorldGenStage$Decoration d UNDERGROUND_STRUCTURES
WorldGenStage$Decoration e SURFACE_STRUCTURES
WorldGenStage$Decoration f STRONGHOLDS
WorldGenStage$Decoration g UNDERGROUND_ORES
WorldGenStage$Decoration h UNDERGROUND_DECORATION
WorldGenStage$Decoration i VEGETAL_DECORATION
WorldGenStage$Decoration j TOP_LAYER_MODIFICATION
WorldGenStage$Features a AIR
WorldGenStage$Features b LIQUID
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType a OPENING
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType b WOOD_DOOR
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType c GRATES
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType d IRON_DOOR
WorldGenerator A END_SPIKE
WorldGenerator B END_ISLAND
WorldGenerator C END_GATEWAY
WorldGenerator D SEAGRASS
WorldGenerator E KELP
WorldGenerator F CORAL_TREE
WorldGenerator G CORAL_MUSHROOM
WorldGenerator H CORAL_CLAW
WorldGenerator I SEA_PICKLE
WorldGenerator J SIMPLE_BLOCK
WorldGenerator K BAMBOO
WorldGenerator L HUGE_FUNGUS
WorldGenerator M NETHER_FOREST_VEGETATION
WorldGenerator N WEEPING_VINES
WorldGenerator P BASALT_COLUMNS
WorldGenerator Q DELTA_FEATURE
WorldGenerator R NETHERRACK_REPLACE_BLOBS
WorldGenerator S FILL_LAYER
WorldGenerator T BONUS_CHEST
WorldGenerator U BASALT_PILLAR
WorldGenerator V NO_SURFACE_ORE
WorldGenerator W RANDOM_RANDOM_SELECTOR
WorldGenerator X RANDOM_SELECTOR
WorldGenerator Y SIMPLE_RANDOM_SELECTOR
WorldGenerator Z RANDOM_BOOLEAN_SELECTOR
WorldGenerator a (LGeneratorAccessSeed;LStructureManager;LChunkGenerator;Ljava/util/Random;LBlockPosition;LWorldGenFeatureConfiguration;)Z generate
WorldGenerator aa DECORATED
WorldGenerator ab DECORATED_FLOWER
WorldGenerator b NO_OP
WorldGenerator c TREE
WorldGenerator d FLOWER
WorldGenerator e RANDOM_PATCH
WorldGenerator f BLOCK_PILE
WorldGenerator g SPRING_FEATURE
WorldGenerator h CHORUS_PLANT
WorldGenerator i EMERALD_ORE
WorldGenerator j VOID_START_PLATFORM
WorldGenerator k DESERT_WELL
WorldGenerator l FOSSIL
WorldGenerator m HUGE_RED_MUSHROOM
WorldGenerator n HUGE_BROWN_MUSHROOM
WorldGenerator o ICE_SPIKE
WorldGenerator p GLOWSTONE_BLOB
WorldGenerator q FREEZE_TOP_LAYER
WorldGenerator r VINES
WorldGenerator s MONSTER_ROOM
WorldGenerator t BLUE_ICE
WorldGenerator u ICEBERG
WorldGenerator v FOREST_ROCK
WorldGenerator w DISK
WorldGenerator x ICE_PATCH
WorldGenerator y LAKE
WorldGenerator z ORE
WorldMap a (II)V flagDirty
WorldMap a (LItemStack;LBlockPosition;Ljava/lang/String;LMapIcon$Type;)V decorateMap
WorldMap a centerX
WorldMap b centerZ
WorldMap c map
WorldMap d track
WorldMap e unlimitedTracking
WorldMap f scale
WorldMap g colors
WorldMap h locked
WorldMap j decorations
WorldMap l humans
WorldMap$WorldMapHumanTracker a trackee
WorldMap$WorldMapHumanTracker c worldMap
WorldNBTStorage a ()[Ljava/lang/String; getSeenPlayers
WorldNBTStorage a (LEntityHuman;)V save
WorldNBTStorage b (LEntityHuman;)LNBTTagCompound; load
WorldNBTStorage c playerDir
WorldPersistentData b data
WorldServer A ()Z isFlatWorld
WorldServer A entitiesToAdd
WorldServer B players
WorldServer C ()LEnderDragonBattle; getDragonBattle
WorldServer C chunkProvider
WorldServer D server
WorldServer E worldDataServer
WorldServer F everyoneSleeping
WorldServer G emptyTime
WorldServer H portalTravelAgent
WorldServer I nextTickListBlock
WorldServer J nextTickListFluid
WorldServer K navigators
WorldServer M ticking
WorldServer N mobSpawners
WorldServer O dragonBattle
WorldServer P structureManager
WorldServer a ()LStructureManager; getStructureManager
WorldServer a (IIZ)Z setForceLoaded
WorldServer a (J)V setDayTime
WorldServer a (LChunk;)V unloadChunk
WorldServer a (LEntity;)V entityJoinedWorld
WorldServer a (LEntityPlayer;)V addPlayerCommand
WorldServer a (LIProgressUpdate;ZZ)V save
WorldServer a (Ljava/util/UUID;)LEntity; getEntity
WorldServer a (Ljava/util/function/BooleanSupplier;)V doTick
WorldServer a (ZZ)V doMobSpawning
WorldServer ae ()V wakeupPlayers
WorldServer af ()V clearWeather
WorldServer b (LEntity;)V chunkCheck
WorldServer b (LEntityPlayer;)V addPlayerPortal
WorldServer b tickingEntities
WorldServer c (LEntityPlayer;)V addPlayerJoin
WorldServer c savingDisabled
WorldServer d (LEntity;)Z addEntitySerialized
WorldServer d (LEntityPlayer;)V addPlayerRespawn
WorldServer d persistentRaid
WorldServer e (LEntity;)V addEntityTeleport
WorldServer e (LEntityPlayer;)V removePlayer
WorldServer f (LEntity;)Z addEntityChunk
WorldServer f (LEntityPlayer;)V addPlayer0
WorldServer g (LEntity;)V unregisterEntity
WorldServer h (LEntity;)V removeEntity
WorldServer k (LEntity;)Z addEntity0
WorldServer l (LEntity;)Z isUUIDTaken
WorldServer m (LEntity;)V registerEntity
WorldServer n (LEntity;)V removeEntityFromChunk
WorldServer n_ ()V everyoneSleeping
WorldServer p_ ()V resetEmptyTime
WorldServer q_ ()LPortalTravelAgent; getTravelAgent
WorldServer s ()LWorldPersistentData; getWorldPersistentData
WorldServer u ()LBlockPosition; getSpawn
WorldServer v ()Lit/unimi/dsi/fastutil/longs/LongSet; getForceLoadedChunks
WorldServer y ()LPersistentRaid; getPersistentRaid
WorldServer y entitiesById
WorldServer z entitiesByUUID
WorldSettings a ()Ljava/lang/String; getLevelName
WorldSettings a levelName
WorldSettings b ()LEnumGamemode; getGameType
WorldSettings b gameType
WorldSettings c ()Z isHardcore
WorldSettings c hardcore
WorldSettings d ()LEnumDifficulty; getDifficulty
WorldSettings d difficulty
WorldSettings e allowCommands
WorldSettings f ()LGameRules; getGameRules
WorldSettings f gameRules
net/minecraft/server/Main a (LConvertable$ConversionSession;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Lcom/google/common/collect/ImmutableSet;)V convertWorld
net/minecraft/server/MinecraftServer A onlineMode
net/minecraft/server/MinecraftServer B ()Z getAllowNether
net/minecraft/server/MinecraftServer C pvpMode
net/minecraft/server/MinecraftServer D allowFlight
net/minecraft/server/MinecraftServer E motd
net/minecraft/server/MinecraftServer F ()Ljava/lang/Iterable; getWorlds
net/minecraft/server/MinecraftServer G ()Ljava/lang/String; getVersion
net/minecraft/server/MinecraftServer H ()I getPlayerCount
net/minecraft/server/MinecraftServer I ()I getMaxPlayers
net/minecraft/server/MinecraftServer J ()[Ljava/lang/String; getPlayers
net/minecraft/server/MinecraftServer J demoMode
net/minecraft/server/MinecraftServer K ()Ljava/security/KeyPair; getKeyPair
net/minecraft/server/MinecraftServer L ()I getPort
net/minecraft/server/MinecraftServer M ()Ljava/lang/String; getSinglePlayerName
net/minecraft/server/MinecraftServer M hasTicked
net/minecraft/server/MinecraftServer N ()Z isEmbeddedServer
net/minecraft/server/MinecraftServer N lastOverloadTime
net/minecraft/server/MinecraftServer O ()Z getSpawnMonsters
net/minecraft/server/MinecraftServer P ()Z isDemoMode
net/minecraft/server/MinecraftServer Q ()Ljava/lang/String; getResourcePack
net/minecraft/server/MinecraftServer Q minecraftSessionService
net/minecraft/server/MinecraftServer R ()Ljava/lang/String; getResourcePackHash
net/minecraft/server/MinecraftServer R gameProfileRepository
net/minecraft/server/MinecraftServer S userCache
net/minecraft/server/MinecraftServer T ()Z getOnlineMode
net/minecraft/server/MinecraftServer U serverThread
net/minecraft/server/MinecraftServer V ()Z getSpawnAnimals
net/minecraft/server/MinecraftServer V nextTick
net/minecraft/server/MinecraftServer W ()Z getSpawnNPCs
net/minecraft/server/MinecraftServer X ()Z getPVP
net/minecraft/server/MinecraftServer Y ()Z getAllowFlight
net/minecraft/server/MinecraftServer Z ()Ljava/lang/String; getMotd
net/minecraft/server/MinecraftServer Z resourcePackRepository
net/minecraft/server/MinecraftServer a (I)V setPort
net/minecraft/server/MinecraftServer a (LConvertable$ConversionSession;)V convertWorld
net/minecraft/server/MinecraftServer a (LResourceKey;)LWorldServer; getWorldServer
net/minecraft/server/MinecraftServer a (LWorldPersistentData;)V initializeScoreboards
net/minecraft/server/MinecraftServer a (Ljava/lang/String;Ljava/lang/String;)V setResourcePack
net/minecraft/server/MinecraftServer a (Z)V safeShutdown
net/minecraft/server/MinecraftServer a (ZZZ)Z saveChunks
net/minecraft/server/MinecraftServer aA ()LResourcePackRepository; getResourcePackRepository
net/minecraft/server/MinecraftServer aB ()LCommandDispatcher; getCommandDispatcher
net/minecraft/server/MinecraftServer aC ()LCommandListenerWrapper; getServerCommandListener
net/minecraft/server/MinecraftServer aD ()LCraftingManager; getCraftingManager
net/minecraft/server/MinecraftServer aE ()LTagRegistry; getTagRegistry
net/minecraft/server/MinecraftServer aF ()LScoreboardServer; getScoreboard
net/minecraft/server/MinecraftServer aH ()LLootTableRegistry; getLootTableRegistry
net/minecraft/server/MinecraftServer aJ ()LGameRules; getGameRules
net/minecraft/server/MinecraftServer aK ()LBossBattleCustomData; getBossBattleCustomData
net/minecraft/server/MinecraftServer aO ()LGameProfilerFiller; getMethodProfiler
net/minecraft/server/MinecraftServer aT ()Z isSyncChunkWrites
net/minecraft/server/MinecraftServer aU ()LDefinedStructureManager; getDefinedStructureManager
net/minecraft/server/MinecraftServer aV ()LSaveData; getSaveData
net/minecraft/server/MinecraftServer aX ()Lorg/apache/logging/log4j/Logger; getLogger
net/minecraft/server/MinecraftServer aY ()Z canSleepForTick
net/minecraft/server/MinecraftServer aa ()I getMaxBuildHeight
net/minecraft/server/MinecraftServer aa scoreboardServer
net/minecraft/server/MinecraftServer ab ()Z isStopped
net/minecraft/server/MinecraftServer ab persistentCommandStorage
net/minecraft/server/MinecraftServer ac ()LPlayerList; getPlayerList
net/minecraft/server/MinecraftServer ac bossBattleCustomData
net/minecraft/server/MinecraftServer ad ()LServerConnection; getServerConnection
net/minecraft/server/MinecraftServer ad customFunctionData
net/minecraft/server/MinecraftServer ae circularTimer
net/minecraft/server/MinecraftServer ah executorService
net/minecraft/server/MinecraftServer ai ()I getSpawnProtection
net/minecraft/server/MinecraftServer aj ()Z getForceGamemode
net/minecraft/server/MinecraftServer aj dataPackResources
net/minecraft/server/MinecraftServer am ()I getIdleTimeout
net/minecraft/server/MinecraftServer an ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getMinecraftSessionService
net/minecraft/server/MinecraftServer ao ()Lcom/mojang/authlib/GameProfileRepository; getGameProfileRepository
net/minecraft/server/MinecraftServer ap ()LUserCache; getUserCache
net/minecraft/server/MinecraftServer aq ()LServerPing; getServerPing
net/minecraft/server/MinecraftServer ar ()V invalidatePingSample
net/minecraft/server/MinecraftServer ax ()Lcom/mojang/datafixers/DataFixer; getDataFixer
net/minecraft/server/MinecraftServer ay ()LAdvancementDataWorld; getAdvancementData
net/minecraft/server/MinecraftServer az ()LCustomFunctionData; getFunctionData
net/minecraft/server/MinecraftServer b (LWorldLoadListener;)V loadSpawn
net/minecraft/server/MinecraftServer d ()Z init
net/minecraft/server/MinecraftServer d (I)V setIdleTimeout
net/minecraft/server/MinecraftServer d (LTickTask;)Z canExecute
net/minecraft/server/MinecraftServer d (Z)V setOnlineMode
net/minecraft/server/MinecraftServer d convertable
net/minecraft/server/MinecraftServer e ()V exit
net/minecraft/server/MinecraftServer e (Ljava/lang/String;)V setMotd
net/minecraft/server/MinecraftServer e worldNBTStorage
net/minecraft/server/MinecraftServer f ()Z isHardcore
net/minecraft/server/MinecraftServer f (Z)V setPVP
net/minecraft/server/MinecraftServer g (Z)V setAllowFlight
net/minecraft/server/MinecraftServer g proxy
net/minecraft/server/MinecraftServer h (Z)V setForceGamemode
net/minecraft/server/MinecraftServer i saveData
net/minecraft/server/MinecraftServer k snooper
net/minecraft/server/MinecraftServer l ()Z getEnableCommandBlock
net/minecraft/server/MinecraftServer l tickables
net/minecraft/server/MinecraftServer l_ ()V loadWorld
net/minecraft/server/MinecraftServer n ()Ljava/util/Optional; getModded
net/minecraft/server/MinecraftServer n methodProfiler
net/minecraft/server/MinecraftServer o serverConnection
net/minecraft/server/MinecraftServer p ()V updateWorldSettings
net/minecraft/server/MinecraftServer p worldLoadListenerFactory
net/minecraft/server/MinecraftServer q ()V loadResourcesZip
net/minecraft/server/MinecraftServer q serverPing
net/minecraft/server/MinecraftServer r ()LEnumGamemode; getGamemode
net/minecraft/server/MinecraftServer s ()V stop
net/minecraft/server/MinecraftServer s dataConverterManager
net/minecraft/server/MinecraftServer t ()Ljava/lang/String; getServerIp
net/minecraft/server/MinecraftServer t serverIp
net/minecraft/server/MinecraftServer u ()Z isRunning
net/minecraft/server/MinecraftServer u serverPort
net/minecraft/server/MinecraftServer v worldServer
net/minecraft/server/MinecraftServer w ()V sleepForTick
net/minecraft/server/MinecraftServer w playerList
net/minecraft/server/MinecraftServer x isRunning
net/minecraft/server/MinecraftServer y isStopped
net/minecraft/server/MinecraftServer z ticks
