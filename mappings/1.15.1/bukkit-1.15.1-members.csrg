# (c) 2019 SpigotMC Pty. Ltd.
Activity a CORE
Activity b IDLE
Activity c WORK
Activity d PLAY
Activity e REST
Activity f MEET
Activity g PANIC
Activity h RAID
Activity i PRE_RAID
Activity j HIDE
Advancement f ()Ljava/util/Map; getCriteria
Advancement h ()LMinecraftKey; getName
AdvancementDataPlayer a (LAdvancement;Ljava/lang/String;)Z grantCriteria
AdvancementDataPlayer b (LAdvancement;)LAdvancementProgress; getProgress
AdvancementDataPlayer b (LAdvancement;Ljava/lang/String;)Z revokeCritera
AdvancementDataPlayer f data
AdvancementDataPlayer j player
AdvancementDataWorld a ()Ljava/util/Collection; getAdvancements
AdvancementDataWorld b DESERIALIZER
AdvancementDataWorld c REGISTRY
AdvancementFrameType a TASK
AdvancementFrameType b CHALLENGE
AdvancementFrameType c GOAL
AdvancementProgress a ()Z isDone
AdvancementProgress c (Ljava/lang/String;)LCriterionProgress; getCriterionProgress
AdvancementProgress e ()Ljava/lang/Iterable; getRemainingCriteria
AdvancementProgress f ()Ljava/lang/Iterable; getAwardedCriteria
AdvancementRequirements a AND
AdvancementRequirements b OR
Advancements b advancements
ArgumentAnchor$Anchor a FEET
ArgumentAnchor$Anchor b EYES
ArgumentBlock a ()Ljava/util/Map; getStateMap
ArgumentBlock b ()LIBlockData; getBlockData
ArgumentEntity b ()LArgumentEntity; multipleEntities
ArgumentParserSelector T checkPermissions
ArgumentParserSelector b ()V parseSelector
ArgumentParserSelector t ()LEntitySelector; parse
AttributeInstance a ()LIAttribute; getAttribute
AttributeInstance a (D)V setValue
AttributeInstance b ()D getBaseValue
AttributeInstance b (LAttributeModifier;)V addModifier
AttributeInstance c ()Ljava/util/Set; getModifiers
AttributeInstance c (LAttributeModifier;)V removeModifier
AttributeInstance e ()D getValue
AttributeMapServer b ()Ljava/util/Set; getAttributes
AttributeModifier a ()Ljava/util/UUID; getUniqueId
AttributeModifier b ()Ljava/lang/String; getName
AttributeModifier c ()LAttributeModifier$Operation; getOperation
AttributeModifier d ()D getAmount
AttributeModifier$Operation a ADDITION
AttributeModifier$Operation b MULTIPLY_BASE
AttributeModifier$Operation c MULTIPLY_TOTAL
AttributeRanged b maximum
AxisAlignedBB a minX
AxisAlignedBB b minY
AxisAlignedBB c (DDD)LAxisAlignedBB; grow
AxisAlignedBB c minZ
AxisAlignedBB d maxX
AxisAlignedBB e maxY
AxisAlignedBB f maxZ
AxisAlignedBB h (D)LAxisAlignedBB; shrink
BaseBlockPosition a (DDDZ)D distanceSquared
BaseBlockPosition b (LEnumDirection;I)LBaseBlockPosition; shift
BaseBlockPosition e ZERO
BaseBlockPosition l (I)LBaseBlockPosition; down
BaseBlockPosition m ()LBaseBlockPosition; down
BaseBlockPosition o ()I getX
BaseBlockPosition p ()I getY
BaseBlockPosition q ()I getZ
Behavior$Status a STOPPED
Behavior$Status b RUNNING
BehaviorController a (LMemoryModuleType;)Z hasMemory
BehaviorController a (LMemoryModuleType;Ljava/lang/Object;)V setMemory
BehaviorController a (LMemoryModuleType;Ljava/util/Optional;)V setMemory
BehaviorController a (LSchedule;)V setSchedule
BehaviorController a memories
BehaviorController b ()LSchedule; getSchedule
BehaviorController b (LMemoryModuleType;)V removeMemory
BehaviorController b sensors
BehaviorController c (LMemoryModuleType;)Ljava/util/Optional; getMemory
BehaviorController d schedule
BehaviorGate$Execution a RUN_ONE
BehaviorGate$Execution b TRY_ALL
BehaviorGate$Order a ORDERED
BehaviorGate$Order b SHUFFLED
BiomeBase a (LEnumCreatureType;)Ljava/util/List; getMobs
BiomeBase b (LBlockPosition;)F getAdjustedTemperature
BiomeBase j ()F getHumidity
BiomeBase n ()F getTemperature
BiomeBase$EnumTemperature a OCEAN
BiomeBase$EnumTemperature b COLD
BiomeBase$EnumTemperature c MEDIUM
BiomeBase$EnumTemperature d WARM
BiomeBase$Geography a NONE
BiomeBase$Geography b TAIGA
BiomeBase$Geography c EXTREME_HILLS
BiomeBase$Geography d JUNGLE
BiomeBase$Geography e MESA
BiomeBase$Geography f PLAINS
BiomeBase$Geography g SAVANNA
BiomeBase$Geography h ICY
BiomeBase$Geography i THEEND
BiomeBase$Geography j BEACH
BiomeBase$Geography k FOREST
BiomeBase$Geography l OCEAN
BiomeBase$Geography m DESERT
BiomeBase$Geography n RIVER
BiomeBase$Geography o SWAMP
BiomeBase$Geography p MUSHROOM
BiomeBase$Geography q NETHER
BiomeBase$Precipitation a NONE
BiomeBase$Precipitation b RAIN
BiomeBase$Precipitation c SNOW
BiomeDecoratorGroups a NORMAL_TREE
BiomeDecoratorGroups aA IRON_ORE
BiomeDecoratorGroups aB GOLD_ORE
BiomeDecoratorGroups aC REDSTONE_ORE
BiomeDecoratorGroups aD DIAMOND_ORE
BiomeDecoratorGroups aE LAPIS_ORE
BiomeDecoratorGroups aF STONE
BiomeDecoratorGroups aG EMERALD_ORE
BiomeDecoratorGroups aH INFESTED_STONE
BiomeDecoratorGroups aI SAND
BiomeDecoratorGroups aJ CLAY
BiomeDecoratorGroups aK GRASS_BLOCK
BiomeDecoratorGroups aL MOSSY_COBBLESTONE
BiomeDecoratorGroups aM LARGE_FERN
BiomeDecoratorGroups aN TALL_GRASS
BiomeDecoratorGroups aO LILAC
BiomeDecoratorGroups aP ROSE_BUSH
BiomeDecoratorGroups aQ PEONY
BiomeDecoratorGroups aR BROWN_MUSHROOM
BiomeDecoratorGroups aS RED_MUSHROOM
BiomeDecoratorGroups aT SEAGRASS
BiomeDecoratorGroups aU PACKED_ICE
BiomeDecoratorGroups aV BLUE_ICE
BiomeDecoratorGroups aW LILY_OF_THE_VALLEY
BiomeDecoratorGroups aX BLUE_ORCHID
BiomeDecoratorGroups aY POPPY
BiomeDecoratorGroups aZ DANDELION
BiomeDecoratorGroups ab HUGE_RED_MUSHROOM
BiomeDecoratorGroups ac HUGE_BROWN_MUSHROOM
BiomeDecoratorGroups ad GRASS
BiomeDecoratorGroups ae FERN
BiomeDecoratorGroups af PODZOL
BiomeDecoratorGroups ag OAK_LOG
BiomeDecoratorGroups ah OAK_LEAVES
BiomeDecoratorGroups ai JUNGLE_LOG
BiomeDecoratorGroups aj JUNGLE_LEAVES
BiomeDecoratorGroups ak SPRUCE_LOG
BiomeDecoratorGroups al SPRUCE_LEAVES
BiomeDecoratorGroups am ACACIA_LOG
BiomeDecoratorGroups an ACACIA_LEAVES
BiomeDecoratorGroups ao BIRCH_LOG
BiomeDecoratorGroups ap BIRCH_LEAVES
BiomeDecoratorGroups aq DARK_OAK_LOG
BiomeDecoratorGroups ar DARK_OAK_LEAVES
BiomeDecoratorGroups as WATER
BiomeDecoratorGroups at LAVA
BiomeDecoratorGroups au DIRT
BiomeDecoratorGroups av GRAVEL
BiomeDecoratorGroups aw GRANITE
BiomeDecoratorGroups ax DIORITE
BiomeDecoratorGroups ay ANDESITE
BiomeDecoratorGroups az COAL_ORE
BiomeDecoratorGroups b JUNGLE_TREE
BiomeDecoratorGroups ba DEAD_BUSH
BiomeDecoratorGroups bb MELON
BiomeDecoratorGroups bc PUMPKIN
BiomeDecoratorGroups bd SWEET_BERRY_BUSH
BiomeDecoratorGroups be FIRE
BiomeDecoratorGroups bf NETHERRACK
BiomeDecoratorGroups bg LILY_PAD
BiomeDecoratorGroups bh SNOW
BiomeDecoratorGroups bi JACK_O_LANTERN
BiomeDecoratorGroups bj SUNFLOWER
BiomeDecoratorGroups bk CACTUS
BiomeDecoratorGroups bl SUGAR_CANE
BiomeDecoratorGroups bm RED_MUSHROOM_BLOCK
BiomeDecoratorGroups bn BROWN_MUSHROOM_BLOCK
BiomeDecoratorGroups bo MUSHROOM_STEM
BiomeDecoratorGroups c JUNGLE_TREE_NOVINE
BiomeDecoratorGroups d PINE_TREE
BiomeDecoratorGroups e SPRUCE_TREE
BiomeDecoratorGroups f ACACIA_TREE
BiomeDecoratorGroups g BIRCH_TREE
BiomeDecoratorGroups h TALL_BIRCH_TREE
BiomeDecoratorGroups i SWAMP_TREE
BiomeDecoratorGroups j FANCY_TREE
BiomeDecoratorGroups p JUNGLE_BUSH
BiomeDecoratorGroups q DARK_OAK_TREE
BiomeDecoratorGroups r MEGA_SPRUCE_TREE
BiomeDecoratorGroups s MEGA_PINE_TREE
BiomeDecoratorGroups t MEGA_JUNGLE_TREE
BiomeManager$Provider b (III)LBiomeBase; getBiome
Biomes A STONE_SHORE
Biomes B SNOWY_BEACH
Biomes C BIRCH_FOREST
Biomes D BIRCH_FOREST_HILLS
Biomes E DARK_FOREST
Biomes F SNOWY_TAIGA
Biomes G SNOWY_TAIGA_HILLS
Biomes H GIANT_TREE_TAIGA
Biomes I GIANT_TREE_TAIGA_HILLS
Biomes J WOODED_MOUNTAINS
Biomes K SAVANNA
Biomes L SAVANNA_PLATEAU
Biomes M BADLANDS
Biomes N WOODED_BADLANDS_PLATEAU
Biomes O BADLANDS_PLATEAU
Biomes P SMALL_END_ISLANDS
Biomes Q END_MIDLANDS
Biomes R END_HIGHLANDS
Biomes S END_BARRENS
Biomes T WARM_OCEAN
Biomes U LUKEWARM_OCEAN
Biomes V COLD_OCEAN
Biomes W DEEP_WARM_OCEAN
Biomes X DEEP_LUKEWARM_OCEAN
Biomes Y DEEP_COLD_OCEAN
Biomes Z DEEP_FROZEN_OCEAN
Biomes a OCEAN
Biomes aa THE_VOID
Biomes ab SUNFLOWER_PLAINS
Biomes ac DESERT_LAKES
Biomes ad GRAVELLY_MOUNTAINS
Biomes ae FLOWER_FOREST
Biomes af TAIGA_MOUNTAINS
Biomes ag SWAMP_HILLS
Biomes ah ICE_SPIKES
Biomes ai MODIFIED_JUNGLE
Biomes aj MODIFIED_JUNGLE_EDGE
Biomes ak TALL_BIRCH_FOREST
Biomes al TALL_BIRCH_HILLS
Biomes am DARK_FOREST_HILLS
Biomes an SNOWY_TAIGA_MOUNTAINS
Biomes ao GIANT_SPRUCE_TAIGA
Biomes ap GIANT_SPRUCE_TAIGA_HILLS
Biomes aq MODIFIED_GRAVELLY_MOUNTAINS
Biomes ar SHATTERED_SAVANNA
Biomes as SHATTERED_SAVANNA_PLATEAU
Biomes at ERODED_BADLANDS
Biomes au MODIFIED_WOODED_BADLANDS_PLATEAU
Biomes av MODIFIED_BADLANDS_PLATEAU
Biomes aw BAMBOO_JUNGLE
Biomes ax BAMBOO_JUNGLE_HILLS
Biomes c PLAINS
Biomes d DESERT
Biomes e MOUNTAINS
Biomes f FOREST
Biomes g TAIGA
Biomes h SWAMP
Biomes i RIVER
Biomes j NETHER
Biomes k THE_END
Biomes l FROZEN_OCEAN
Biomes m FROZEN_RIVER
Biomes n SNOWY_TUNDRA
Biomes o SNOWY_MOUNTAINS
Biomes p MUSHROOM_FIELDS
Biomes q MUSHROOM_FIELD_SHORE
Biomes r BEACH
Biomes s DESERT_HILLS
Biomes t WOODED_HILLS
Biomes u TAIGA_HILLS
Biomes v MOUNTAIN_EDGE
Biomes w JUNGLE
Biomes x JUNGLE_HILLS
Biomes y JUNGLE_EDGE
Biomes z DEEP_OCEAN
Block a (I)LIBlockData; getByCombinedId
Block a (LBlockActionContext;)LIBlockData; getPlacedState
Block a (LGeneratorAccess;LBlockPosition;LIBlockData;)V postBreak
Block a (LIBlockData;LEntityHuman;LIBlockAccess;LBlockPosition;)F getDamage
Block a (LIBlockData;LEnumDirection;LIBlockData;LGeneratorAccess;LBlockPosition;LBlockPosition;)LIBlockData; updateState
Block a (LIBlockData;LIWorldReader;LBlockPosition;)Z canPlace
Block a (LIBlockData;LWorld;LBlockPosition;LBlock;LBlockPosition;Z)V doPhysics
Block a (LIBlockData;LWorld;LBlockPosition;LEntityHuman;)V attack
Block a (LIBlockData;LWorld;LBlockPosition;LEntityHuman;LEnumHand;LMovingObjectPositionBlock;)LEnumInteractionResult; interact
Block a (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V remove
Block a (LIBlockData;LWorld;LBlockPosition;LItemStack;)V dropNaturally
Block a (LIBlockData;LWorld;LBlockPosition;LTileEntity;LEntity;LItemStack;)V dropItems
Block a (LIBlockData;LWorldServer;LBlockPosition;LTileEntity;LEntity;LItemStack;)Ljava/util/List; getDrops
Block a (LIBlockData;LWorldServer;LBlockPosition;Ljava/util/Random;)V tick
Block a (LItem;)LBlock; asBlock
Block a (LWorld;LBlockPosition;I)V dropExperience
Block a (LWorld;LBlockPosition;LEntity;)V stepOn
Block a (LWorld;LBlockPosition;LEntity;F)V fallOn
Block a (LWorld;LBlockPosition;LExplosion;)V wasExploded
Block a (LWorld;LBlockPosition;LIBlockData;LEntityLiving;LItemStack;)V postPlace
Block b (LIBlockData;)Z isComplexRedstone
Block b (LIBlockData;LWorld;LBlockPosition;)LITileInventory; getInventory
Block b (LIBlockData;LWorld;LBlockPosition;LIBlockData;Z)V onPlace
Block d (LIBlockData;LIBlockAccess;LBlockPosition;)Z isOccluding
Block e frictionFactor
Block f ()Z isTileEntity
Block f (LIBlockData;)Z isPowerSource
Block g (LIBlockData;)LEnumPistonReaction; getPushReaction
Block h ()F getDurability
Block h blockData
Block j (LIBlockData;)I getCombinedId
Block l (LIBlockData;)Z isTicking
Block m REGISTRY_ID
Block o ()LBlockStateList; getStates
Block o strength
Block p ()LIBlockData; getBlockData
Block p durability
Block q (LIBlockData;)LSoundEffectType; getStepSound
Block r stepSound
Block s material
Block u blockStateList
Block w name
Block$EnumRandomOffset a NONE
Block$EnumRandomOffset b XZ
Block$EnumRandomOffset c XYZ
BlockAccessAir a INSTANCE
BlockAnvil a FACING
BlockAttachable C FACE
BlockBanner a ROTATION
BlockBannerAbstract b ()LEnumColor; getColor
BlockBed a PART
BlockBed b OCCUPIED
BlockBed w color
BlockBrewingStand a HAS_BOTTLE
BlockButtonAbstract a POWERED
BlockCactus a AGE
BlockCake a BITES
BlockCarpet b color
BlockCauldron a LEVEL
BlockChest a (LBlockChest;LIBlockData;LWorld;LBlockPosition;Z)LIInventory; getInventory
BlockChest b FACING
BlockChorusFlower a AGE
BlockCobbleWall i UP
BlockCocoa a AGE
BlockConcretePowder r (LIBlockData;)Z canHarden
BlockCrops b (I)LIBlockData; setAge
BlockCrops b AGE
BlockCrops i (LIBlockData;)Z isRipe
BlockDataAbstract c STATE_TO_VALUE
BlockDaylightDetector a POWER
BlockDiodeAbstract r (LIBlockData;)Z isDiode
BlockDirectional a FACING
BlockDispenser a (LWorld;LBlockPosition;)V dispense
BlockDispenser a FACING
BlockDispenser b TRIGGERED
BlockDispenser c REGISTRY
BlockDoor a (LWorld;LBlockPosition;Z)V setDoor
BlockDoor a FACING
BlockDoor b OPEN
BlockDoor c HINGE
BlockDoor d POWERED
BlockDoor e HALF
BlockEnderChest b FACING
BlockEnderPortalFrame a FACING
BlockEnderPortalFrame b EYE
BlockFacingHorizontal ay FACING
BlockFalling h (LIBlockData;)Z canFallThrough
BlockFenceGate a OPEN
BlockFenceGate b POWERED
BlockFenceGate c IN_WALL
BlockFire a AGE
BlockFire b (LIBlockAccess;LBlockPosition;)Z canBurn
BlockFire b NORTH
BlockFire c EAST
BlockFire d SOUTH
BlockFire e WEST
BlockFire f UPPER
BlockFire h flameChances
BlockFloorSign c ROTATION
BlockFluids a (LGeneratorAccess;LBlockPosition;)V fizz
BlockFluids a LEVEL
BlockFurnace a FACING
BlockFurnace b LIT
BlockHopper a FACING
BlockHopper b ENABLED
BlockIce d (LIBlockData;LWorld;LBlockPosition;)V melt
BlockJukeBox a (LWorld;LBlockPosition;)V dropRecord
BlockJukeBox a HAS_RECORD
BlockLadder a FACING
BlockLeaves a DISTANCE
BlockLeaves b PERSISTENT
BlockLectern a (LWorld;LBlockPosition;LIBlockData;Z)V setHasBook
BlockLever a POWERED
BlockMinecartDetector c SHAPE
BlockMinecartDetector d POWERED
BlockMinecartTrack c SHAPE
BlockNetherWart a AGE
BlockNote a (LWorld;LBlockPosition;)V play
BlockNote a INSTRUMENT
BlockNote b POWERED
BlockNote c NOTE
BlockPiston b EXTENDED
BlockPiston i sticky
BlockPistonExtension b TYPE
BlockPistonExtension c SHORT
BlockPortal a AXIS
BlockPortal$Shape e ()V createPortal
BlockPortal$Shape f position
BlockPortal$Shape g height
BlockPortal$Shape h width
BlockPosition a ()J asLong
BlockPosition a (LEnumDirection;)LBlockPosition; shift
BlockPosition a ZERO
BlockPosition b ()LBlockPosition; up
BlockPosition b (I)LBlockPosition; up
BlockPosition d ()LBlockPosition; north
BlockPosition d (I)LBlockPosition; north
BlockPosition e ()LBlockPosition; south
BlockPosition e (I)LBlockPosition; south
BlockPosition e (J)LBlockPosition; fromLong
BlockPosition f ()LBlockPosition; west
BlockPosition f (I)LBlockPosition; west
BlockPosition g ()LBlockPosition; east
BlockPosition g (I)LBlockPosition; east
BlockPosition h ()LBlockPosition; immutableCopy
BlockPoweredRail c SHAPE
BlockPoweredRail d POWERED
BlockPressurePlateAbstract h (LIBlockData;)I getPower
BlockPressurePlateBinary d POWERED
BlockPressurePlateBinary$EnumMobType a EVERYTHING
BlockPressurePlateBinary$EnumMobType b MOBS
BlockPressurePlateWeighted d POWER
BlockPressurePlateWeighted e weight
BlockPropertyAttachPosition a FLOOR
BlockPropertyAttachPosition b WALL
BlockPropertyAttachPosition c CEILING
BlockPropertyBambooSize a NONE
BlockPropertyBambooSize b SMALL
BlockPropertyBambooSize c LARGE
BlockPropertyBedPart a HEAD
BlockPropertyBedPart b FOOT
BlockPropertyBellAttach a FLOOR
BlockPropertyBellAttach b CEILING
BlockPropertyBellAttach c SINGLE_WALL
BlockPropertyBellAttach d DOUBLE_WALL
BlockPropertyChestType a SINGLE
BlockPropertyChestType b LEFT
BlockPropertyChestType c RIGHT
BlockPropertyComparatorMode a COMPARE
BlockPropertyComparatorMode b SUBTRACT
BlockPropertyDoorHinge a LEFT
BlockPropertyDoorHinge b RIGHT
BlockPropertyDoubleBlockHalf a UPPER
BlockPropertyDoubleBlockHalf b LOWER
BlockPropertyHalf a TOP
BlockPropertyHalf b BOTTOM
BlockPropertyInstrument a HARP
BlockPropertyInstrument b BASEDRUM
BlockPropertyInstrument c SNARE
BlockPropertyInstrument d HAT
BlockPropertyInstrument e BASS
BlockPropertyInstrument f FLUTE
BlockPropertyInstrument g BELL
BlockPropertyInstrument h GUITAR
BlockPropertyInstrument i CHIME
BlockPropertyInstrument j XYLOPHONE
BlockPropertyInstrument k IRON_XYLOPHONE
BlockPropertyInstrument l COW_BELL
BlockPropertyInstrument m DIDGERIDOO
BlockPropertyInstrument n BIT
BlockPropertyInstrument o BANJO
BlockPropertyInstrument p PLING
BlockPropertyPistonType a DEFAULT
BlockPropertyPistonType b STICKY
BlockPropertyRedstoneSide a UP
BlockPropertyRedstoneSide b SIDE
BlockPropertyRedstoneSide c NONE
BlockPropertySlabType a TOP
BlockPropertySlabType b BOTTOM
BlockPropertySlabType c DOUBLE
BlockPropertyStairsShape a STRAIGHT
BlockPropertyStairsShape b INNER_LEFT
BlockPropertyStairsShape c INNER_RIGHT
BlockPropertyStairsShape d OUTER_LEFT
BlockPropertyStairsShape e OUTER_RIGHT
BlockPropertyStructureMode a SAVE
BlockPropertyStructureMode b LOAD
BlockPropertyStructureMode c CORNER
BlockPropertyStructureMode d DATA
BlockPropertyTrackPosition a NORTH_SOUTH
BlockPropertyTrackPosition b EAST_WEST
BlockPropertyTrackPosition c ASCENDING_EAST
BlockPropertyTrackPosition d ASCENDING_WEST
BlockPropertyTrackPosition e ASCENDING_NORTH
BlockPropertyTrackPosition f ASCENDING_SOUTH
BlockPropertyTrackPosition g SOUTH_EAST
BlockPropertyTrackPosition h SOUTH_WEST
BlockPropertyTrackPosition i NORTH_WEST
BlockPropertyTrackPosition j NORTH_EAST
BlockPumpkinCarved d ()LShapeDetector; getSnowmanShape
BlockPumpkinCarved r ()LShapeDetector; getIronGolemShape
BlockRedstoneComparator a MODE
BlockRedstoneOre a (LWorld;LBlockPosition;)V playEffect
BlockRedstoneOre d (LIBlockData;LWorld;LBlockPosition;)V interact
BlockRedstoneTorch a LIT
BlockRedstoneWire a (ILIBlockData;)I getPower
BlockRedstoneWire a NORTH
BlockRedstoneWire b EAST
BlockRedstoneWire c SOUTH
BlockRedstoneWire d WEST
BlockRedstoneWire e POWER
BlockReed a AGE
BlockRepeater a LOCKED
BlockRepeater d DELAY
BlockRotatable a AXIS
BlockSapling a (LWorldServer;LBlockPosition;LIBlockData;Ljava/util/Random;)V grow
BlockSapling a STAGE
BlockShulkerBox c color
BlockSkull$Type a SKELETON
BlockSkull$Type b WITHER_SKELETON
BlockSkull$Type c PLAYER
BlockSkull$Type d ZOMBIE
BlockSkull$Type e CREEPER
BlockSkull$Type f DRAGON
BlockSnow a LAYERS
BlockSoil a MOISTURE
BlockSoil d (LIBlockData;LWorld;LBlockPosition;)V fade
BlockStainedGlass a color
BlockStainedGlassPane i color
BlockStairs a FACING
BlockStairs b HALF
BlockStairs c SHAPE
BlockStateBoolean a (Ljava/lang/String;)LBlockStateBoolean; of
BlockStateDirection a (Ljava/lang/String;)LBlockStateDirection; of
BlockStateEnum a (Ljava/lang/String;Ljava/lang/Class;)LBlockStateEnum; of
BlockStateEnum a (Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)LBlockStateEnum; of
BlockStateInteger a (Ljava/lang/String;II)LBlockStateInteger; of
BlockStateList b ()LIBlockDataHolder; getBlockData
BlockStateList c ()Ljava/lang/Object; getBlock
BlockStem a AGE
BlockStem c blockFruit
BlockTall a NORTH
BlockTall b EAST
BlockTall c SOUTH
BlockTall d WEST
BlockTallPlant a HALF
BlockTrapdoor a OPEN
BlockTrapdoor b HALF
BlockTripwire a POWERED
BlockTripwire b ATTACHED
BlockTripwire c DISARMED
BlockTripwire d NORTH
BlockTripwire e EAST
BlockTripwire f SOUTH
BlockTripwire g WEST
BlockTripwireHook a FACING
BlockTripwireHook b POWERED
BlockTripwireHook c ATTACHED
BlockVine a (LEnumDirection;)LBlockStateBoolean; getDirection
BlockVine a UP
BlockVine b NORTH
BlockVine c EAST
BlockVine d SOUTH
BlockVine e WEST
BlockVine r (LIBlockData;)Z canSpread
BlockWallSign c FACING
Blocks A WATER
Blocks B LAVA
Blocks C SAND
Blocks D RED_SAND
Blocks E GRAVEL
Blocks F GOLD_ORE
Blocks G IRON_ORE
Blocks H COAL_ORE
Blocks I OAK_LOG
Blocks J SPRUCE_LOG
Blocks K BIRCH_LOG
Blocks L JUNGLE_LOG
Blocks M ACACIA_LOG
Blocks N DARK_OAK_LOG
Blocks O STRIPPED_SPRUCE_LOG
Blocks P STRIPPED_BIRCH_LOG
Blocks Q STRIPPED_JUNGLE_LOG
Blocks R STRIPPED_ACACIA_LOG
Blocks S STRIPPED_DARK_OAK_LOG
Blocks T STRIPPED_OAK_LOG
Blocks U OAK_WOOD
Blocks V SPRUCE_WOOD
Blocks W BIRCH_WOOD
Blocks X JUNGLE_WOOD
Blocks Y ACACIA_WOOD
Blocks Z DARK_OAK_WOOD
Blocks a AIR
Blocks aA YELLOW_BED
Blocks aB LIME_BED
Blocks aC PINK_BED
Blocks aD GRAY_BED
Blocks aE LIGHT_GRAY_BED
Blocks aF CYAN_BED
Blocks aG PURPLE_BED
Blocks aH BLUE_BED
Blocks aI BROWN_BED
Blocks aJ GREEN_BED
Blocks aK RED_BED
Blocks aL BLACK_BED
Blocks aM POWERED_RAIL
Blocks aN DETECTOR_RAIL
Blocks aO STICKY_PISTON
Blocks aP COBWEB
Blocks aQ GRASS
Blocks aR FERN
Blocks aS DEAD_BUSH
Blocks aT SEAGRASS
Blocks aU TALL_SEAGRASS
Blocks aV PISTON
Blocks aW PISTON_HEAD
Blocks aX WHITE_WOOL
Blocks aY ORANGE_WOOL
Blocks aZ MAGENTA_WOOL
Blocks aa STRIPPED_OAK_WOOD
Blocks ab STRIPPED_SPRUCE_WOOD
Blocks ac STRIPPED_BIRCH_WOOD
Blocks ad STRIPPED_JUNGLE_WOOD
Blocks ae STRIPPED_ACACIA_WOOD
Blocks af STRIPPED_DARK_OAK_WOOD
Blocks ag OAK_LEAVES
Blocks ah SPRUCE_LEAVES
Blocks ai BIRCH_LEAVES
Blocks aj JUNGLE_LEAVES
Blocks ak ACACIA_LEAVES
Blocks al DARK_OAK_LEAVES
Blocks am SPONGE
Blocks an WET_SPONGE
Blocks ao GLASS
Blocks ap LAPIS_ORE
Blocks aq LAPIS_BLOCK
Blocks ar DISPENSER
Blocks as SANDSTONE
Blocks at CHISELED_SANDSTONE
Blocks au CUT_SANDSTONE
Blocks av NOTE_BLOCK
Blocks aw WHITE_BED
Blocks ax ORANGE_BED
Blocks ay MAGENTA_BED
Blocks az LIGHT_BLUE_BED
Blocks b STONE
Blocks bA LILY_OF_THE_VALLEY
Blocks bB BROWN_MUSHROOM
Blocks bC RED_MUSHROOM
Blocks bD GOLD_BLOCK
Blocks bE IRON_BLOCK
Blocks bF BRICKS
Blocks bG TNT
Blocks bH BOOKSHELF
Blocks bI MOSSY_COBBLESTONE
Blocks bJ OBSIDIAN
Blocks bK TORCH
Blocks bL WALL_TORCH
Blocks bM FIRE
Blocks bN SPAWNER
Blocks bO OAK_STAIRS
Blocks bP CHEST
Blocks bQ REDSTONE_WIRE
Blocks bR DIAMOND_ORE
Blocks bS DIAMOND_BLOCK
Blocks bT CRAFTING_TABLE
Blocks bU WHEAT
Blocks bV FARMLAND
Blocks bW FURNACE
Blocks bX OAK_SIGN
Blocks bY SPRUCE_SIGN
Blocks bZ BIRCH_SIGN
Blocks ba LIGHT_BLUE_WOOL
Blocks bb YELLOW_WOOL
Blocks bc LIME_WOOL
Blocks bd PINK_WOOL
Blocks be GRAY_WOOL
Blocks bf LIGHT_GRAY_WOOL
Blocks bg CYAN_WOOL
Blocks bh PURPLE_WOOL
Blocks bi BLUE_WOOL
Blocks bj BROWN_WOOL
Blocks bk GREEN_WOOL
Blocks bl RED_WOOL
Blocks bm BLACK_WOOL
Blocks bn MOVING_PISTON
Blocks bo DANDELION
Blocks bp POPPY
Blocks bq BLUE_ORCHID
Blocks br ALLIUM
Blocks bs AZURE_BLUET
Blocks bt RED_TULIP
Blocks bu ORANGE_TULIP
Blocks bv WHITE_TULIP
Blocks bw PINK_TULIP
Blocks bx OXEYE_DAISY
Blocks by CORNFLOWER
Blocks bz WITHER_ROSE
Blocks c GRANITE
Blocks cA SNOW
Blocks cB ICE
Blocks cC SNOW_BLOCK
Blocks cD CACTUS
Blocks cE CLAY
Blocks cF SUGAR_CANE
Blocks cG JUKEBOX
Blocks cH OAK_FENCE
Blocks cI PUMPKIN
Blocks cJ NETHERRACK
Blocks cK SOUL_SAND
Blocks cL GLOWSTONE
Blocks cM NETHER_PORTAL
Blocks cN CARVED_PUMPKIN
Blocks cO JACK_O_LANTERN
Blocks cP CAKE
Blocks cQ REPEATER
Blocks cR WHITE_STAINED_GLASS
Blocks cS ORANGE_STAINED_GLASS
Blocks cT MAGENTA_STAINED_GLASS
Blocks cU LIGHT_BLUE_STAINED_GLASS
Blocks cV YELLOW_STAINED_GLASS
Blocks cW LIME_STAINED_GLASS
Blocks cX PINK_STAINED_GLASS
Blocks cY GRAY_STAINED_GLASS
Blocks cZ LIGHT_GRAY_STAINED_GLASS
Blocks ca ACACIA_SIGN
Blocks cb JUNGLE_SIGN
Blocks cc DARK_OAK_SIGN
Blocks cd OAK_DOOR
Blocks ce LADDER
Blocks cf RAIL
Blocks cg COBBLESTONE_STAIRS
Blocks ch OAK_WALL_SIGN
Blocks ci SPRUCE_WALL_SIGN
Blocks cj BIRCH_WALL_SIGN
Blocks ck ACACIA_WALL_SIGN
Blocks cl JUNGLE_WALL_SIGN
Blocks cm DARK_OAK_WALL_SIGN
Blocks cn LEVER
Blocks co STONE_PRESSURE_PLATE
Blocks cp IRON_DOOR
Blocks cq OAK_PRESSURE_PLATE
Blocks cr SPRUCE_PRESSURE_PLATE
Blocks cs BIRCH_PRESSURE_PLATE
Blocks ct JUNGLE_PRESSURE_PLATE
Blocks cu ACACIA_PRESSURE_PLATE
Blocks cv DARK_OAK_PRESSURE_PLATE
Blocks cw REDSTONE_ORE
Blocks cx REDSTONE_TORCH
Blocks cy REDSTONE_WALL_TORCH
Blocks cz STONE_BUTTON
Blocks d POLISHED_GRANITE
Blocks dA IRON_BARS
Blocks dB GLASS_PANE
Blocks dC MELON
Blocks dD ATTACHED_PUMPKIN_STEM
Blocks dE ATTACHED_MELON_STEM
Blocks dF PUMPKIN_STEM
Blocks dG MELON_STEM
Blocks dH VINE
Blocks dI OAK_FENCE_GATE
Blocks dJ BRICK_STAIRS
Blocks dK STONE_BRICK_STAIRS
Blocks dL MYCELIUM
Blocks dM LILY_PAD
Blocks dN NETHER_BRICKS
Blocks dO NETHER_BRICK_FENCE
Blocks dP NETHER_BRICK_STAIRS
Blocks dQ NETHER_WART
Blocks dR ENCHANTING_TABLE
Blocks dS BREWING_STAND
Blocks dT CAULDRON
Blocks dU END_PORTAL
Blocks dV END_PORTAL_FRAME
Blocks dW END_STONE
Blocks dX DRAGON_EGG
Blocks dY REDSTONE_LAMP
Blocks dZ COCOA
Blocks da CYAN_STAINED_GLASS
Blocks db PURPLE_STAINED_GLASS
Blocks dc BLUE_STAINED_GLASS
Blocks dd BROWN_STAINED_GLASS
Blocks de GREEN_STAINED_GLASS
Blocks df RED_STAINED_GLASS
Blocks dg BLACK_STAINED_GLASS
Blocks dh OAK_TRAPDOOR
Blocks di SPRUCE_TRAPDOOR
Blocks dj BIRCH_TRAPDOOR
Blocks dk JUNGLE_TRAPDOOR
Blocks dl ACACIA_TRAPDOOR
Blocks dm DARK_OAK_TRAPDOOR
Blocks dn STONE_BRICKS
Blocks do MOSSY_STONE_BRICKS
Blocks dp CRACKED_STONE_BRICKS
Blocks dq CHISELED_STONE_BRICKS
Blocks dr INFESTED_STONE
Blocks ds INFESTED_COBBLESTONE
Blocks dt INFESTED_STONE_BRICKS
Blocks du INFESTED_MOSSY_STONE_BRICKS
Blocks dv INFESTED_CRACKED_STONE_BRICKS
Blocks dw INFESTED_CHISELED_STONE_BRICKS
Blocks dx BROWN_MUSHROOM_BLOCK
Blocks dy RED_MUSHROOM_BLOCK
Blocks dz MUSHROOM_STEM
Blocks e DIORITE
Blocks eA POTTED_RED_TULIP
Blocks eB POTTED_ORANGE_TULIP
Blocks eC POTTED_WHITE_TULIP
Blocks eD POTTED_PINK_TULIP
Blocks eE POTTED_OXEYE_DAISY
Blocks eF POTTED_CORNFLOWER
Blocks eG POTTED_LILY_OF_THE_VALLEY
Blocks eH POTTED_WITHER_ROSE
Blocks eI POTTED_RED_MUSHROOM
Blocks eJ POTTED_BROWN_MUSHROOM
Blocks eK POTTED_DEAD_BUSH
Blocks eL POTTED_CACTUS
Blocks eM CARROTS
Blocks eN POTATOES
Blocks eO OAK_BUTTON
Blocks eP SPRUCE_BUTTON
Blocks eQ BIRCH_BUTTON
Blocks eR JUNGLE_BUTTON
Blocks eS ACACIA_BUTTON
Blocks eT DARK_OAK_BUTTON
Blocks eU SKELETON_SKULL
Blocks eV SKELETON_WALL_SKULL
Blocks eW WITHER_SKELETON_SKULL
Blocks eX WITHER_SKELETON_WALL_SKULL
Blocks eY ZOMBIE_HEAD
Blocks eZ ZOMBIE_WALL_HEAD
Blocks ea SANDSTONE_STAIRS
Blocks eb EMERALD_ORE
Blocks ec ENDER_CHEST
Blocks ed TRIPWIRE_HOOK
Blocks ee TRIPWIRE
Blocks ef EMERALD_BLOCK
Blocks eg SPRUCE_STAIRS
Blocks eh BIRCH_STAIRS
Blocks ei JUNGLE_STAIRS
Blocks ej COMMAND_BLOCK
Blocks ek BEACON
Blocks el COBBLESTONE_WALL
Blocks em MOSSY_COBBLESTONE_WALL
Blocks en FLOWER_POT
Blocks eo POTTED_OAK_SAPLING
Blocks ep POTTED_SPRUCE_SAPLING
Blocks eq POTTED_BIRCH_SAPLING
Blocks er POTTED_JUNGLE_SAPLING
Blocks es POTTED_ACACIA_SAPLING
Blocks et POTTED_DARK_OAK_SAPLING
Blocks eu POTTED_FERN
Blocks ev POTTED_DANDELION
Blocks ew POTTED_POPPY
Blocks ex POTTED_BLUE_ORCHID
Blocks ey POTTED_ALLIUM
Blocks ez POTTED_AZURE_BLUET
Blocks f POLISHED_DIORITE
Blocks fA LIGHT_BLUE_TERRACOTTA
Blocks fB YELLOW_TERRACOTTA
Blocks fC LIME_TERRACOTTA
Blocks fD PINK_TERRACOTTA
Blocks fE GRAY_TERRACOTTA
Blocks fF LIGHT_GRAY_TERRACOTTA
Blocks fG CYAN_TERRACOTTA
Blocks fH PURPLE_TERRACOTTA
Blocks fI BLUE_TERRACOTTA
Blocks fJ BROWN_TERRACOTTA
Blocks fK GREEN_TERRACOTTA
Blocks fL RED_TERRACOTTA
Blocks fM BLACK_TERRACOTTA
Blocks fN WHITE_STAINED_GLASS_PANE
Blocks fO ORANGE_STAINED_GLASS_PANE
Blocks fP MAGENTA_STAINED_GLASS_PANE
Blocks fQ LIGHT_BLUE_STAINED_GLASS_PANE
Blocks fR YELLOW_STAINED_GLASS_PANE
Blocks fS LIME_STAINED_GLASS_PANE
Blocks fT PINK_STAINED_GLASS_PANE
Blocks fU GRAY_STAINED_GLASS_PANE
Blocks fV LIGHT_GRAY_STAINED_GLASS_PANE
Blocks fW CYAN_STAINED_GLASS_PANE
Blocks fX PURPLE_STAINED_GLASS_PANE
Blocks fY BLUE_STAINED_GLASS_PANE
Blocks fZ BROWN_STAINED_GLASS_PANE
Blocks fa PLAYER_HEAD
Blocks fb PLAYER_WALL_HEAD
Blocks fc CREEPER_HEAD
Blocks fd CREEPER_WALL_HEAD
Blocks fe DRAGON_HEAD
Blocks ff DRAGON_WALL_HEAD
Blocks fg ANVIL
Blocks fh CHIPPED_ANVIL
Blocks fi DAMAGED_ANVIL
Blocks fj TRAPPED_CHEST
Blocks fk LIGHT_WEIGHTED_PRESSURE_PLATE
Blocks fl HEAVY_WEIGHTED_PRESSURE_PLATE
Blocks fm COMPARATOR
Blocks fn DAYLIGHT_DETECTOR
Blocks fo REDSTONE_BLOCK
Blocks fp NETHER_QUARTZ_ORE
Blocks fq HOPPER
Blocks fr QUARTZ_BLOCK
Blocks fs CHISELED_QUARTZ_BLOCK
Blocks ft QUARTZ_PILLAR
Blocks fu QUARTZ_STAIRS
Blocks fv ACTIVATOR_RAIL
Blocks fw DROPPER
Blocks fx WHITE_TERRACOTTA
Blocks fy ORANGE_TERRACOTTA
Blocks fz MAGENTA_TERRACOTTA
Blocks g ANDESITE
Blocks gA GRAY_CARPET
Blocks gB LIGHT_GRAY_CARPET
Blocks gC CYAN_CARPET
Blocks gD PURPLE_CARPET
Blocks gE BLUE_CARPET
Blocks gF BROWN_CARPET
Blocks gG GREEN_CARPET
Blocks gH RED_CARPET
Blocks gI BLACK_CARPET
Blocks gJ TERRACOTTA
Blocks gK COAL_BLOCK
Blocks gL PACKED_ICE
Blocks gM SUNFLOWER
Blocks gN LILAC
Blocks gO ROSE_BUSH
Blocks gP PEONY
Blocks gQ TALL_GRASS
Blocks gR LARGE_FERN
Blocks gS WHITE_BANNER
Blocks gT ORANGE_BANNER
Blocks gU MAGENTA_BANNER
Blocks gV LIGHT_BLUE_BANNER
Blocks gW YELLOW_BANNER
Blocks gX LIME_BANNER
Blocks gY PINK_BANNER
Blocks gZ GRAY_BANNER
Blocks ga GREEN_STAINED_GLASS_PANE
Blocks gb RED_STAINED_GLASS_PANE
Blocks gc BLACK_STAINED_GLASS_PANE
Blocks gd ACACIA_STAIRS
Blocks ge DARK_OAK_STAIRS
Blocks gf SLIME_BLOCK
Blocks gg BARRIER
Blocks gh IRON_TRAPDOOR
Blocks gi PRISMARINE
Blocks gj PRISMARINE_BRICKS
Blocks gk DARK_PRISMARINE
Blocks gl PRISMARINE_STAIRS
Blocks gm PRISMARINE_BRICK_STAIRS
Blocks gn DARK_PRISMARINE_STAIRS
Blocks go PRISMARINE_SLAB
Blocks gp PRISMARINE_BRICK_SLAB
Blocks gq DARK_PRISMARINE_SLAB
Blocks gr SEA_LANTERN
Blocks gs HAY_BLOCK
Blocks gt WHITE_CARPET
Blocks gu ORANGE_CARPET
Blocks gv MAGENTA_CARPET
Blocks gw LIGHT_BLUE_CARPET
Blocks gx YELLOW_CARPET
Blocks gy LIME_CARPET
Blocks gz PINK_CARPET
Blocks h POLISHED_ANDESITE
Blocks hA CUT_RED_SANDSTONE
Blocks hB RED_SANDSTONE_STAIRS
Blocks hC OAK_SLAB
Blocks hD SPRUCE_SLAB
Blocks hE BIRCH_SLAB
Blocks hF JUNGLE_SLAB
Blocks hG ACACIA_SLAB
Blocks hH DARK_OAK_SLAB
Blocks hI STONE_SLAB
Blocks hJ SMOOTH_STONE_SLAB
Blocks hK SANDSTONE_SLAB
Blocks hL CUT_SANDSTONE_SLAB
Blocks hM PETRIFIED_OAK_SLAB
Blocks hN COBBLESTONE_SLAB
Blocks hO BRICK_SLAB
Blocks hP STONE_BRICK_SLAB
Blocks hQ NETHER_BRICK_SLAB
Blocks hR QUARTZ_SLAB
Blocks hS RED_SANDSTONE_SLAB
Blocks hT CUT_RED_SANDSTONE_SLAB
Blocks hU PURPUR_SLAB
Blocks hV SMOOTH_STONE
Blocks hW SMOOTH_SANDSTONE
Blocks hX SMOOTH_QUARTZ
Blocks hY SMOOTH_RED_SANDSTONE
Blocks hZ SPRUCE_FENCE_GATE
Blocks ha LIGHT_GRAY_BANNER
Blocks hb CYAN_BANNER
Blocks hc PURPLE_BANNER
Blocks hd BLUE_BANNER
Blocks he BROWN_BANNER
Blocks hf GREEN_BANNER
Blocks hg RED_BANNER
Blocks hh BLACK_BANNER
Blocks hi WHITE_WALL_BANNER
Blocks hj ORANGE_WALL_BANNER
Blocks hk MAGENTA_WALL_BANNER
Blocks hl LIGHT_BLUE_WALL_BANNER
Blocks hm YELLOW_WALL_BANNER
Blocks hn LIME_WALL_BANNER
Blocks ho PINK_WALL_BANNER
Blocks hp GRAY_WALL_BANNER
Blocks hq LIGHT_GRAY_WALL_BANNER
Blocks hr CYAN_WALL_BANNER
Blocks hs PURPLE_WALL_BANNER
Blocks ht BLUE_WALL_BANNER
Blocks hu BROWN_WALL_BANNER
Blocks hv GREEN_WALL_BANNER
Blocks hw RED_WALL_BANNER
Blocks hx BLACK_WALL_BANNER
Blocks hy RED_SANDSTONE
Blocks hz CHISELED_RED_SANDSTONE
Blocks i GRASS_BLOCK
Blocks iA FROSTED_ICE
Blocks iB MAGMA_BLOCK
Blocks iC NETHER_WART_BLOCK
Blocks iD RED_NETHER_BRICKS
Blocks iE BONE_BLOCK
Blocks iF STRUCTURE_VOID
Blocks iG OBSERVER
Blocks iH SHULKER_BOX
Blocks iI WHITE_SHULKER_BOX
Blocks iJ ORANGE_SHULKER_BOX
Blocks iK MAGENTA_SHULKER_BOX
Blocks iL LIGHT_BLUE_SHULKER_BOX
Blocks iM YELLOW_SHULKER_BOX
Blocks iN LIME_SHULKER_BOX
Blocks iO PINK_SHULKER_BOX
Blocks iP GRAY_SHULKER_BOX
Blocks iQ LIGHT_GRAY_SHULKER_BOX
Blocks iR CYAN_SHULKER_BOX
Blocks iS PURPLE_SHULKER_BOX
Blocks iT BLUE_SHULKER_BOX
Blocks iU BROWN_SHULKER_BOX
Blocks iV GREEN_SHULKER_BOX
Blocks iW RED_SHULKER_BOX
Blocks iX BLACK_SHULKER_BOX
Blocks iY WHITE_GLAZED_TERRACOTTA
Blocks iZ ORANGE_GLAZED_TERRACOTTA
Blocks ia BIRCH_FENCE_GATE
Blocks ib JUNGLE_FENCE_GATE
Blocks ic ACACIA_FENCE_GATE
Blocks id DARK_OAK_FENCE_GATE
Blocks ie SPRUCE_FENCE
Blocks if BIRCH_FENCE
Blocks ig JUNGLE_FENCE
Blocks ih ACACIA_FENCE
Blocks ii DARK_OAK_FENCE
Blocks ij SPRUCE_DOOR
Blocks ik BIRCH_DOOR
Blocks il JUNGLE_DOOR
Blocks im ACACIA_DOOR
Blocks in DARK_OAK_DOOR
Blocks io END_ROD
Blocks ip CHORUS_PLANT
Blocks iq CHORUS_FLOWER
Blocks ir PURPUR_BLOCK
Blocks is PURPUR_PILLAR
Blocks it PURPUR_STAIRS
Blocks iu END_STONE_BRICKS
Blocks iv BEETROOTS
Blocks iw GRASS_PATH
Blocks ix END_GATEWAY
Blocks iy REPEATING_COMMAND_BLOCK
Blocks iz CHAIN_COMMAND_BLOCK
Blocks j DIRT
Blocks jA BROWN_CONCRETE
Blocks jB GREEN_CONCRETE
Blocks jC RED_CONCRETE
Blocks jD BLACK_CONCRETE
Blocks jE WHITE_CONCRETE_POWDER
Blocks jF ORANGE_CONCRETE_POWDER
Blocks jG MAGENTA_CONCRETE_POWDER
Blocks jH LIGHT_BLUE_CONCRETE_POWDER
Blocks jI YELLOW_CONCRETE_POWDER
Blocks jJ LIME_CONCRETE_POWDER
Blocks jK PINK_CONCRETE_POWDER
Blocks jL GRAY_CONCRETE_POWDER
Blocks jM LIGHT_GRAY_CONCRETE_POWDER
Blocks jN CYAN_CONCRETE_POWDER
Blocks jO PURPLE_CONCRETE_POWDER
Blocks jP BLUE_CONCRETE_POWDER
Blocks jQ BROWN_CONCRETE_POWDER
Blocks jR GREEN_CONCRETE_POWDER
Blocks jS RED_CONCRETE_POWDER
Blocks jT BLACK_CONCRETE_POWDER
Blocks jU KELP
Blocks jV KELP_PLANT
Blocks jW DRIED_KELP_BLOCK
Blocks jX TURTLE_EGG
Blocks jY DEAD_TUBE_CORAL_BLOCK
Blocks jZ DEAD_BRAIN_CORAL_BLOCK
Blocks ja MAGENTA_GLAZED_TERRACOTTA
Blocks jb LIGHT_BLUE_GLAZED_TERRACOTTA
Blocks jc YELLOW_GLAZED_TERRACOTTA
Blocks jd LIME_GLAZED_TERRACOTTA
Blocks je PINK_GLAZED_TERRACOTTA
Blocks jf GRAY_GLAZED_TERRACOTTA
Blocks jg LIGHT_GRAY_GLAZED_TERRACOTTA
Blocks jh CYAN_GLAZED_TERRACOTTA
Blocks ji PURPLE_GLAZED_TERRACOTTA
Blocks jj BLUE_GLAZED_TERRACOTTA
Blocks jk BROWN_GLAZED_TERRACOTTA
Blocks jl GREEN_GLAZED_TERRACOTTA
Blocks jm RED_GLAZED_TERRACOTTA
Blocks jn BLACK_GLAZED_TERRACOTTA
Blocks jo WHITE_CONCRETE
Blocks jp ORANGE_CONCRETE
Blocks jq MAGENTA_CONCRETE
Blocks jr LIGHT_BLUE_CONCRETE
Blocks js YELLOW_CONCRETE
Blocks jt LIME_CONCRETE
Blocks ju PINK_CONCRETE
Blocks jv GRAY_CONCRETE
Blocks jw LIGHT_GRAY_CONCRETE
Blocks jx CYAN_CONCRETE
Blocks jy PURPLE_CONCRETE
Blocks jz BLUE_CONCRETE
Blocks k COARSE_DIRT
Blocks kA FIRE_CORAL_FAN
Blocks kB HORN_CORAL_FAN
Blocks kC DEAD_TUBE_CORAL_WALL_FAN
Blocks kD DEAD_BRAIN_CORAL_WALL_FAN
Blocks kE DEAD_BUBBLE_CORAL_WALL_FAN
Blocks kF DEAD_FIRE_CORAL_WALL_FAN
Blocks kG DEAD_HORN_CORAL_WALL_FAN
Blocks kH TUBE_CORAL_WALL_FAN
Blocks kI BRAIN_CORAL_WALL_FAN
Blocks kJ BUBBLE_CORAL_WALL_FAN
Blocks kK FIRE_CORAL_WALL_FAN
Blocks kL HORN_CORAL_WALL_FAN
Blocks kM SEA_PICKLE
Blocks kN BLUE_ICE
Blocks kO CONDUIT
Blocks kP BAMBOO_SAPLING
Blocks kQ BAMBOO
Blocks kR POTTED_BAMBOO
Blocks kS VOID_AIR
Blocks kT CAVE_AIR
Blocks kU BUBBLE_COLUMN
Blocks kV POLISHED_GRANITE_STAIRS
Blocks kW SMOOTH_RED_SANDSTONE_STAIRS
Blocks kX MOSSY_STONE_BRICK_STAIRS
Blocks kY POLISHED_DIORITE_STAIRS
Blocks kZ MOSSY_COBBLESTONE_STAIRS
Blocks ka DEAD_BUBBLE_CORAL_BLOCK
Blocks kb DEAD_FIRE_CORAL_BLOCK
Blocks kc DEAD_HORN_CORAL_BLOCK
Blocks kd TUBE_CORAL_BLOCK
Blocks ke BRAIN_CORAL_BLOCK
Blocks kf BUBBLE_CORAL_BLOCK
Blocks kg FIRE_CORAL_BLOCK
Blocks kh HORN_CORAL_BLOCK
Blocks ki DEAD_TUBE_CORAL
Blocks kj DEAD_BRAIN_CORAL
Blocks kk DEAD_BUBBLE_CORAL
Blocks kl DEAD_FIRE_CORAL
Blocks km DEAD_HORN_CORAL
Blocks kn TUBE_CORAL
Blocks ko BRAIN_CORAL
Blocks kp BUBBLE_CORAL
Blocks kq FIRE_CORAL
Blocks kr HORN_CORAL
Blocks ks DEAD_TUBE_CORAL_FAN
Blocks kt DEAD_BRAIN_CORAL_FAN
Blocks ku DEAD_BUBBLE_CORAL_FAN
Blocks kv DEAD_FIRE_CORAL_FAN
Blocks kw DEAD_HORN_CORAL_FAN
Blocks kx TUBE_CORAL_FAN
Blocks ky BRAIN_CORAL_FAN
Blocks kz BUBBLE_CORAL_FAN
Blocks l PODZOL
Blocks lA GRANITE_WALL
Blocks lB STONE_BRICK_WALL
Blocks lC NETHER_BRICK_WALL
Blocks lD ANDESITE_WALL
Blocks lE RED_NETHER_BRICK_WALL
Blocks lF SANDSTONE_WALL
Blocks lG END_STONE_BRICK_WALL
Blocks lH DIORITE_WALL
Blocks lI SCAFFOLDING
Blocks lJ LOOM
Blocks lK BARREL
Blocks lL SMOKER
Blocks lM BLAST_FURNACE
Blocks lN CARTOGRAPHY_TABLE
Blocks lO FLETCHING_TABLE
Blocks lP GRINDSTONE
Blocks lQ LECTERN
Blocks lR SMITHING_TABLE
Blocks lS STONECUTTER
Blocks lT BELL
Blocks lU LANTERN
Blocks lV CAMPFIRE
Blocks lW SWEET_BERRY_BUSH
Blocks lX STRUCTURE_BLOCK
Blocks lY JIGSAW
Blocks lZ COMPOSTER
Blocks la END_STONE_BRICK_STAIRS
Blocks lb STONE_STAIRS
Blocks lc SMOOTH_SANDSTONE_STAIRS
Blocks ld SMOOTH_QUARTZ_STAIRS
Blocks le GRANITE_STAIRS
Blocks lf ANDESITE_STAIRS
Blocks lg RED_NETHER_BRICK_STAIRS
Blocks lh POLISHED_ANDESITE_STAIRS
Blocks li DIORITE_STAIRS
Blocks lj POLISHED_GRANITE_SLAB
Blocks lk SMOOTH_RED_SANDSTONE_SLAB
Blocks ll MOSSY_STONE_BRICK_SLAB
Blocks lm POLISHED_DIORITE_SLAB
Blocks ln MOSSY_COBBLESTONE_SLAB
Blocks lo END_STONE_BRICK_SLAB
Blocks lp SMOOTH_SANDSTONE_SLAB
Blocks lq SMOOTH_QUARTZ_SLAB
Blocks lr GRANITE_SLAB
Blocks ls ANDESITE_SLAB
Blocks lt RED_NETHER_BRICK_SLAB
Blocks lu POLISHED_ANDESITE_SLAB
Blocks lv DIORITE_SLAB
Blocks lw BRICK_WALL
Blocks lx PRISMARINE_WALL
Blocks ly RED_SANDSTONE_WALL
Blocks lz MOSSY_STONE_BRICK_WALL
Blocks m COBBLESTONE
Blocks ma BEE_NEST
Blocks mb BEEHIVE
Blocks mc HONEY_BLOCK
Blocks md HONEYCOMB_BLOCK
Blocks n OAK_PLANKS
Blocks o SPRUCE_PLANKS
Blocks p BIRCH_PLANKS
Blocks q JUNGLE_PLANKS
Blocks r ACACIA_PLANKS
Blocks s DARK_OAK_PLANKS
Blocks t OAK_SAPLING
Blocks u SPRUCE_SAPLING
Blocks v BIRCH_SAPLING
Blocks w JUNGLE_SAPLING
Blocks x ACACIA_SAPLING
Blocks y DARK_OAK_SAPLING
Blocks z BEDROCK
BossBattle a title
BossBattle c color
BossBattle d style
BossBattle k ()F getProgress
BossBattle n ()Z isDarkenSky
BossBattle o ()Z isPlayMusic
BossBattle p ()Z isCreateFog
BossBattle$BarColor a PINK
BossBattle$BarColor b BLUE
BossBattle$BarColor c RED
BossBattle$BarColor d GREEN
BossBattle$BarColor e YELLOW
BossBattle$BarColor f PURPLE
BossBattle$BarColor g WHITE
BossBattle$BarStyle a PROGRESS
BossBattle$BarStyle b NOTCHED_6
BossBattle$BarStyle c NOTCHED_10
BossBattle$BarStyle d NOTCHED_12
BossBattle$BarStyle e NOTCHED_20
BossBattleCustom a ()LMinecraftKey; getKey
BossBattleCustomData a (LBossBattleCustom;)V remove
BossBattleCustomData a (LMinecraftKey;LIChatBaseComponent;)LBossBattleCustom; register
BossBattleCustomData a (LNBTTagCompound;)V load
BossBattleCustomData b ()Ljava/util/Collection; getBattles
BossBattleCustomData c ()LNBTTagCompound; save
BossBattleServer a (F)V setProgress
BossBattleServer a (LEntityPlayer;)V addPlayer
BossBattleServer a (LPacketPlayOutBoss$Action;)V sendUpdate
BossBattleServer a (Z)LBossBattle; setDarkenSky
BossBattleServer b (LEntityPlayer;)V removePlayer
BossBattleServer b (Z)LBossBattle; setPlayMusic
BossBattleServer c (Z)LBossBattle; setCreateFog
BossBattleServer d (Z)V setVisible
BossBattleServer h ()Ljava/util/Collection; getPlayers
BossBattleServer j visible
CancelledPacketHandleException a INSTANCE
ChatBaseComponent a siblings
ChatClickable$EnumClickAction a OPEN_URL
ChatClickable$EnumClickAction b OPEN_FILE
ChatClickable$EnumClickAction c RUN_COMMAND
ChatClickable$EnumClickAction d SUGGEST_COMMAND
ChatClickable$EnumClickAction e CHANGE_PAGE
ChatClickable$EnumClickAction f COPY_TO_CLIPBOARD
ChatComponentUtils a (LCommandListenerWrapper;LIChatBaseComponent;LEntity;I)LIChatBaseComponent; filterForDisplay
ChatHoverable$EnumHoverAction a SHOW_TEXT
ChatHoverable$EnumHoverAction b SHOW_ITEM
ChatHoverable$EnumHoverAction c SHOW_ENTITY
ChatMessage f key
ChatMessage g args
ChatMessage k ()Ljava/lang/String; getKey
ChatMessage l ()[Ljava/lang/Object; getArgs
ChatMessageType a CHAT
ChatMessageType b SYSTEM
ChatMessageType c GAME_INFO
ChatModifier a ()LEnumChatFormat; getColor
ChatModifier a (LChatClickable;)LChatModifier; setChatClickable
ChatModifier a (LChatHoverable;)LChatModifier; setChatHoverable
ChatModifier a (LChatModifier;)LChatModifier; setChatModifier
ChatModifier a (LEnumChatFormat;)LChatModifier; setColor
ChatModifier a (Ljava/lang/Boolean;)LChatModifier; setBold
ChatModifier a (Ljava/lang/String;)LChatModifier; setInsertion
ChatModifier b ()Z isBold
ChatModifier b (Ljava/lang/Boolean;)LChatModifier; setItalic
ChatModifier b color
ChatModifier c ()Z isItalic
ChatModifier c (Ljava/lang/Boolean;)LChatModifier; setStrikethrough
ChatModifier c bold
ChatModifier d ()Z isStrikethrough
ChatModifier d (Ljava/lang/Boolean;)LChatModifier; setUnderline
ChatModifier d italic
ChatModifier e ()Z isUnderlined
ChatModifier e (Ljava/lang/Boolean;)LChatModifier; setRandom
ChatModifier e underlined
ChatModifier f ()Z isRandom
ChatModifier f strikethrough
ChatModifier g obfuscated
ChatModifier h ()LChatClickable; getClickEvent
ChatModifier h clickEvent
ChatModifier i ()LChatHoverable; getHoverEvent
ChatModifier i hoverEvent
ChatModifier j ()Ljava/lang/String; getInsertion
ChatModifier j insertion
ChatModifier m ()LChatModifier; clone
ChestLock b key
Chunk c (Z)V setLoaded
Chunk c sections
Chunk f loaded
Chunk g world
Chunk h heightMap
Chunk j tileEntities
Chunk k entitySlices
Chunk r lastSaved
Chunk s ()V markDirty
Chunk t ()Z isEmpty
Chunk t inhabitedTime
Chunk u ()LPlayerChunk$State; getState
Chunk w ()V addEntities
Chunk w loc
Chunk x ()LWorld; getWorld
Chunk y ()Ljava/util/Map; getTileEntities
Chunk z ()[LEntitySlice; getEntitySlices
Chunk$EnumTileEntityState a IMMEDIATE
Chunk$EnumTileEntityState b QUEUED
Chunk$EnumTileEntityState c CHECK
ChunkConverter$Type a BLACKLIST
ChunkConverter$Type b DEFAULT
ChunkConverter$Type c CHEST
ChunkConverter$Type d LEAVES
ChunkConverter$Type e STEM_BLOCK
ChunkConverterPalette$Direction a DOWN
ChunkConverterPalette$Direction b UP
ChunkConverterPalette$Direction c NORTH
ChunkConverterPalette$Direction d SOUTH
ChunkConverterPalette$Direction e WEST
ChunkConverterPalette$Direction f EAST
ChunkConverterPalette$Direction$Axis a X
ChunkConverterPalette$Direction$Axis b Y
ChunkConverterPalette$Direction$Axis c Z
ChunkConverterPalette$Direction$AxisDirection a POSITIVE
ChunkConverterPalette$Direction$AxisDirection b NEGATIVE
ChunkCoordIntPair a ()J pair
ChunkCoordIntPair a (II)J pair
ChunkCoordIntPair a (J)I getX
ChunkCoordIntPair b (J)I getZ
ChunkCoordIntPair b x
ChunkCoordIntPair c z
ChunkCoordIntPair h ()I getRegionX
ChunkCoordIntPair i ()I getRegionZ
ChunkGenerator a ()LGeneratorSettingsDefault; getSettings
ChunkGenerator a (IILHeightMap$Type;)I getBaseHeight
ChunkGenerator a (LBiomeBase;LStructureGenerator;)Z canSpawnStructure
ChunkGenerator a (LBiomeManager;LBlockPosition;)LBiomeBase; getBiome
ChunkGenerator a (LBiomeManager;LIChunkAccess;LChunkGenerator;LDefinedStructureManager;)V createStructures
ChunkGenerator a (LBiomeManager;LIChunkAccess;LWorldGenStage$Features;)V doCarving
ChunkGenerator a (LEnumCreatureType;LBlockPosition;)Ljava/util/List; getMobsFor
ChunkGenerator a (LGeneratorAccess;LIChunkAccess;)V storeStructures
ChunkGenerator a (LIChunkAccess;)V createBiomes
ChunkGenerator a (LRegionLimitedWorldAccess;)V addDecorations
ChunkGenerator a (LRegionLimitedWorldAccess;LIChunkAccess;)V buildBase
ChunkGenerator a (LWorld;Ljava/lang/String;LBlockPosition;IZ)LBlockPosition; findNearestMapFeature
ChunkGenerator a (LWorldServer;ZZ)V doMobSpawning
ChunkGenerator b ()I getSpawnHeight
ChunkGenerator b (LBiomeBase;LStructureGenerator;)LWorldGenFeatureConfiguration; getFeatureConfiguration
ChunkGenerator b (LGeneratorAccess;LIChunkAccess;)V buildNoise
ChunkGenerator b (LRegionLimitedWorldAccess;)V addMobs
ChunkGenerator b seed
ChunkGenerator c ()LWorldChunkManager; getWorldChunkManager
ChunkGenerator d ()J getSeed
ChunkGenerator d settings
ChunkGenerator e ()I getGenerationDepth
ChunkGenerator f ()I getSeaLevel
ChunkMapDistance a ()V purgeTickets
ChunkMapDistance a (JLTicket;)V addTicket
ChunkMapDistance b (JLTicket;)V removeTicket
ChunkMapDistance c (LTicketType;LChunkCoordIntPair;ILjava/lang/Object;)V addTicket
ChunkMapDistance d (LTicketType;LChunkCoordIntPair;ILjava/lang/Object;)V removeTicket
ChunkMapDistance d tickets
ChunkMapDistance h pendingChunkUpdates
ChunkMapDistance n currentTick
ChunkProviderServer a (I)V setViewDistance
ChunkProviderServer a (J)LPlayerChunk; getChunk
ChunkProviderServer a (LEntity;LPacket;)V broadcastIncludingSelf
ChunkProviderServer a (LEntityPlayer;)V movePlayer
ChunkProviderServer a (LTicketType;LChunkCoordIntPair;ILjava/lang/Object;)V addTicket
ChunkProviderServer a (Ljava/util/function/BooleanSupplier;)V tick
ChunkProviderServer a (Z)V save
ChunkProviderServer a playerChunkMap
ChunkProviderServer b (II)Z isLoaded
ChunkProviderServer b (LBlockPosition;)V flagDirty
ChunkProviderServer b (LEntity;LPacket;)V broadcast
ChunkProviderServer b (LTicketType;LChunkCoordIntPair;ILjava/lang/Object;)V removeTicket
ChunkProviderServer c (IILChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; getChunkFutureMainThread
ChunkProviderServer c (LEntity;)V removeEntity
ChunkProviderServer d ()Z runTasks
ChunkProviderServer d (LEntity;)V addEntity
ChunkProviderServer d chunkMapDistance
ChunkProviderServer e chunkGenerator
ChunkProviderServer f world
ChunkProviderServer g ()LChunkGenerator; getChunkGenerator
ChunkProviderServer g serverThread
ChunkProviderServer h lightEngine
ChunkProviderServer i ()LWorldPersistentData; getWorldPersistentData
ChunkProviderServer i serverThreadQueue
ChunkProviderServer j worldPersistentData
ChunkProviderServer k lastTickTime
ChunkProviderServer l allowMonsters
ChunkProviderServer m ()V clearCache
ChunkProviderServer m allowAnimals
ChunkProviderServer n ()Z tickDistanceManager
ChunkProviderServer n cachePos
ChunkProviderServer o ()V tickChunks
ChunkProviderServer o cacheStatus
ChunkProviderServer p cacheChunk
ChunkRegionLoader a (LNBTTagCompound;LChunk;)V loadEntities
ChunkRegionLoader a (LWorldServer;LDefinedStructureManager;LVillagePlace;LChunkCoordIntPair;LNBTTagCompound;)LProtoChunk; loadChunk
ChunkRegionLoader a (LWorldServer;LIChunkAccess;)LNBTTagCompound; saveChunk
ChunkSection a (III)LIBlockData; getType
ChunkSection a (IIILIBlockData;)LIBlockData; setType
ChunkSection a (IIILIBlockData;Z)LIBlockData; setType
ChunkSection a GLOBAL_PALETTE
ChunkSection b yPos
ChunkSection c nonEmptyBlockCount
ChunkSection d tickingBlockCount
ChunkSection e ()Z shouldTick
ChunkSection f blockIds
ChunkSection g ()I getYPosition
ChunkSection h ()V recalcBlockCounts
ChunkSection i ()LDataPaletteBlock; getBlocks
ChunkStatus a EMPTY
ChunkStatus b STRUCTURE_STARTS
ChunkStatus c STRUCTURE_REFERENCES
ChunkStatus d BIOMES
ChunkStatus e NOISE
ChunkStatus f SURFACE
ChunkStatus g ()LChunkStatus$Type; getType
ChunkStatus g CARVERS
ChunkStatus h LIQUID_CARVERS
ChunkStatus i FEATURES
ChunkStatus j LIGHT
ChunkStatus k SPAWN
ChunkStatus l HEIGHTMAPS
ChunkStatus m FULL
ChunkStatus$Type a PROTOCHUNK
ChunkStatus$Type b LEVELCHUNK
Clearable N_ ()V clear
CombatTracker a (LDamageSource;FF)V trackDamage
CombatTracker b ()LIChatBaseComponent; getDeathMessage
CommandAdvancement$Action a GRANT
CommandAdvancement$Action b REVOKE
CommandAdvancement$Filter a ONLY
CommandAdvancement$Filter b THROUGH
CommandAdvancement$Filter c FROM
CommandAdvancement$Filter d UNTIL
CommandAdvancement$Filter e EVERYTHING
CommandBlockListenerAbstract a (Ljava/lang/String;)V setCommand
CommandBlockListenerAbstract b (LIChatBaseComponent;)V setName
CommandBlockListenerAbstract d lastExecution
CommandBlockListenerAbstract e updateLastExecution
CommandBlockListenerAbstract f successCount
CommandBlockListenerAbstract g trackOutput
CommandBlockListenerAbstract h ()LCommandListenerWrapper; getWrapper
CommandBlockListenerAbstract h lastOutput
CommandBlockListenerAbstract i command
CommandBlockListenerAbstract j customName
CommandBlockListenerAbstract k ()Ljava/lang/String; getCommand
CommandBlockListenerAbstract l ()LIChatBaseComponent; getName
CommandClone$Mode a FORCE
CommandClone$Mode b MOVE
CommandClone$Mode c NORMAL
CommandFill$Mode a REPLACE
CommandFill$Mode b OUTLINE
CommandFill$Mode c HOLLOW
CommandFill$Mode d DESTROY
CommandListenerWrapper a (LIChatBaseComponent;)V sendFailureMessage
CommandListenerWrapper a (LIChatBaseComponent;Z)V sendMessage
CommandListenerWrapper b ()LIChatBaseComponent; getScoreboardDisplayName
CommandListenerWrapper b (LIChatBaseComponent;)V sendAdminMessage
CommandListenerWrapper c ()Ljava/lang/String; getName
CommandListenerWrapper c base
CommandListenerWrapper d ()LVec3D; getPosition
CommandListenerWrapper e ()LWorldServer; getWorld
CommandListenerWrapper f ()LEntity; getEntity
CommandListenerWrapper j ()Lnet/minecraft/server/MinecraftServer; getServer
CommandSetBlock$Mode a REPLACE
CommandSetBlock$Mode b DESTROY
CommandXp$Unit a POINTS
CommandXp$Unit b LEVELS
Container a ()LContainers; getType
Container a (I)LSlot; getSlot
Container a (ILItemStack;)V setItem
Container a (LEntityHuman;)Z canUse
Container a (LICrafting;)V addSlotListener
Container a slots
Container b (LEntityHuman;I)LItemStack; shiftClick
Container b (LIInventory;I)LSlot; getSlot
Container b windowId
Container c items
Container g dragType
Container j listeners
ContainerAccess a (LWorld;LBlockPosition;)LContainerAccess; at
ContainerAnvil d resultInventory
ContainerAnvil e repairInventory
ContainerAnvil f levelCost
ContainerAnvil g containerAccess
ContainerAnvil i renameText
ContainerAnvil j player
ContainerBeacon c beacon
ContainerBeacon e containerAccess
ContainerBeacon f containerProperties
ContainerBrewingStand c brewingStand
ContainerCartography c inventory
ContainerCartography d containerAccess
ContainerCartography g resultInventory
ContainerChest c container
ContainerDispenser c items
ContainerEnchantTable c costs
ContainerEnchantTable d enchantments
ContainerEnchantTable e levels
ContainerEnchantTable f enchantSlots
ContainerEnchantTable g containerAccess
ContainerFurnace d furnace
ContainerGrindstone c resultInventory
ContainerGrindstone d craftInventory
ContainerGrindstone e containerAccess
ContainerHopper c hopper
ContainerLectern c inventory
ContainerLectern d containerProperties
ContainerLoom c containerAccess
ContainerLoom k craftInventory
ContainerLoom l resultInventory
ContainerMerchant c merchant
ContainerMerchant d inventoryMerchant
ContainerPlayer l craftInventory
ContainerPlayer m resultInventory
ContainerPlayer n owner
ContainerProperty a (I)V set
ContainerProperty b ()I get
ContainerStonecutter e inventory
ContainerStonecutter f containerAccess
ContainerStonecutter g containerProperty
ContainerStonecutter h world
ContainerStonecutter m resultInventory
ContainerWorkbench c craftInventory
ContainerWorkbench d resultInventory
ContainerWorkbench e containerAccess
Containers a GENERIC_9X1
Containers b GENERIC_9X2
Containers c GENERIC_9X3
Containers d GENERIC_9X4
Containers e GENERIC_9X5
Containers f GENERIC_9X6
Containers g GENERIC_3X3
Containers h ANVIL
Containers i BEACON
Containers j BLAST_FURNACE
Containers k BREWING_STAND
Containers l CRAFTING
Containers m ENCHANTMENT
Containers n FURNACE
Containers o GRINDSTONE
Containers p HOPPER
Containers q LECTERN
Containers r LOOM
Containers s MERCHANT
Containers t SHULKER_BOX
Containers u SMOKER
Containers v CARTOGRAPHY_TABLE
Containers w STONECUTTER
ControllerJump a ()V jump
ControllerMove$Operation a WAIT
ControllerMove$Operation b MOVE_TO
ControllerMove$Operation c STRAFE
ControllerMove$Operation d JUMPING
Convertable a (Ljava/lang/String;)Z isConvertable
Convertable a (Ljava/lang/String;LIProgressUpdate;)Z convert
Counter a DECIMAL_FORMAT
Counter b DEFAULT
Counter c DIVIDE_BY_TEN
Counter d DISTANCE
Counter e TIME
CraftingManager a (LRecipes;LIInventory;LWorld;)Ljava/util/Optional; craft
CraftingManager c recipes
CriterionProgress d ()Ljava/util/Date; getDate
CustomFunctionData e ()V tick
CustomFunctionData f server
DamageSource a (LEntityArrow;LEntity;)LDamageSource; arrow
DamageSource a (LEntityFireball;LEntity;)LDamageSource; fireball
DamageSource a (LEntityHuman;)LDamageSource; playerAttack
DamageSource a (LExplosion;)LDamageSource; explosion
DamageSource a FIRE
DamageSource b (LEntity;LEntity;)LDamageSource; projectile
DamageSource b (LEntityLiving;)LDamageSource; mobAttack
DamageSource b LIGHTNING
DamageSource c BURN
DamageSource d ()Z isExplosion
DamageSource d (LEntityLiving;)LIChatBaseComponent; getLocalizedDeathMessage
DamageSource d LAVA
DamageSource e ()LDamageSource; setExplosion
DamageSource e HOT_FLOOR
DamageSource f ()Z ignoresArmor
DamageSource f STUCK
DamageSource g ()F getExhaustionCost
DamageSource g CRAMMING
DamageSource h ()Z ignoresInvulnerability
DamageSource h DROWN
DamageSource i ()Z isStarvation
DamageSource i STARVE
DamageSource j CACTUS
DamageSource k ()LEntity; getEntity
DamageSource k FALL
DamageSource l ()LDamageSource; setIgnoreArmor
DamageSource l FLY_INTO_WALL
DamageSource m ()LDamageSource; setIgnoresInvulnerability
DamageSource m OUT_OF_WORLD
DamageSource n ()LDamageSource; setStarvation
DamageSource n GENERIC
DamageSource o ()LDamageSource; setFire
DamageSource o MAGIC
DamageSource p ()Z isFire
DamageSource p WITHER
DamageSource q ANVIL
DamageSource r FALLING_BLOCK
DamageSource s DRAGON_BREATH
DamageSource t ()Z isMagic
DamageSource t FIREWORKS
DamageSource u ()LDamageSource; setMagic
DamageSource u DRYOUT
DamageSource v SWEET_BERRY_BUSH
DamageSource w translationIndex
DataConverterFlattenData a (ILjava/lang/String;[Ljava/lang/String;)V map
DataConverterMaterialId a ID_MAPPING
DataConverterSpawnEgg a ID_MAPPING
DataConverterTypes b PLAYER
DataConverterTypes l ITEM_STACK
DataConverterTypes p ENTITY
DataFixTypes a LEVEL
DataFixTypes b PLAYER
DataFixTypes c CHUNK
DataFixTypes d HOTBAR
DataFixTypes e OPTIONS
DataFixTypes f STRUCTURE
DataFixTypes g STATS
DataFixTypes h SAVED_DATA
DataFixTypes i ADVANCEMENTS
DataFixTypes j POI_CHUNK
DataPaletteBlock a (IIILjava/lang/Object;)Ljava/lang/Object; setBlock
DataPaletteBlock a (Ljava/lang/Object;)Z contains
DataPaletteBlock b (ILjava/lang/Object;)V setBlockIndex
DataWatcher a (LDataWatcherObject;)Ljava/lang/Object; get
DataWatcher a (LDataWatcherObject;Ljava/lang/Object;)V register
DataWatcher b (LDataWatcherObject;Ljava/lang/Object;)V set
DataWatcher c (LDataWatcherObject;Ljava/lang/Object;)V registerObject
DataWatcher c entity
DataWatcher d entries
DataWatcher e lock
DedicatedPlayerList b ()LDedicatedServer; getServer
DedicatedServer a (Ljava/lang/String;LCommandListenerWrapper;)V issueCommand
DedicatedServer aZ ()V handleCommandQueue
DedicatedServer bc ()Z convertNames
DedicatedServer bd ()J getMaxTickTime
DedicatedServer j serverCommandQueue
DedicatedServer k remoteStatusListener
DedicatedServer l remoteControlCommandListener
DedicatedServer m remoteControlListener
DedicatedServer n propertyManager
DedicatedServer o (Z)V setHasWhitelist
DedicatedServerProperties A resourcePackHash
DedicatedServerProperties B resourcePackSha1
DedicatedServerProperties C hardcore
DedicatedServerProperties D allowNether
DedicatedServerProperties E spawnMonsters
DedicatedServerProperties F snooperEnabled
DedicatedServerProperties G useNativeTransport
DedicatedServerProperties H enableCommandBlock
DedicatedServerProperties I spawnProtection
DedicatedServerProperties J opPermissionLevel
DedicatedServerProperties K functionPermissionLevel
DedicatedServerProperties L maxTickTime
DedicatedServerProperties M viewDistance
DedicatedServerProperties N maxPlayers
DedicatedServerProperties O networkCompressionThreshold
DedicatedServerProperties P broadcastRconToOps
DedicatedServerProperties Q broadcastConsoleToOps
DedicatedServerProperties R maxWorldSize
DedicatedServerProperties S playerIdleTimeout
DedicatedServerProperties T whiteList
DedicatedServerProperties a (Ljava/nio/file/Path;)LDedicatedServerProperties; load
DedicatedServerProperties a onlineMode
DedicatedServerProperties b preventProxyConnections
DedicatedServerProperties c serverIp
DedicatedServerProperties d spawnAnimals
DedicatedServerProperties e spawnNpcs
DedicatedServerProperties f pvp
DedicatedServerProperties g allowFlight
DedicatedServerProperties h resourcePack
DedicatedServerProperties i motd
DedicatedServerProperties j forceGamemode
DedicatedServerProperties k enforceWhitelist
DedicatedServerProperties l generateStructures
DedicatedServerProperties m difficulty
DedicatedServerProperties n gamemode
DedicatedServerProperties o levelName
DedicatedServerProperties p levelSeed
DedicatedServerProperties q levelType
DedicatedServerProperties r generatorSettings
DedicatedServerProperties s serverPort
DedicatedServerProperties t maxBuildHeight
DedicatedServerProperties u announcePlayerAchievements
DedicatedServerProperties v enableQuery
DedicatedServerProperties w queryPort
DedicatedServerProperties x enableRcon
DedicatedServerProperties y rconPort
DedicatedServerProperties z rconPassword
DedicatedServerSettings a ()LDedicatedServerProperties; getProperties
DedicatedServerSettings a (Ljava/util/function/UnaryOperator;)LDedicatedServerSettings; setProperty
DedicatedServerSettings a path
DedicatedServerSettings b ()V save
DedicatedServerSettings b properties
DimensionManager a (LWorld;)LWorldProvider; getWorldProvider
DimensionManager a (Ljava/lang/String;LDimensionManager;)LDimensionManager; register
DimensionManager a OVERWORLD
DimensionManager b ()I getDimensionID
DimensionManager b NETHER
DimensionManager c ()Ljava/lang/String; getSuffix
DimensionManager c THE_END
DimensionManager d ()Z hasSkyLight
DimensionManager d id
DimensionManager e ()LGenLayerZoomer; getGenLayerZoomer
DimensionManager e suffix
DimensionManager f folder
DimensionManager g providerFactory
DimensionManager h hasSkyLight
DimensionManager i genLayerZoomer
DispenseBehaviorMaybe b dispensed
DispenseBehaviorProjectile b ()F getPower
DispenserRegistry a ()V init
DoubleBlockFinder$BlockType a SINGLE
DoubleBlockFinder$BlockType b FIRST
DoubleBlockFinder$BlockType c SECOND
DragonControllerManager a (LDragonControllerPhase;)V setControllerPhase
DragonControllerManager b enderDragon
DragonControllerManager c dragonControllers
DragonControllerManager d currentDragonController
DragonControllerPhase a (I)LDragonControllerPhase; getById
DragonControllerPhase a HOLDING_PATTERN
DragonControllerPhase b STRAFE_PLAYER
DragonControllerPhase c LANDING_APPROACH
DragonControllerPhase d LANDING
DragonControllerPhase e TAKEOFF
DragonControllerPhase f SITTING_FLAMING
DragonControllerPhase g SITTING_SCANNING
DragonControllerPhase h SITTING_ATTACKING
DragonControllerPhase i CHARGING_PLAYER
DragonControllerPhase j DYING
DragonControllerPhase k HOVER
Enchantment a ()I getMaxLevel
Enchantment a (LItemStack;)Z canEnchant
Enchantment b ()Z isTreasure
Enchantment b (LEnchantment;)Z isCompatible
Enchantment b itemTarget
Enchantment e ()I getStartLevel
Enchantment$Rarity a COMMON
Enchantment$Rarity b UNCOMMON
Enchantment$Rarity c RARE
Enchantment$Rarity d VERY_RARE
EnchantmentManager a (LEnchantment;LItemStack;)I getEnchantmentLevel
EnchantmentManager c (LEntityLiving;)I getFireAspectEnchantmentLevel
EnchantmentManager d (LEntityLiving;)I getOxygenEnchantmentLevel
EnchantmentManager e (LItemStack;)Z shouldNotDrop
EnchantmentManager f (LEntityLiving;)I getDigSpeedEnchantmentLevel
EnchantmentProtection$DamageType a ALL
EnchantmentProtection$DamageType b FIRE
EnchantmentProtection$DamageType c FALL
EnchantmentProtection$DamageType d EXPLOSION
EnchantmentProtection$DamageType e PROJECTILE
EnchantmentSlotType a (LItem;)Z canEnchant
EnchantmentSlotType a ALL
EnchantmentSlotType b ARMOR
EnchantmentSlotType c ARMOR_FEET
EnchantmentSlotType d ARMOR_LEGS
EnchantmentSlotType e ARMOR_CHEST
EnchantmentSlotType f ARMOR_HEAD
EnchantmentSlotType g WEAPON
EnchantmentSlotType h DIGGER
EnchantmentSlotType i FISHING_ROD
EnchantmentSlotType j TRIDENT
EnchantmentSlotType k BREAKABLE
EnchantmentSlotType l BOW
EnchantmentSlotType m WEARABLE
EnchantmentSlotType n CROSSBOW
Enchantments A LUCK
Enchantments B LURE
Enchantments C LOYALTY
Enchantments D IMPALING
Enchantments E RIPTIDE
Enchantments F CHANNELING
Enchantments G MULTISHOT
Enchantments H QUICK_CHARGE
Enchantments I PIERCING
Enchantments J MENDING
Enchantments K VANISHING_CURSE
Enchantments a PROTECTION_ENVIRONMENTAL
Enchantments b PROTECTION_FIRE
Enchantments c PROTECTION_FALL
Enchantments d PROTECTION_EXPLOSIONS
Enchantments e PROTECTION_PROJECTILE
Enchantments f OXYGEN
Enchantments g WATER_WORKER
Enchantments h THORNS
Enchantments i DEPTH_STRIDER
Enchantments j FROST_WALKER
Enchantments k BINDING_CURSE
Enchantments l DAMAGE_ALL
Enchantments m DAMAGE_UNDEAD
Enchantments n DAMAGE_ARTHROPODS
Enchantments o KNOCKBACK
Enchantments p FIRE_ASPECT
Enchantments q LOOT_BONUS_MOBS
Enchantments r SWEEPING
Enchantments s DIG_SPEED
Enchantments t SILK_TOUCH
Enchantments u DURABILITY
Enchantments v LOOT_BONUS_BLOCKS
Enchantments w ARROW_DAMAGE
Enchantments x ARROW_KNOCKBACK
Enchantments y ARROW_FIRE
Enchantments z ARROW_INFINITE
EnderDragonBattle c bossBattle
Entity A_ ()LEnumPistonReaction; getPushReaction
Entity D fallDistance
Entity I noclip
Entity K random
Entity L ticksLived
Entity M inWater
Entity N ()Z hasCustomName
Entity P inLava
Entity Q ()V decouple
Entity Q noDamageTicks
Entity R ()LEntityTypes; getEntityType
Entity R justCreated
Entity S ()I getId
Entity S datawatcher
Entity T ()Ljava/util/Set; getScoreboardTags
Entity U ()V killEntity
Entity U POSE
Entity V ()LDataWatcher; getDataWatcher
Entity V inChunk
Entity W chunkX
Entity X ()V die
Entity X chunkY
Entity Y ()LEntityPose; getPose
Entity Y chunkZ
Entity a (DDD)V enderTeleportTo
Entity a (DDDFF)V setLocation
Entity a (FF)V setYawPitch
Entity a (LBlockPosition;FF)V setPositionRotation
Entity a (LCrashReportSystemDetails;)V appendEntityCrashDetails
Entity a (LDamageSource;F)Z damageEntity
Entity a (LEntityLightning;)V onLightningStrike
Entity a (LEntityPose;LEntitySize;)F getHeadHeight
Entity a (LEnumItemSlot;LItemStack;)V setEquipment
Entity a (LEnumMoveType;LVec3D;)V move
Entity a (LWorld;)V spawnIn
Entity a (Ljava/lang/String;)Z addScoreboardTag
Entity aD invulnerable
Entity aI size
Entity aJ ()V velocityChanged
Entity aJ headHeight
Entity aK ()Z isInteractable
Entity aL ()Z isCollidable
Entity aN ()Ljava/lang/String; getSaveID
Entity aO ()Z isAlive
Entity aP ()Z inBlock
Entity aQ ()V passengerTick
Entity aU ()V ejectPassengers
Entity aW ()LVec3D; getLookDirection
Entity aZ ()V doPortalTick
Entity aa ()V entityBaseTick
Entity ac ()V burnFromLava
Entity ad impulse
Entity ae ()V extinguish
Entity ae portalCooldown
Entity ah dimension
Entity al ()V recalcPosition
Entity al uniqueID
Entity am ()LSoundEffect; getSoundSwim
Entity an ()LSoundEffect; getSoundSplash
Entity an glowing
Entity ao ()LSoundEffect; getSoundSplashHighSpeed
Entity ao passengers
Entity ap ()V checkBlockCollisions
Entity ap vehicle
Entity aq locX
Entity ar ()Z isSilent
Entity ar locY
Entity as ()Z isNoGravity
Entity as locZ
Entity at ()Z playStepSound
Entity at mot
Entity au boundingBox
Entity av ()Z isFireProof
Entity aw ()Z isInWater
Entity ax ()Z isInWaterOrRain
Entity ax fireTicks
Entity ay AIR_TICKS
Entity b (DDDFF)V setPositionRotation
Entity b (IZ)V setFlag
Entity b (LDamageSource;)Z isInvulnerable
Entity b (LEntityHuman;)V pickup
Entity b (LEntityPose;)V setPose
Entity b (LIChatBaseComponent;)V setCustomName
Entity b (Ljava/lang/String;)Z removeScoreboardTag
Entity b entityCount
Entity bB ()Z isInvulnerable
Entity bC ()Z canPortal
Entity bF ()LVec3D; getPortalOffset
Entity bG ()LEnumDirection; getPortalDirection
Entity bH ()Z isIgnoreBlockTrigger
Entity bJ ()Ljava/util/UUID; getUniqueID
Entity bK ()Ljava/lang/String; getUniqueIDString
Entity bL ()Ljava/lang/String; getName
Entity bO ()Z getCustomNameVisible
Entity bQ ()LEnumDirection; getDirection
Entity bR ()LEnumDirection; getAdjustedDirection
Entity bT ()LAxisAlignedBB; getBoundingBox
Entity bV ()F getHeadHeight
Entity bW ()LBlockPosition; getChunkCoordinates
Entity bY ()LWorld; getWorld
Entity bZ ()Lnet/minecraft/server/MinecraftServer; getMinecraftServer
Entity bd ()Ljava/lang/Iterable; getArmorItems
Entity bf ()Z isBurning
Entity bg ()Z isPassenger
Entity bh ()Z isVehicle
Entity bj ()Z isSneaking
Entity bp ()Z isSprinting
Entity bq ()Z isSwimming
Entity bu ()Z isInvisible
Entity bv ()LScoreboardTeamBase; getScoreboardTeam
Entity bx ()I getAirTicks
Entity bz ()F getHeadRotation
Entity c (Z)V setSilent
Entity cd ()LEntity; getRidingPassenger
Entity ce ()Ljava/util/List; getPassengers
Entity cf ()Ljava/util/Collection; getAllPassengers
Entity ch ()Z hasSinglePlayerPassenger
Entity ci ()LEntity; getRootVehicle
Entity ck ()LEntity; getVehicle
Entity cl ()LSoundCategory; getSoundCategory
Entity cm ()I getMaxFireTicks
Entity cn ()LCommandListenerWrapper; getCommandListener
Entity cp ()F getWidth
Entity cq ()F getHeight
Entity cr ()LVec3D; getPositionVector
Entity cs ()LVec3D; getMot
Entity ct ()D locX
Entity cu ()D locY
Entity cw ()D getHeadY
Entity cx ()D locZ
Entity cy ()V checkDespawn
Entity d ()LIChatBaseComponent; getScoreboardDisplayName
Entity d (DDD)V setPosition
Entity d (LVec3D;)V setMot
Entity d (Z)V setNoGravity
Entity e (LNBTTagCompound;)LNBTTagCompound; save
Entity e (Z)V setSneaking
Entity f (I)V setOnFire
Entity f (Z)V setSprinting
Entity g (Z)V setSwimming
Entity g id
Entity h ()V tick
Entity h (I)V burn
Entity i (I)Z getFlag
Entity i (LEntity;)V collide
Entity i (Z)V setInvisible
Entity j ()V stopRiding
Entity j (I)V setAirTicks
Entity k ()Z isInRain
Entity k (F)V setHeadRotation
Entity k attachedToPlayer
Entity l (DDD)V enderTeleportAndLoad
Entity l (Z)V setInvulnerable
Entity l world
Entity m (DDD)V setMot
Entity m (LEntity;)Z startRiding
Entity m (Z)V setCustomNameVisible
Entity m lastX
Entity n (DDD)V setPositionRaw
Entity n lastY
Entity o (LEntity;)V addPassenger
Entity o lastZ
Entity p (LEntity;)V removePassenger
Entity p yaw
Entity q pitch
Entity r lastYaw
Entity s lastPitch
Entity t ()Z isSpectator
Entity t onGround
Entity u positionChanged
Entity w_ ()V initDatawatcher
Entity x velocityChanged
Entity z dead
Entity z_ ()V updateSize
EntityAgeable a (I)V setAge
EntityAgeable a (IZ)V setAge
EntityAgeable a (LEntityAgeable;)LEntityAgeable; createChild
EntityAgeable b_ (I)V setAgeRaw
EntityAgeable i ()I getAge
EntityAnimal a (LDamageSource;F)Z damageEntity
EntityAnimal a (LEntityAnimal;)Z mate
EntityAnimal bw loveTicks
EntityAnimal bx breedCause
EntityAnimal d (LEntityHuman;)I getExpValue
EntityAnimal ew ()LEntityPlayer; getBreedCause
EntityAnimal ex ()Z isInLove
EntityAnimal ey ()V resetLove
EntityAnimal s (I)V setLoveTicks
EntityAreaEffectCloud a (F)V setRadius
EntityAreaEffectCloud a (I)V setColor
EntityAreaEffectCloud a (LEntityLiving;)V setSource
EntityAreaEffectCloud a (LMobEffect;)V addEffect
EntityAreaEffectCloud a (LParticleParam;)V setParticle
EntityAreaEffectCloud ao effects
EntityAreaEffectCloud ap affectedEntities
EntityAreaEffectCloud aq duration
EntityAreaEffectCloud ar waitTime
EntityAreaEffectCloud as reapplicationDelay
EntityAreaEffectCloud at hasColor
EntityAreaEffectCloud au durationOnUse
EntityAreaEffectCloud av radiusOnUse
EntityAreaEffectCloud aw radiusPerTick
EntityAreaEffectCloud b (F)V setRadiusOnUse
EntityAreaEffectCloud b (I)V setDuration
EntityAreaEffectCloud c (F)V setRadiusPerTick
EntityAreaEffectCloud d (I)V setWaitTime
EntityAreaEffectCloud d COLOR
EntityAreaEffectCloud f ()F getRadius
EntityAreaEffectCloud g potionRegistry
EntityAreaEffectCloud i ()I getColor
EntityAreaEffectCloud k ()LParticleParam; getParticle
EntityAreaEffectCloud m ()I getDuration
EntityAreaEffectCloud u ()LEntityLiving; getSource
EntityArmorStand a (LVector3f;)V setHeadPose
EntityArmorStand b (LVector3f;)V setBodyPose
EntityArmorStand bA armorStandInvisible
EntityArmorStand bC headPose
EntityArmorStand bD bodyPose
EntityArmorStand bE leftArmPose
EntityArmorStand bF rightArmPose
EntityArmorStand bG leftLegPose
EntityArmorStand bH rightLegPose
EntityArmorStand by handItems
EntityArmorStand bz armorItems
EntityArmorStand c (LVector3f;)V setLeftArmPose
EntityArmorStand d (LVector3f;)V setRightArmPose
EntityArmorStand e (LVector3f;)V setLeftLegPose
EntityArmorStand f (LVector3f;)V setRightLegPose
EntityArmorStand l ()Z isSmall
EntityArmorStand n ()Z hasArms
EntityArmorStand n (Z)V setSmall
EntityArmorStand o ()Z hasBasePlate
EntityArmorStand o (Z)V setArms
EntityArmorStand p ()Z isMarker
EntityArmorStand p (Z)V setBasePlate
EntityArmorStand q (Z)V setMarker
EntityArrow a (I)V setKnockbackStrength
EntityArrow a (LEntity;)V setShooter
EntityArrow a (Z)V setCritical
EntityArrow ar despawnCounter
EntityArrow at damage
EntityArrow au knockbackStrength
EntityArrow b (B)V setPierceLevel
EntityArrow c inGround
EntityArrow e fromPlayer
EntityArrow f shake
EntityArrow g shooter
EntityArrow h (D)V setDamage
EntityArrow l ()LSoundEffect; getSoundHit
EntityArrow m ()LEntity; getShooter
EntityArrow n ()LItemStack; getItemStack
EntityArrow o ()D getDamage
EntityArrow q ()Z isCritical
EntityArrow s ()B getPierceLevel
EntityArrow$PickupStatus a DISALLOWED
EntityArrow$PickupStatus b ALLOWED
EntityArrow$PickupStatus c CREATIVE_ONLY
EntityBat l ()Z isAsleep
EntityBat r (Z)V setAsleep
EntityBee bC ticksSincePollination
EntityBee bD cannotEnterHiveTicks
EntityBee bE numCropsGrownSincePollination
EntityBee bH flowerPos
EntityBee bI hivePos
EntityBee by hurtBy
EntityBee eA ()Z hasHivePos
EntityBee eB ()LBlockPosition; getHivePos
EntityBee eD ()Z hasNectar
EntityBee eE ()Z hasStung
EntityBee eH ()Z canPollinate
EntityBee eL ()I getAnger
EntityBee eM ()I getNumCropsGrownSincePollination
EntityBee eq ()LBlockPosition; getFlowerPos
EntityBee er ()Z hasFlowerPos
EntityBee ez ()Z isAngry
EntityBee g (LBlockPosition;)V setFlowerPos
EntityBee r (Z)V setHasNectar
EntityBee s (Z)V setHasStung
EntityBee t (I)V setCannotEnterHiveTicks
EntityBee u (I)V setAnger
EntityBoat a (F)V setDamage
EntityBoat a (LEntityBoat$EnumBoatType;)V setType
EntityBoat m ()F getDamage
EntityBoat p ()LEntityBoat$EnumBoatType; getType
EntityBoat$EnumBoatType a OAK
EntityBoat$EnumBoatType b SPRUCE
EntityBoat$EnumBoatType c BIRCH
EntityBoat$EnumBoatType d JUNGLE
EntityBoat$EnumBoatType e ACACIA
EntityBoat$EnumBoatType f DARK_OAK
EntityBoat$EnumStatus a IN_WATER
EntityBoat$EnumStatus b UNDER_WATER
EntityBoat$EnumStatus c UNDER_FLOWING_WATER
EntityBoat$EnumStatus d ON_LAND
EntityBoat$EnumStatus e IN_AIR
EntityCat a (LEnumColor;)V setCollarColor
EntityCat eA ()I getCatType
EntityCat eD ()LEnumColor; getCollarColor
EntityCat t (I)V setCatType
EntityCat$PathfinderGoalTemptChance c chosenTarget
EntityChicken bB eggLayTime
EntityChicken eq ()Z isChickenJockey
EntityComplexPart b owner
EntityCreeper J_ ()Z isPowered
EntityCreeper bx fuseTicks
EntityCreeper by maxFuseTicks
EntityCreeper bz explosionRadius
EntityCreeper c POWERED
EntityCreeper eq ()Z isIgnited
EntityCreeper er ()V ignite
EntityCreeper es ()Z canCauseHeadDrop
EntityCreeper et ()V setCausedHeadDrop
EntityCreeper eu ()V explode
EntityCreeper ev ()V createEffectCloud
EntityDamageSource d (LEntityLiving;)LIChatBaseComponent; getLocalizedDeathMessage
EntityDamageSource k ()LEntity; getEntity
EntityDamageSourceIndirect y owner
EntityDrowned b navigationWater
EntityDrowned c navigationLand
EntityEnderCrystal a (LBlockPosition;)V setBeamTarget
EntityEnderCrystal a (Z)V setShowingBottom
EntityEnderCrystal f ()LBlockPosition; getBeamTarget
EntityEnderCrystal i ()Z isShowingBottom
EntityEnderDragon b PHASE
EntityEnderDragon bC currentEnderCrystal
EntityEnderDragon bF children
EntityEnderDragon e (LDamageSource;F)Z dealDamage
EntityEnderDragon ep ()LDragonControllerManager; getDragonControllerManager
EntityEnderDragon eq ()LEnderDragonBattle; getEnderDragonBattle
EntityEnderSignal c targetX
EntityEnderSignal d targetY
EntityEnderSignal e targetZ
EntityEnderSignal f despawnTimer
EntityEnderSignal g shouldDropItem
EntityEnderman b (LIBlockData;)V setCarried
EntityEnderman er ()LIBlockData; getCarried
EntityEnderman$PathfinderGoalEndermanPickupBlock a enderman
EntityEndermite l ()Z isPlayerSpawned
EntityEndermite r (Z)V setPlayerSpawned
EntityEvokerFangs f ()LEntityLiving; getOwner
EntityExperienceOrb a (I)I getOrbValue
EntityExperienceOrb ao targetTime
EntityExperienceOrb f value
EntityExperienceOrb g targetPlayer
EntityFallingBlock ao hurtEntities
EntityFallingBlock ap fallHurtMax
EntityFallingBlock aq fallHurtAmount
EntityFallingBlock b ticksLived
EntityFallingBlock c dropItem
EntityFallingBlock d tileEntityData
EntityFallingBlock f block
EntityFallingBlock k ()LIBlockData; getBlock
EntityFireball b shooter
EntityFireball c dirX
EntityFireball d dirY
EntityFireball e dirZ
EntityFireworks b FIREWORK_ITEM
EntityFireworks d SHOT_AT_ANGLE
EntityFireworks e ticksFlown
EntityFireworks f expectedLifespan
EntityFireworks g ridingEntity
EntityFireworks i ()Z isShotAtAngle
EntityFireworks k ()V explode
EntityFireworks l ()Z hasExplosions
EntityFish b FROM_BUCKET
EntityFish er ()LSoundEffect; getSoundFlop
EntityFish es ()Z isFromBucket
EntityFish r (Z)V setFromBucket
EntityFishingHook b hooked
EntityFishingHook d isInGround
EntityFishingHook f ()V reel
EntityFishingHook f owner
EntityFishingHook$HookState a FLYING
EntityFishingHook$HookState b HOOKED_IN_ENTITY
EntityFishingHook$HookState c BOBBING
EntityFox a (LEntityFox$Type;)V setFoxType
EntityFox bo ()Z isCrouching
EntityFox eD ()V initializePathFinderGoals
EntityFox eq ()LEntityFox$Type; getFoxType
EntityFox er ()Z isSitting
EntityFox r (Z)V setSitting
EntityFox t (Z)V setCrouching
EntityFox x (Z)V setSleeping
EntityFox$Type a RED
EntityFox$Type b SNOW
EntityGhast eo ()I getPower
EntityGhast$PathfinderGoalGhastAttackTarget b ghast
EntityGuardian bz goalRandomStroll
EntityGuardian er ()LSoundEffect; getSoundFlop
EntityHanging a (LDamageSource;F)Z damageEntity
EntityHanging a (LEnumDirection;)V setDirection
EntityHanging c blockPosition
EntityHanging d direction
EntityHanging f ()V updateBoundingBox
EntityHanging i ()Z survives
EntityHanging k ()I getHangingWidth
EntityHanging l ()I getHangingHeight
EntityHanging m ()V playPlaceSound
EntityHanging n ()LBlockPosition; getBlockPosition
EntityHorse et ()I getVariant
EntityHorse w (I)V setVariant
EntityHorseAbstract b (Ljava/util/UUID;)V setOwnerUUID
EntityHorseAbstract bA inventoryChest
EntityHorseAbstract bC jumpPower
EntityHorseAbstract bM canSlide
EntityHorseAbstract bw attributeJumpStrength
EntityHorseAbstract eA ()Z isTamed
EntityHorseAbstract eB ()Ljava/util/UUID; getOwnerUUID
EntityHorseAbstract eF ()Z hasReproduced
EntityHorseAbstract eG ()I getTemper
EntityHorseAbstract eH ()V loadChest
EntityHorseAbstract eJ ()D getJumpStrength
EntityHorseAbstract eM ()I getMaxDomestication
EntityHorseAbstract er ()I getChestSlots
EntityHorseAbstract es ()LSoundEffect; getSoundAngry
EntityHorseAbstract s (Z)V setTamed
EntityHorseAbstract u (I)V setTemper
EntityHorseAbstract x (Z)V setStanding
EntityHorseChestedAbstract eq ()Z isCarryingChest
EntityHorseChestedAbstract r (Z)V setCarryingChest
EntityHuman a (ILMerchantRecipeList;IIZZ)V openTrade
EntityHuman a (LBlockPosition;)Lcom/mojang/datafixers/util/Either; sleep
EntityHuman a (LBlockPosition;ZZ)V setRespawnPosition
EntityHuman a (LEntityHorseAbstract;LIInventory;)V openHorseInventory
EntityHuman a (LITileInventory;)Ljava/util/OptionalInt; openContainer
EntityHuman a (LIWorldReader;LBlockPosition;Z)Ljava/util/Optional; getBed
EntityHuman a (LItemStack;I)V enchantDone
EntityHuman a (LItemStack;LEnumHand;)V openBook
EntityHuman a (LItemStack;Z)LEntityItem; drop
EntityHuman a (LTileEntitySign;)V openSign
EntityHuman a (Ljava/util/Collection;)I discoverRecipes
EntityHuman a (ZZ)V wakeup
EntityHuman b (Ljava/util/Collection;)I undiscoverRecipes
EntityHuman bK abilities
EntityHuman bL expLevel
EntityHuman bM expTotal
EntityHuman bN exp
EntityHuman bQ hookedFish
EntityHuman bu inventory
EntityHuman bv enderChest
EntityHuman bw defaultContainer
EntityHuman bx activeContainer
EntityHuman by foodData
EntityHuman c (I)V levelDown
EntityHuman c (LIBlockData;)Z hasBlock
EntityHuman c (Ljava/lang/String;)Ljava/util/UUID; getOfflineUUID
EntityHuman d (I)V giveExp
EntityHuman dY ()I getScore
EntityHuman dZ ()V removeCursedItems
EntityHuman eB ()Z isCreativeAndOp
EntityHuman ed ()Lcom/mojang/authlib/GameProfile; getProfile
EntityHuman ee ()Z isDeeplySleeping
EntityHuman eg ()LBlockPosition; getBed
EntityHuman eh ()Z isRespawnForced
EntityHuman ej ()V startGliding
EntityHuman ek ()V stopGliding
EntityHuman em ()I getExpToLevel
EntityHuman en ()LFoodMetaData; getFoodData
EntityHuman eq ()LInventoryEnderChest; getEnderChest
EntityHuman er ()V releaseShoulderEntities
EntityHuman es ()LScoreboard; getScoreboard
EntityHuman ev ()LNBTTagCompound; getShoulderEntityLeft
EntityHuman ew ()LNBTTagCompound; getShoulderEntityRight
EntityHuman ez ()LItemCooldown; getCooldownTracker
EntityHuman f (LEntity;)V attack
EntityHuman f sleepTicks
EntityHuman h (LNBTTagCompound;)V setShoulderEntityLeft
EntityHuman i (LNBTTagCompound;)V setShoulderEntityRight
EntityHuman k (LNBTTagCompound;)V spawnEntityFromShoulder
EntityHuman o (DDD)V checkMovement
EntityHuman r ()V updateAbilities
EntityHuman r (F)V applyExhaustion
EntityHuman s (I)V setScore
EntityHuman t (I)V addScore
EntityHuman u ()Z isCreative
EntityHuman v_ ()V closeInventory
EntityHuman$EnumBedResult a NOT_POSSIBLE_HERE
EntityHuman$EnumBedResult b NOT_POSSIBLE_NOW
EntityHuman$EnumBedResult c TOO_FAR_AWAY
EntityHuman$EnumBedResult d OBSTRUCTED
EntityHuman$EnumBedResult e OTHER_PROBLEM
EntityHuman$EnumBedResult f NOT_SAFE
EntityIllagerWizard a (LEntityIllagerWizard$Spell;)V setSpell
EntityIllagerWizard eB ()LEntityIllagerWizard$Spell; getSpell
EntityIllagerWizard er ()LSoundEffect; getSoundCastSpell
EntityIllagerWizard$Spell a NONE
EntityIllagerWizard$Spell b SUMMON_VEX
EntityIllagerWizard$Spell c FANGS
EntityIllagerWizard$Spell d WOLOLO
EntityIllagerWizard$Spell e DISAPPEAR
EntityIllagerWizard$Spell f BLINDNESS
EntityInsentient D ()V doSpawnEffect
EntityInsentient G ()LSoundEffect; getSoundAmbient
EntityInsentient H ()LMinecraftKey; getDefaultLootTable
EntityInsentient a (LGeneratorAccess;LDifficultyDamageScaler;LEnumMobSpawn;LGroupDataEntity;LNBTTagCompound;)LGroupDataEntity; prepare
EntityInsentient a (ZZ)V unleash
EntityInsentient b (LEntity;Z)V setLeashHolder
EntityInsentient bA persistent
EntityInsentient bC lootTableKey
EntityInsentient bD lootTableSeed
EntityInsentient bE leashHolder
EntityInsentient bp moveController
EntityInsentient br navigation
EntityInsentient bs goalSelector
EntityInsentient bt targetSelector
EntityInsentient bu dropChanceHand
EntityInsentient bv dropChanceArmor
EntityInsentient bz canPickUpLoot
EntityInsentient d (LEntityHuman;)I getExpValue
EntityInsentient d goalTarget
EntityInsentient dT ()V mobTick
EntityInsentient dX ()I getMaxSpawnGroup
EntityInsentient dZ ()V setPersistent
EntityInsentient ea ()Z canPickupLoot
EntityInsentient eb ()Z isPersistent
EntityInsentient ei ()Z isLeashed
EntityInsentient ej ()LEntity; getLeashHolder
EntityInsentient ek ()Z isNoAI
EntityInsentient el ()Z isLeftHanded
EntityInsentient g lookController
EntityInsentient h (D)Z isTypeNotPersistent
EntityInsentient h (LEntityLiving;)V setGoalTarget
EntityInsentient n ()V initPathfinder
EntityInsentient n (Z)V setCanPickupLoot
EntityInsentient o (Z)V setNoAI
EntityInsentient p ()LControllerLook; getControllerLook
EntityInsentient r ()LControllerMove; getControllerMove
EntityInsentient s ()LControllerJump; getControllerJump
EntityInsentient u ()LNavigationAbstract; getNavigation
EntityInsentient v ()LEntitySenses; getEntitySenses
EntityInsentient w ()LEntityLiving; getGoalTarget
EntityInsentient z ()V blockEaten
EntityIronGolem es ()Z isPlayerCreated
EntityIronGolem s (Z)V setPlayerCreated
EntityIronGolem$CrackLevel a NONE
EntityIronGolem$CrackLevel b LOW
EntityIronGolem$CrackLevel c MEDIUM
EntityIronGolem$CrackLevel d HIGH
EntityItem a (I)V setPickupDelay
EntityItem ao owner
EntityItem b (LItemStack;)V setItemStack
EntityItem b (Ljava/util/UUID;)V setOwner
EntityItem c (Ljava/util/UUID;)V setThrower
EntityItem c ITEM
EntityItem d age
EntityItem e pickupDelay
EntityItem f ()LItemStack; getItemStack
EntityItem g thrower
EntityItem i ()Ljava/util/UUID; getOwner
EntityItem k ()Ljava/util/UUID; getThrower
EntityItem m ()V defaultPickupDelay
EntityItem v ()V mergeNearby
EntityItemFrame a (I)V setRotation
EntityItemFrame a (IZ)V setRotation
EntityItemFrame a (LItemStack;Z)V setItem
EntityItemFrame b (LItemStack;)V setItem
EntityItemFrame f ITEM
EntityItemFrame o ()LItemStack; getItem
EntityItemFrame p ()I getRotation
EntityLargeFireball f yield
EntityLightning c lifeTicks
EntityLiving D (LEntity;)Z hasLineOfSight
EntityLiving a (LDamageSource;)V die
EntityLiving a (LDamageSource;F)Z damageEntity
EntityLiving a (LDamageSource;IZ)V dropDeathLoot
EntityLiving a (LEntity;I)V receive
EntityLiving a (LEntityLiving;)V setLastDamager
EntityLiving a (LEnumItemSlot;LItemStack;)V setSlot
EntityLiving a (LIAttribute;)LAttributeInstance; getAttributeInstance
EntityLiving a (LMobEffectList;)Z hasEffect
EntityLiving aF maxNoDamageTicks
EntityLiving aN killer
EntityLiving aO lastDamageByPlayerTime
EntityLiving aP killed
EntityLiving aQ ticksFarFromPlayer
EntityLiving aX lastDamage
EntityLiving aY jumping
EntityLiving a_ (Z)V setJumping
EntityLiving av hurtTicks
EntityLiving aw hurtDuration
EntityLiving ay deathTicks
EntityLiving b (F)V heal
EntityLiving b (LDamageSource;F)F applyArmorModifier
EntityLiving b (LEnumItemSlot;)LItemStack; getEquipment
EntityLiving b (LMobEffectList;)LMobEffect; getEffect
EntityLiving bC jumpTicks
EntityLiving bk activeItem
EntityLiving br attributeMap
EntityLiving bs combatTracker
EntityLiving bt effects
EntityLiving bw updateEffects
EntityLiving bx lastDamager
EntityLiving by hurtTimestamp
EntityLiving c (F)V setHealth
EntityLiving c (LDamageSource;F)F applyMagicModifier
EntityLiving c (LMobEffect;)Z addEffect
EntityLiving cA ()V initAttributes
EntityLiving cE ()Z isDropExperience
EntityLiving cF ()Z alwaysGivesExp
EntityLiving cG ()Ljava/util/Random; getRandom
EntityLiving cH ()LEntityLiving; getLastDamager
EntityLiving cM ()V tickPotionEffects
EntityLiving cO ()Z removeAllEffects
EntityLiving cP ()Ljava/util/Collection; getEffects
EntityLiving cS ()F getHealth
EntityLiving cU ()V dropInventory
EntityLiving cV ()V dropExperience
EntityLiving cX ()LSoundEffect; getSoundDeath
EntityLiving cz ()LBehaviorController; getBehaviorController
EntityLiving d (LDamageSource;F)V damageEntity0
EntityLiving d (LEntityHuman;)I getExpValue
EntityLiving d (LEntityLiving;)V shieldBlock
EntityLiving d (LMobEffectList;)Z removeEffect
EntityLiving d HEALTH
EntityLiving dA ()LEnumMainHand; getMainHand
EntityLiving dB ()Z isHandRaised
EntityLiving dC ()LEnumHand; getRaisedHand
EntityLiving dG ()V clearActiveItem
EntityLiving dI ()Z isBlocking
EntityLiving dK ()Z isGliding
EntityLiving dO ()Ljava/util/Optional; getBedPosition
EntityLiving dQ ()Z isSleeping
EntityLiving dR ()V entityWakeup
EntityLiving da ()I getArmorStrength
EntityLiving db ()LCombatTracker; getCombatTracker
EntityLiving dc ()LEntityLiving; getKillingEntity
EntityLiving dd ()F getMaxHealth
EntityLiving de ()I getArrowCount
EntityLiving dh ()LAttributeMapBase; getAttributeMap
EntityLiving di ()LEnumMonsterType; getMonsterType
EntityLiving dj ()LItemStack; getItemInMainHand
EntityLiving dk ()LItemStack; getItemInOffHand
EntityLiving dm ()F getSoundVolume
EntityLiving do ()Z isFrozen
EntityLiving dq ()V jump
EntityLiving du ()V doTick
EntityLiving dv ()V collideNearby
EntityLiving dw ()Z isRiptiding
EntityLiving dx ()Z doAITick
EntityLiving dy ()F getAbsorptionHearts
EntityLiving e ()V enterCombat
EntityLiving e (LBlockPosition;)V entitySleep
EntityLiving e (LDamageSource;)LSoundEffect; getSoundHurt
EntityLiving f ()V exitCombat
EntityLiving g (LDamageSource;)Z applyBlockingModifier
EntityLiving k ()V movementTick
EntityLiving m (F)V damageArmor
EntityLiving n (F)V damageShield
EntityLiving o (I)LSoundEffect; getSoundFall
EntityLiving p (I)V setArrowCount
EntityLiving q (F)V setAbsorptionHearts
EntityLiving x_ ()Z isBaby
EntityLiving y_ ()Z isClimbing
EntityLlama eX ()I getStrength
EntityLlama eY ()I getVariant
EntityLlama w (I)V setVariant
EntityLlama x (I)V setStrength
EntityLlamaSpit b shooter
EntityMinecartAbstract a (F)V setDamage
EntityMinecartAbstract b (LIBlockData;)V setDisplayBlock
EntityMinecartAbstract f ()D getMaxSpeed
EntityMinecartAbstract k ()V decelerate
EntityMinecartAbstract l ()F getDamage
EntityMinecartAbstract l (I)V setDisplayBlockOffset
EntityMinecartAbstract m ()I getType
EntityMinecartAbstract o ()LEntityMinecartAbstract$EnumMinecartType; getMinecartType
EntityMinecartAbstract p ()LIBlockData; getDisplayBlock
EntityMinecartAbstract r ()I getDisplayBlockOffset
EntityMinecartAbstract$EnumMinecartType a RIDEABLE
EntityMinecartAbstract$EnumMinecartType b CHEST
EntityMinecartAbstract$EnumMinecartType c FURNACE
EntityMinecartAbstract$EnumMinecartType d TNT
EntityMinecartAbstract$EnumMinecartType e SPAWNER
EntityMinecartAbstract$EnumMinecartType f HOPPER
EntityMinecartAbstract$EnumMinecartType g COMMAND_BLOCK
EntityMinecartCommandBlock b COMMAND
EntityMinecartCommandBlock v ()LCommandBlockListenerAbstract; getCommandBlock
EntityMinecartContainer a (LMinecraftKey;J)V setLootTable
EntityMinecartContainer b items
EntityMinecartContainer d lootTable
EntityMinecartContainer e lootTableSeed
EntityMinecartHopper m (I)V setCooldown
EntityMinecartHopper n (Z)V setEnabled
EntityMinecartHopper v ()Z isEnabled
EntityMonster a (LDamageSource;F)Z damageEntity
EntityMonsterPatrolling b patrolTarget
EntityMonsterPatrolling c patrolLeader
EntityMonsterPatrolling d patrolling
EntityMonsterPatrolling et ()LBlockPosition; getPatrolTarget
EntityMonsterPatrolling ev ()Z isPatrolLeader
EntityMonsterPatrolling ez ()Z isPatrolling
EntityMonsterPatrolling g (LBlockPosition;)V setPatrolTarget
EntityMonsterPatrolling r (Z)V setPatrolLeader
EntityMushroomCow a (LEntityMushroomCow$Type;)V setVariant
EntityMushroomCow eq ()LEntityMushroomCow$Type; getVariant
EntityMushroomCow$Type a RED
EntityMushroomCow$Type b BROWN
EntityOcelot er ()Z isTrusting
EntityOcelot r (Z)V setTrusting
EntityPainting e art
EntityPanda a (LEntityPanda$Gene;)V setMainGene
EntityPanda b (LEntityPanda$Gene;)V setHiddenGene
EntityPanda bO PICKUP_PREDICATE
EntityPanda eA ()LEntityPanda$Gene; getMainGene
EntityPanda eB ()LEntityPanda$Gene; getHiddenGene
EntityPanda$Gene a NORMAL
EntityPanda$Gene b LAZY
EntityPanda$Gene c ()Z isRecessive
EntityPanda$Gene c WORRIED
EntityPanda$Gene d PLAYFUL
EntityPanda$Gene e BROWN
EntityPanda$Gene f WEAK
EntityPanda$Gene g AGGRESSIVE
EntityParrot eA ()I getVariant
EntityParrot t (I)V setVariant
EntityPhantom a (I)V setSize
EntityPhantom l ()I getSize
EntityPhantom$AttackPhase a CIRCLE
EntityPhantom$AttackPhase b SWOOP
EntityPig eq ()Z hasSaddle
EntityPig r (Z)V setSaddle
EntityPigZombie bw angerLevel
EntityPigZombie bx soundDelay
EntityPigZombie by hurtBy
EntityPillager bw inventory
EntityPillager eA ()LInventorySubcontainer; getInventory
EntityPlayer A ()LServerStatisticManager; getStatisticManager
EntityPlayer D ()LEntity; getSpecatorTarget
EntityPlayer G ()LIChatBaseComponent; getPlayerListName
EntityPlayer J ()LAdvancementDataPlayer; getAdvancementData
EntityPlayer a (LContainer;)V updateInventory
EntityPlayer a (LEntityPlayer;Z)V copyFrom
EntityPlayer a (Ljava/lang/String;Ljava/lang/String;)V setResourcePack
EntityPlayer b (LWorldServer;)V triggerDimensionAdvancements
EntityPlayer b playerConnection
EntityPlayer bS locale
EntityPlayer bT removeQueue
EntityPlayer bU advancementDataPlayer
EntityPlayer bV serverStatisticManager
EntityPlayer bW lastHealthScored
EntityPlayer bX lastFoodScored
EntityPlayer bY lastAirScored
EntityPlayer bZ lastArmorScored
EntityPlayer c server
EntityPlayer ca lastExpLevelScored
EntityPlayer cb lastExpTotalScored
EntityPlayer cc lastHealthSent
EntityPlayer cd lastFoodSent
EntityPlayer ce lastSentSaturationZero
EntityPlayer cf lastSentExp
EntityPlayer cg invulnerableTicks
EntityPlayer ck spectatedEntity
EntityPlayer cl worldChangeInvuln
EntityPlayer cn recipeBook
EntityPlayer ct containerCounter
EntityPlayer d playerInteractManager
EntityPlayer e (LEntity;)V setSpectatorTarget
EntityPlayer eC ()Z canPvP
EntityPlayer eD ()V nextContainerCounter
EntityPlayer f ping
EntityPlayer g viewingCredits
EntityPlayer i ()V playerTick
EntityPlayer l ()V broadcastCarriedItem
EntityPlayer p ()V triggerHealthUpdate
EntityPlayer s ()LWorldServer; getWorldServer
EntityPlayer u_ ()V syncInventory
EntityPlayer x ()LEnumChatVisibility; getChatFlags
EntityPlayer z ()V resetIdleTimer
EntityPose a STANDING
EntityPose b FALL_FLYING
EntityPose c SLEEPING
EntityPose d SWIMMING
EntityPose e SPIN_ATTACK
EntityPose f CROUCHING
EntityPose g DYING
EntityPositionTypes$Surface a ON_GROUND
EntityPositionTypes$Surface b IN_WATER
EntityPositionTypes$Surface c NO_RESTRICTIONS
EntityPotion b (LItemStack;)V setItem
EntityPotion f ()LItemStack; getItem
EntityPotion i ()V splash
EntityPotion k ()Z isLingering
EntityProjectile ao shooterId
EntityProjectile b inGround
EntityProjectile c shake
EntityProjectile d shooter
EntityProjectile e blockX
EntityProjectile f blockY
EntityProjectile g blockZ
EntityProjectile m ()LEntityLiving; getShooter
EntityProjectileThrowable b (LItemStack;)V setItem
EntityProjectileThrowable k ()LItemStack; getItem
EntityPufferFish b (I)V setPuffState
EntityPufferFish es ()I getPuffState
EntityRabbit er ()LSoundEffect; getSoundJump
EntityRabbit es ()I getRabbitType
EntityRabbit t (I)V setRabbitType
EntityRabbit$PathfinderGoalEatCarrots g entity
EntitySelector b (LCommandListenerWrapper;)Ljava/util/List; getEntities
EntitySelector m checkPermissions
EntitySheep b (LEnumColor;)V setColor
EntitySheep eq ()V shear
EntitySheep er ()LEnumColor; getColor
EntitySheep es ()Z isSheared
EntitySheep r (Z)V setSheared
EntityShulker bw COLOR
EntityShulkerBullet b shooter
EntityShulkerBullet c target
EntityShulkerBullet d dir
EntitySilverfish$PathfinderGoalSilverfishWakeOthers a silverfish
EntitySize a width
EntitySize b height
EntitySlime a (IZ)V setSize
EntitySlime es ()LSoundEffect; getSoundSquish
EntitySlime et ()LSoundEffect; getSoundJump
EntitySlime eu ()I getSize
EntitySnowman l ()Z hasPumpkin
EntitySnowman r (Z)V setHasPumpkin
EntitySpectralArrow ao duration
EntityTNTPrimed a (I)V setFuseTicks
EntityTNTPrimed b FUSE_TICKS
EntityTNTPrimed c source
EntityTNTPrimed d fuseTicks
EntityTNTPrimed f ()LEntityLiving; getSource
EntityTNTPrimed k ()I getFuseTicks
EntityTNTPrimed l ()V explode
EntityTameableAnimal C_ ()Ljava/util/UUID; getOwnerUUID
EntityTameableAnimal b (Ljava/util/UUID;)V setOwnerUUID
EntityTameableAnimal by goalSit
EntityTameableAnimal e (LEntityHuman;)V tame
EntityTameableAnimal eq ()Z isTamed
EntityTameableAnimal es ()Z isSitting
EntityTameableAnimal et ()LEntityLiving; getOwner
EntityTameableAnimal eu ()LPathfinderGoalSit; getGoalSit
EntityTameableAnimal s (Z)V setTamed
EntityTameableAnimal t (Z)V setSitting
EntityThrownTrident ar trident
EntityTippedArrow a (LMobEffect;)V addEffect
EntityTippedArrow ao COLOR
EntityTippedArrow ap potionRegistry
EntityTippedArrow aq effects
EntityTippedArrow ar hasColor
EntityTippedArrow c (I)V setColor
EntityTippedArrow w ()I getColor
EntityTrackerEntry a (LPacket;)V broadcastIncludingSelf
EntityTrackerEntry c tracker
EntityTrackerEntry g xLoc
EntityTrackerEntry h yLoc
EntityTrackerEntry i zLoc
EntityTrackerEntry j yRot
EntityTrackerEntry k xRot
EntityTrackerEntry l headYaw
EntityTrackerEntry n tickCounter
EntityTropicalFish ez ()I getVariant
EntityTropicalFish v (I)V setVariant
EntityTropicalFish$Variant a KOB
EntityTropicalFish$Variant b SUNSTREAK
EntityTropicalFish$Variant c SNOOPER
EntityTropicalFish$Variant d DASHER
EntityTropicalFish$Variant e BRINELY
EntityTropicalFish$Variant f SPOTTY
EntityTropicalFish$Variant g FLOPPER
EntityTropicalFish$Variant h STRIPEY
EntityTropicalFish$Variant i GLITTER
EntityTropicalFish$Variant j BLOCKFISH
EntityTropicalFish$Variant k BETTY
EntityTropicalFish$Variant l CLAYFISH
EntityTypes A FALLING_BLOCK
EntityTypes B FIREWORK_ROCKET
EntityTypes C FOX
EntityTypes D GHAST
EntityTypes E GIANT
EntityTypes F GUARDIAN
EntityTypes G HORSE
EntityTypes H HUSK
EntityTypes I ILLUSIONER
EntityTypes J ITEM
EntityTypes K ITEM_FRAME
EntityTypes L FIREBALL
EntityTypes M LEASH_KNOT
EntityTypes N LLAMA
EntityTypes O LLAMA_SPIT
EntityTypes P MAGMA_CUBE
EntityTypes Q MINECART
EntityTypes R CHEST_MINECART
EntityTypes S COMMAND_BLOCK_MINECART
EntityTypes T FURNACE_MINECART
EntityTypes U HOPPER_MINECART
EntityTypes V SPAWNER_MINECART
EntityTypes W TNT_MINECART
EntityTypes X MULE
EntityTypes Y MOOSHROOM
EntityTypes Z OCELOT
EntityTypes a (LEntityTypes;)LMinecraftKey; getName
EntityTypes a (LWorld;LItemStack;LEntityHuman;LBlockPosition;LEnumMobSpawn;ZZ)LEntity; spawnCreature
EntityTypes a (LWorld;LNBTTagCompound;LIChatBaseComponent;LEntityHuman;LBlockPosition;LEnumMobSpawn;ZZ)LEntity; spawnCreature
EntityTypes a AREA_EFFECT_CLOUD
EntityTypes aA TURTLE
EntityTypes aB EGG
EntityTypes aC ENDER_PEARL
EntityTypes aD EXPERIENCE_BOTTLE
EntityTypes aE POTION
EntityTypes aF TRIDENT
EntityTypes aG VEX
EntityTypes aH VILLAGER
EntityTypes aI IRON_GOLEM
EntityTypes aJ VINDICATOR
EntityTypes aK PILLAGER
EntityTypes aL WANDERING_TRADER
EntityTypes aM WITCH
EntityTypes aN WITHER
EntityTypes aO WITHER_SKELETON
EntityTypes aP WITHER_SKULL
EntityTypes aQ WOLF
EntityTypes aR ZOMBIE
EntityTypes aS ZOMBIE_HORSE
EntityTypes aT ZOMBIE_VILLAGER
EntityTypes aU PHANTOM
EntityTypes aV RAVAGER
EntityTypes aW LIGHTNING_BOLT
EntityTypes aX PLAYER
EntityTypes aY FISHING_BOBBER
EntityTypes aa PAINTING
EntityTypes ab PANDA
EntityTypes ac PARROT
EntityTypes ad PIG
EntityTypes ae PUFFERFISH
EntityTypes af ZOMBIE_PIGMAN
EntityTypes ag POLAR_BEAR
EntityTypes ah TNT
EntityTypes ai RABBIT
EntityTypes aj SALMON
EntityTypes ak SHEEP
EntityTypes al SHULKER
EntityTypes am SHULKER_BULLET
EntityTypes an SILVERFISH
EntityTypes ao SKELETON
EntityTypes ap SKELETON_HORSE
EntityTypes aq SLIME
EntityTypes ar SMALL_FIREBALL
EntityTypes as SNOW_GOLEM
EntityTypes at SNOWBALL
EntityTypes au SPECTRAL_ARROW
EntityTypes av SPIDER
EntityTypes aw SQUID
EntityTypes ax STRAY
EntityTypes ay TRADER_LLAMA
EntityTypes az TROPICAL_FISH
EntityTypes b ARMOR_STAND
EntityTypes c ARROW
EntityTypes d BAT
EntityTypes e BEE
EntityTypes f BLAZE
EntityTypes g BOAT
EntityTypes h CAT
EntityTypes i CAVE_SPIDER
EntityTypes j CHICKEN
EntityTypes k COD
EntityTypes l ()I getChunkRange
EntityTypes l COW
EntityTypes m ()I getUpdateInterval
EntityTypes m CREEPER
EntityTypes n ()Z isDeltaTracking
EntityTypes n DONKEY
EntityTypes o DOLPHIN
EntityTypes p DRAGON_FIREBALL
EntityTypes q DROWNED
EntityTypes r ELDER_GUARDIAN
EntityTypes s END_CRYSTAL
EntityTypes t ENDER_DRAGON
EntityTypes u ENDERMAN
EntityTypes v ENDERMITE
EntityTypes w EVOKER_FANGS
EntityTypes x EVOKER
EntityTypes y EXPERIENCE_ORB
EntityTypes z EYE_OF_ENDER
EntityVex er ()Z isCharging
EntityVex r (Z)V setCharging
EntityVillager a (LVillagerData;)V setVillagerData
EntityVillager eI ()Z canBreed
EntityVillager eX ()V populateTrades
EntityVillager u (I)V setExperience
EntityVillagerAbstract bw trades
EntityVillagerAbstract by tradingPlayer
EntityVillagerAbstract bz inventory
EntityVillagerAbstract ez ()LInventorySubcontainer; getInventory
EntityWither a (II)V setHeadTarget
EntityWither bF bossBattle
EntityWither t (I)I getHeadTarget
EntityWitherSkull a (Z)V setCharged
EntityWitherSkull l ()Z isCharged
EntityWolf a (LEnumColor;)V setCollarColor
EntityWolf eB ()Z isAngry
EntityWolf eC ()LEnumColor; getCollarColor
EntityWolf u (Z)V setAngry
EntityZombie a (I)V startDrownedConversion
EntityZombie a (LDamageSource;F)Z damageEntity
EntityZombie bD drownedConversionTime
EntityZombie by DROWN_CONVERTING
EntityZombie er ()LSoundEffect; getSoundStep
EntityZombie ex ()Z isDrownConverting
EntityZombie t (Z)V setBaby
EntityZombieVillager a (LVillagerData;)V setVillagerData
EntityZombieVillager a (Ljava/util/UUID;I)V startConversion
EntityZombieVillager b CONVERTING
EntityZombieVillager bw conversionTime
EntityZombieVillager bx conversionPlayer
EntityZombieVillager eA ()LVillagerData; getVillagerData
EntityZombieVillager eC ()I getConversionProgress
EntityZombieVillager ez ()Z isConverting
EntityZombieVillager g (LNBTTagCompound;)V setOffers
EnumAnimation a NONE
EnumAnimation b EAT
EnumAnimation c DRINK
EnumAnimation d BLOCK
EnumAnimation e BOW
EnumAnimation f SPEAR
EnumAnimation g CROSSBOW
EnumArmorMaterial a LEATHER
EnumArmorMaterial b CHAIN
EnumArmorMaterial c IRON
EnumArmorMaterial d GOLD
EnumArmorMaterial e DIAMOND
EnumArmorMaterial f TURTLE
EnumAxisCycle a NONE
EnumAxisCycle b FORWARD
EnumAxisCycle c BACKWARD
EnumBannerPatternType A HALF_VERTICAL
EnumBannerPatternType B HALF_HORIZONTAL
EnumBannerPatternType C HALF_VERTICAL_MIRROR
EnumBannerPatternType D HALF_HORIZONTAL_MIRROR
EnumBannerPatternType E BORDER
EnumBannerPatternType F CURLY_BORDER
EnumBannerPatternType G GRADIENT
EnumBannerPatternType H GRADIENT_UP
EnumBannerPatternType I BRICKS
EnumBannerPatternType J GLOBE
EnumBannerPatternType K CREEPER
EnumBannerPatternType L SKULL
EnumBannerPatternType M FLOWER
EnumBannerPatternType N MOJANG
EnumBannerPatternType a BASE
EnumBannerPatternType b SQUARE_BOTTOM_LEFT
EnumBannerPatternType c SQUARE_BOTTOM_RIGHT
EnumBannerPatternType d SQUARE_TOP_LEFT
EnumBannerPatternType e SQUARE_TOP_RIGHT
EnumBannerPatternType f STRIPE_BOTTOM
EnumBannerPatternType g STRIPE_TOP
EnumBannerPatternType h STRIPE_LEFT
EnumBannerPatternType i STRIPE_RIGHT
EnumBannerPatternType j STRIPE_CENTER
EnumBannerPatternType k STRIPE_MIDDLE
EnumBannerPatternType l STRIPE_DOWNRIGHT
EnumBannerPatternType m STRIPE_DOWNLEFT
EnumBannerPatternType n STRIPE_SMALL
EnumBannerPatternType o CROSS
EnumBannerPatternType p STRAIGHT_CROSS
EnumBannerPatternType q TRIANGLE_BOTTOM
EnumBannerPatternType r TRIANGLE_TOP
EnumBannerPatternType s TRIANGLES_BOTTOM
EnumBannerPatternType t TRIANGLES_TOP
EnumBannerPatternType u DIAGONAL_LEFT
EnumBannerPatternType v DIAGONAL_RIGHT
EnumBannerPatternType w DIAGONAL_LEFT_MIRROR
EnumBannerPatternType x DIAGONAL_RIGHT_MIRROR
EnumBannerPatternType y CIRCLE_MIDDLE
EnumBannerPatternType z RHOMBUS_MIDDLE
EnumBlockMirror a NONE
EnumBlockMirror b LEFT_RIGHT
EnumBlockMirror c FRONT_BACK
EnumBlockRotation a NONE
EnumBlockRotation b CLOCKWISE_90
EnumBlockRotation c CLOCKWISE_180
EnumBlockRotation d COUNTERCLOCKWISE_90
EnumChatFormat a BLACK
EnumChatFormat b DARK_BLUE
EnumChatFormat c ()Z isFormat
EnumChatFormat c DARK_GREEN
EnumChatFormat d DARK_AQUA
EnumChatFormat e DARK_RED
EnumChatFormat f DARK_PURPLE
EnumChatFormat g GOLD
EnumChatFormat h GRAY
EnumChatFormat i DARK_GRAY
EnumChatFormat j BLUE
EnumChatFormat k GREEN
EnumChatFormat l AQUA
EnumChatFormat m RED
EnumChatFormat n LIGHT_PURPLE
EnumChatFormat o YELLOW
EnumChatFormat p WHITE
EnumChatFormat q OBFUSCATED
EnumChatFormat r BOLD
EnumChatFormat s STRIKETHROUGH
EnumChatFormat t UNDERLINE
EnumChatFormat u ITALIC
EnumChatFormat v RESET
EnumChatFormat z character
EnumChatVisibility a FULL
EnumChatVisibility b SYSTEM
EnumChatVisibility c HIDDEN
EnumColor a ()I getColorIndex
EnumColor a (I)LEnumColor; fromColorIndex
EnumColor a WHITE
EnumColor b ORANGE
EnumColor c MAGENTA
EnumColor d LIGHT_BLUE
EnumColor e YELLOW
EnumColor f LIME
EnumColor g PINK
EnumColor h GRAY
EnumColor i LIGHT_GRAY
EnumColor j CYAN
EnumColor k PURPLE
EnumColor l BLUE
EnumColor m BROWN
EnumColor n GREEN
EnumColor o RED
EnumColor p BLACK
EnumCreatureType a MONSTER
EnumCreatureType b CREATURE
EnumCreatureType c AMBIENT
EnumCreatureType d WATER_CREATURE
EnumCreatureType e MISC
EnumDifficulty a (I)LEnumDifficulty; getById
EnumDifficulty a PEACEFUL
EnumDifficulty b EASY
EnumDifficulty c NORMAL
EnumDifficulty d HARD
EnumDirection a (D)LEnumDirection; fromAngle
EnumDirection a (I)LEnumDirection; fromType1
EnumDirection a DOWN
EnumDirection b (I)LEnumDirection; fromType2
EnumDirection b UP
EnumDirection c ()I get2DRotationValue
EnumDirection c NORTH
EnumDirection d SOUTH
EnumDirection e ()LEnumDirection; opposite
EnumDirection e WEST
EnumDirection f EAST
EnumDirection h ()I getAdjacentX
EnumDirection i ()I getAdjacentY
EnumDirection j ()I getAdjacentZ
EnumDirection$EnumAxis a X
EnumDirection$EnumAxis b Y
EnumDirection$EnumAxis c Z
EnumDirection$EnumAxisDirection a POSITIVE
EnumDirection$EnumAxisDirection b NEGATIVE
EnumDirection$EnumDirectionLimit a HORIZONTAL
EnumDirection$EnumDirectionLimit b VERTICAL
EnumDirection8 a NORTH
EnumDirection8 b NORTH_EAST
EnumDirection8 c EAST
EnumDirection8 d SOUTH_EAST
EnumDirection8 e SOUTH
EnumDirection8 f SOUTH_WEST
EnumDirection8 g WEST
EnumDirection8 h NORTH_WEST
EnumDragonRespawn a START
EnumDragonRespawn b PREPARING_TO_SUMMON_PILLARS
EnumDragonRespawn c SUMMONING_PILLARS
EnumDragonRespawn d SUMMONING_DRAGON
EnumDragonRespawn e END
EnumGamemode a ()I getId
EnumGamemode a (I)LEnumGamemode; getById
EnumGamemode a NOT_SET
EnumGamemode b SURVIVAL
EnumGamemode c CREATIVE
EnumGamemode d ADVENTURE
EnumGamemode e ()Z isCreative
EnumGamemode e SPECTATOR
EnumHand a MAIN_HAND
EnumHand b OFF_HAND
EnumInteractionResult a SUCCESS
EnumInteractionResult b CONSUME
EnumInteractionResult c PASS
EnumInteractionResult d FAIL
EnumItemRarity a COMMON
EnumItemRarity b UNCOMMON
EnumItemRarity c RARE
EnumItemRarity d EPIC
EnumItemSlot a (Ljava/lang/String;)LEnumItemSlot; fromName
EnumItemSlot a MAINHAND
EnumItemSlot b OFFHAND
EnumItemSlot c FEET
EnumItemSlot d ()Ljava/lang/String; getSlotName
EnumItemSlot d LEGS
EnumItemSlot e CHEST
EnumItemSlot f HEAD
EnumItemSlot$Function a HAND
EnumItemSlot$Function b ARMOR
EnumMainHand a LEFT
EnumMainHand b RIGHT
EnumMobSpawn a NATURAL
EnumMobSpawn b CHUNK_GENERATION
EnumMobSpawn c SPAWNER
EnumMobSpawn d STRUCTURE
EnumMobSpawn e BREEDING
EnumMobSpawn f MOB_SUMMONED
EnumMobSpawn g JOCKEY
EnumMobSpawn h EVENT
EnumMobSpawn i CONVERSION
EnumMobSpawn j REINFORCEMENT
EnumMobSpawn k TRIGGERED
EnumMobSpawn l BUCKET
EnumMobSpawn m SPAWN_EGG
EnumMobSpawn n COMMAND
EnumMobSpawn o DISPENSER
EnumMobSpawn p PATROL
EnumMonsterType a UNDEFINED
EnumMonsterType b UNDEAD
EnumMonsterType c ARTHROPOD
EnumMonsterType d ILLAGER
EnumMoveType a SELF
EnumMoveType b PLAYER
EnumMoveType c PISTON
EnumMoveType d SHULKER_BOX
EnumMoveType e SHULKER
EnumPistonReaction a NORMAL
EnumPistonReaction b DESTROY
EnumPistonReaction c BLOCK
EnumPistonReaction d IGNORE
EnumPistonReaction e PUSH_ONLY
EnumProtocol a HANDSHAKING
EnumProtocol b PLAY
EnumProtocol c STATUS
EnumProtocol d LOGIN
EnumProtocolDirection a SERVERBOUND
EnumProtocolDirection b CLIENTBOUND
EnumRenderType a INVISIBLE
EnumRenderType b ENTITYBLOCK_ANIMATED
EnumRenderType c MODEL
EnumResourcePackType a CLIENT_RESOURCES
EnumResourcePackType b SERVER_DATA
EnumResourcePackVersion a TOO_OLD
EnumResourcePackVersion b TOO_NEW
EnumResourcePackVersion c COMPATIBLE
EnumSkyBlock a SKY
EnumSkyBlock b BLOCK
EnumToolMaterial a WOOD
EnumToolMaterial b STONE
EnumToolMaterial c IRON
EnumToolMaterial d DIAMOND
EnumToolMaterial e GOLD
ExpirableListEntry b ()Ljava/lang/String; getSource
ExpirableListEntry c ()Ljava/util/Date; getExpires
ExpirableListEntry d ()Ljava/lang/String; getReason
Explosion d ()LEntityLiving; getSource
Explosion d world
Explosion e ()V clearBlocks
Explosion e posX
Explosion f ()Ljava/util/List; getBlocks
Explosion f posY
Explosion g posZ
Explosion h source
Explosion i size
Explosion k blocks
Explosion$Effect a NONE
Explosion$Effect b BREAK
Explosion$Effect c DESTROY
Fluid a (LIBlockAccess;LBlockPosition;)F getHeight
Fluid c ()LFluidType; getType
Fluid d ()Z isSource
Fluid e ()Z isEmpty
Fluid i ()LIBlockData; getBlockData
FluidTypeFlowing a FALLING
FluidTypeFlowing b LEVEL
FluidTypes a EMPTY
FluidTypes b FLOWING_WATER
FluidTypes c WATER
FluidTypes d FLOWING_LAVA
FluidTypes e LAVA
FoodInfo a ()I getNutrition
FoodInfo b ()F getSaturationModifier
FoodMetaData a ()I getFoodLevel
FoodMetaData a (IF)V eat
FoodMetaData a foodLevel
FoodMetaData b saturationLevel
FoodMetaData c exhaustionLevel
FoodMetaData d foodTickTimer
FoodMetaData e ()F getSaturationLevel
GameProfileBanList a (Lcom/mojang/authlib/GameProfile;)Z isBanned
GameProfileSerializer a (LNBTTagCompound;)Lcom/mojang/authlib/GameProfile; deserialize
GameProfileSerializer a (LNBTTagCompound;Lcom/mojang/authlib/GameProfile;)LNBTTagCompound; serialize
GameProfilerFiller a (Ljava/lang/String;)V enter
GameProfilerFiller b (Ljava/lang/String;)V exitEnter
GameProfilerFiller c ()V exit
GameRules A DROWNING_DAMAGE
GameRules B FALL_DAMAGE
GameRules C FIRE_DAMAGE
GameRules a (LGameRules$GameRuleKey;)LGameRules$GameRuleValue; get
GameRules a DO_FIRE_TICK
GameRules b (LGameRules$GameRuleKey;)Z getBoolean
GameRules b MOB_GRIEFING
GameRules c (LGameRules$GameRuleKey;)I getInt
GameRules c KEEP_INVENTORY
GameRules d DO_MOB_SPAWNING
GameRules e DO_MOB_LOOT
GameRules f DO_TILE_DROPS
GameRules g DO_ENTITY_DROPS
GameRules h COMMAND_BLOCK_OUTPUT
GameRules i NATURAL_REGENERATION
GameRules j DO_DAYLIGHT_CYCLE
GameRules k LOG_ADMIN_COMMANDS
GameRules l SHOW_DEATH_MESSAGES
GameRules m RANDOM_TICK_SPEED
GameRules n SEND_COMMAND_FEEDBACK
GameRules o REDUCED_DEBUG_INFO
GameRules p SPECTATORS_GENERATE_CHUNKS
GameRules q SPAWN_RADIUS
GameRules r DISABLE_ELYTRA_MOVEMENT_CHECK
GameRules s MAX_ENTITY_CRAMMING
GameRules t DO_WEATHER_CYCLE
GameRules u DO_LIMITED_CRAFTING
GameRules v MAX_COMMAND_CHAIN_LENGTH
GameRules w ANNOUNCE_ADVANCEMENTS
GameRules x DISABLE_RAIDS
GameRules y DO_INSOMNIA
GameRules z DO_IMMEDIATE_RESPAWN
GameRules$GameRuleDefinition a ()LGameRules$GameRuleValue; getValue
GameRules$GameRuleValue a (Ljava/lang/String;)V setValue
GameRules$GameRuleValue a (Lnet/minecraft/server/MinecraftServer;)V onChange
GameRules$GameRuleValue b ()Ljava/lang/String; getValue
GameRules$GameRuleValue c ()I getIntValue
GenLayerCleaner a INSTANCE
GenLayerDeepOcean a INSTANCE
GenLayerDesert a INSTANCE
GenLayerIcePlains a INSTANCE
GenLayerIsland a INSTANCE
GenLayerJungle a INSTANCE
GenLayerMushroomIsland a INSTANCE
GenLayerMushroomShore a INSTANCE
GenLayerOcean a INSTANCE
GenLayerOceanEdge a INSTANCE
GenLayerPlains a INSTANCE
GenLayerRegionHills a INSTANCE
GenLayerRiver a INSTANCE
GenLayerRiverMix a INSTANCE
GenLayerSmooth a INSTANCE
GenLayerSpecial$Special1 a INSTANCE
GenLayerSpecial$Special2 a INSTANCE
GenLayerSpecial$Special3 a INSTANCE
GenLayerTopSoil a INSTANCE
GenLayerZoom a NORMAL
GenLayerZoom b FUZZY
GenLayerZoomVoronoi a INSTANCE
GenLayerZoomVoronoiFixed a INSTANCE
GeneratorAccess E ()LIChunkProvider; getChunkProvider
GeneratorAccess F ()LTickList; getFluidTickList
GeneratorAccess G ()LTickList; getBlockTickList
GeneratorAccess a (LBlockPosition;LBlock;)V update
GeneratorAccess a (LEntityHuman;LBlockPosition;LSoundEffect;LSoundCategory;FF)V playSound
GeneratorAccess a (LParticleParam;DDDDDD)V addParticle
GeneratorAccess aa ()LEnumDifficulty; getDifficulty
GeneratorAccess c (ILBlockPosition;I)V triggerEffect
GeneratorAccess d (LBlockPosition;)LDifficultyDamageScaler; getDamageScaler
GeneratorAccess i ()LWorldData; getWorldData
GeneratorAccess q ()LWorld; getMinecraftWorld
GeneratorAccess r_ ()J getSeed
GeneratorAccess t_ ()Ljava/util/Random; getRandom
GenericAttributes a MAX_HEALTH
GenericAttributes b FOLLOW_RANGE
GenericAttributes c KNOCKBACK_RESISTANCE
GenericAttributes d MOVEMENT_SPEED
GenericAttributes e FLYING_SPEED
GenericAttributes f ATTACK_DAMAGE
GenericAttributes g ATTACK_KNOCKBACK
GenericAttributes h ATTACK_SPEED
GenericAttributes i ARMOR
GenericAttributes j ARMOR_TOUGHNESS
GenericAttributes k LUCK
GlobalPos a ()LDimensionManager; getDimensionManager
GlobalPos a (LDimensionManager;LBlockPosition;)LGlobalPos; create
GlobalPos a dimensionManager
GlobalPos b ()LBlockPosition; getBlockPosition
GlobalPos b blockPosition
HeightMap$Type a WORLD_SURFACE_WG
HeightMap$Type b WORLD_SURFACE
HeightMap$Type c OCEAN_FLOOR_WG
HeightMap$Type d OCEAN_FLOOR
HeightMap$Type e MOTION_BLOCKING
HeightMap$Type f MOTION_BLOCKING_NO_LEAVES
HeightMap$Use a WORLDGEN
HeightMap$Use b LIVE_WORLD
HeightMap$Use c CLIENT
IAsyncTaskHandler a (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; executeFuture
IAsyncTaskHandler ax ()Z isNotMainThread
IAsyncTaskHandler ay ()Ljava/lang/Thread; getThread
IAsyncTaskHandler bf ()Z isMainThread
IAsyncTaskHandler bj ()V executeAll
IAsyncTaskHandler c (Ljava/lang/Runnable;)Z canExecute
IAsyncTaskHandler c (Ljava/util/function/BooleanSupplier;)V awaitTasks
IAsyncTaskHandler d (Ljava/lang/Runnable;)Ljava/lang/Runnable; postToMainThread
IAsyncTaskHandler f (Ljava/lang/Runnable;)V executeSync
IAsyncTaskHandler h (Ljava/lang/Runnable;)V executeTask
IAsyncTaskHandler v ()Z executeNext
IAsyncTaskHandlerReentrant b depth
IAsyncTaskHandlerReentrant bl ()Z isEntered
IAttribute a ()Ljava/lang/String; getName
IAttribute b ()D getDefault
IBlockAccess I ()I getBuildHeight
IBlockAccess a (LRayTrace;)LMovingObjectPositionBlock; rayTrace
IBlockAccess a (LVec3D;LVec3D;LBlockPosition;LVoxelShape;LIBlockData;)LMovingObjectPositionBlock; rayTrace
IBlockAccess b (LBlockPosition;)LFluid; getFluid
IBlockAccess c (LBlockPosition;)LTileEntity; getTileEntity
IBlockAccess d_ (LBlockPosition;)LIBlockData; getType
IBlockData a (LEntityHuman;LIBlockAccess;LBlockPosition;)F getDamage
IBlockData a (LEnumDirection;LIBlockData;LGeneratorAccess;LBlockPosition;LBlockPosition;)LIBlockData; updateState
IBlockData a (LIWorldReader;LBlockPosition;)Z canPlace
IBlockData a (LWorld;LBlockPosition;LBlock;LBlockPosition;Z)V doPhysics
IBlockData a (LWorld;LBlockPosition;LEntityHuman;)V attack
IBlockData a (LWorld;LBlockPosition;LIBlockData;Z)V onPlace
IBlockData a (LWorld;LBlockPosition;LItemStack;)V dropNaturally
IBlockData a (LWorld;LEntityHuman;LEnumHand;LMovingObjectPositionBlock;)LEnumInteractionResult; interact
IBlockData b (LWorld;LBlockPosition;LIBlockData;Z)V remove
IBlockData d ()LBlock; getBlock
IBlockData e ()LMaterial; getMaterial
IBlockData e (LIBlockAccess;LBlockPosition;)Z isOccluding
IBlockData h (LIBlockAccess;LBlockPosition;)LVoxelShape; getShape
IBlockData i ()Z isAir
IBlockData i (LIBlockAccess;LBlockPosition;)LVoxelShape; getCollisionShape
IBlockData l ()Z isPowerSource
IBlockData m ()Z isComplexRedstone
IBlockData n ()LEnumPistonReaction; getPushReaction
IBlockData p ()LFluid; getFluid
IBlockDataHolder a (LIBlockState;Ljava/lang/Comparable;)Ljava/lang/Object; set
IBlockDataHolder b ()Lcom/google/common/collect/ImmutableMap; getStateMap
IBlockDataHolder c (LIBlockState;)Ljava/lang/Comparable; get
IBlockLightAccess a (LEnumSkyBlock;LBlockPosition;)I getBrightness
IBlockLightAccess b (LBlockPosition;I)I getLightLevel
IBlockState d ()Ljava/util/Collection; getValues
IChatBaseComponent a ()Ljava/util/List; getSiblings
IChatBaseComponent a (LChatModifier;)LIChatBaseComponent; setChatModifier
IChatBaseComponent a (LIChatBaseComponent;)LIChatBaseComponent; addSibling
IChatBaseComponent b ()LChatModifier; getChatModifier
IChatBaseComponent d ()Ljava/lang/String; getText
IChatBaseComponent e ()Ljava/lang/String; getLegacyString
IChunkAccess a (J)V setLastSaved
IChunkAccess a (LBlockPosition;LIBlockData;Z)LIBlockData; setType
IChunkAccess a (LBlockPosition;LTileEntity;)V setTileEntity
IChunkAccess a (Z)V setNeedsSaving
IChunkAccess b (J)V setInhabitedTime
IChunkAccess d ()[LChunkSection; getSections
IChunkAccess d (LBlockPosition;)V removeTileEntity
IChunkAccess g ()LChunkCoordIntPair; getPos
IChunkAccess i ()LBiomeStorage; getBiomeIndex
IChunkAccess j ()Z isNeedsSaving
IChunkAccess k ()LChunkStatus; getChunkStatus
IChunkAccess q ()J getInhabitedTime
IChunkLoader a (LDimensionManager;Ljava/util/function/Supplier;LNBTTagCompound;)LNBTTagCompound; getChunkData
IChunkLoader e (LChunkCoordIntPair;)LNBTTagCompound; read
IChunkProvider a (IILChunkStatus;Z)LIChunkAccess; getChunkAt
IChunkProvider a (IIZ)LChunk; getChunkAt
IChunkProvider e ()Ljava/lang/String; getName
IChunkProvider k ()LLightEngine; getLightEngine
ICollisionAccess a_ (LEntity;LAxisAlignedBB;)Z getCubes
ICollisionAccess f ()LWorldBorder; getWorldBorder
ICollisionAccess j (LEntity;)Z getCubes
ICommandListener I_ ()Z shouldBroadcastCommands
ICommandListener a ()Z shouldSendSuccess
ICommandListener a (LIChatBaseComponent;)V sendMessage
ICommandListener a_ DUMMY
ICommandListener b ()Z shouldSendFailure
ICompletionProvider c (I)Z hasPermission
IContainerProperties a (I)I getProperty
IContainerProperties a (II)V setProperty
ICrafting a (LContainer;II)V setContainerData
ICrossbow w ()LEntityLiving; getGoalTarget
IDispenseBehavior a NONE
IDragonController i ()LDragonControllerPhase; getControllerPhase
IEntityAccess A ()Ljava/util/List; getPlayers
IEntityAccess a (DDDD)Z isPlayerNearby
IEntityAccess a (LEntity;D)LEntityHuman; findNearbyPlayer
IEntityAccess a (LEntity;LAxisAlignedBB;)Ljava/util/List; getEntities
IEntityAccess a (LEntity;LAxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
IFluidContainer a (LGeneratorAccess;LBlockPosition;LIBlockData;LFluid;)Z place
IFluidContainer a (LIBlockAccess;LBlockPosition;LIBlockData;LFluidType;)Z canPlace
IFluidSource b (LGeneratorAccess;LBlockPosition;LIBlockData;)LFluidType; removeFluid
IHopper w ()LWorld; getWorld
IInventory L_ ()I getMaxStackSize
IInventory O_ ()I getSize
IInventory a (I)LItemStack; getItem
IInventory a (II)LItemStack; splitStack
IInventory a (ILItemStack;)V setItem
IInventory a_ (LEntityHuman;)V startOpen
IInventory b (I)LItemStack; splitWithoutUpdate
IInventory b_ (LEntityHuman;)V closeContainer
IInventory c ()Z isNotEmpty
IInventory e ()V update
ILightAccess l ()LIBlockAccess; getWorld
IMaterial i ()LItem; getItem
IMerchant a (LEntityHuman;LIChatBaseComponent;I)V openTrade
IMerchant e (LEntityHuman;)V setTradingPlayer
IMerchant eB ()LWorld; getWorld
IMerchant er ()I getExperience
IMerchant es ()LEntityHuman; getTrader
IMerchant eu ()LMerchantRecipeList; getOffers
IMerchant ev ()Z isRegularVillager
IMerchant ew ()LSoundEffect; getTradeSound
IMerchant t (I)V setExperience
IMinecraftServer D ()Ljava/lang/String; getVersion
IMinecraftServer E ()I getPlayerCount
IMinecraftServer F ()I getMaxPlayers
IMinecraftServer G ()[Ljava/lang/String; getPlayers
IMinecraftServer I ()Z isDebugging
IMinecraftServer O ()Ljava/lang/String; getWorld
IMinecraftServer a_ (Ljava/lang/String;)Ljava/lang/String; executeRemoteCommand
IMinecraftServer d_ ()LDedicatedServerProperties; getDedicatedServerProperties
IMinecraftServer e (Ljava/lang/String;)V info
IMinecraftServer f (Ljava/lang/String;)V warning
IMinecraftServer t ()Ljava/lang/String; getPlugins
INamable o ()Ljava/lang/String; getName
INamableTileEntity M ()LIChatBaseComponent; getDisplayName
INamableTileEntity N ()Z hasCustomName
INamableTileEntity O ()LIChatBaseComponent; getCustomName
INamableTileEntity d ()LIChatBaseComponent; getScoreboardDisplayName
IPlayerFileData a (LEntityHuman;)V save
IPlayerFileData b (LEntityHuman;)LNBTTagCompound; load
IPosition a ()D getX
IPosition b ()D getY
IPosition c ()D getZ
IProjectile c (DDDFF)V shoot
IRecipe V_ ()Z isComplex
IRecipe W_ ()LRecipeSerializer; getRecipeSerializer
IRecipe c ()LItemStack; getResult
IRecipe f ()LMinecraftKey; getKey
IRegistry A CHUNK_GENERATOR_TYPE
IRegistry B DIMENSION_TYPE
IRegistry C MOTIVE
IRegistry D CUSTOM_STAT
IRegistry E CHUNK_STATUS
IRegistry F STRUCTURE_FEATURE
IRegistry G STRUCTURE_PIECE
IRegistry H RULE_TEST
IRegistry I STRUCTURE_PROCESSOR
IRegistry J STRUCTURE_POOL_ELEMENT
IRegistry K MENU
IRegistry L RECIPE_TYPE
IRegistry M RECIPE_SERIALIZER
IRegistry N STATS
IRegistry O VILLAGER_TYPE
IRegistry P VILLAGER_PROFESSION
IRegistry Q POINT_OF_INTEREST_TYPE
IRegistry R MEMORY_MODULE_TYPE
IRegistry S SENSOR_TYPE
IRegistry T SCHEDULE
IRegistry U ACTIVITY
IRegistry a (LMinecraftKey;)Ljava/lang/Object; get
IRegistry b ()Ljava/util/Set; keySet
IRegistry b (LMinecraftKey;)Ljava/util/Optional; getOptional
IRegistry b (Ljava/lang/Object;)LMinecraftKey; getKey
IRegistry g SOUND_EVENT
IRegistry h FLUID
IRegistry i MOB_EFFECT
IRegistry j BLOCK
IRegistry k ENCHANTMENT
IRegistry l ENTITY_TYPE
IRegistry m ITEM
IRegistry n POTION
IRegistry o CARVER
IRegistry p SURFACE_BUILDER
IRegistry q FEATURE
IRegistry r DECORATOR
IRegistry s BIOME
IRegistry x PARTICLE_TYPE
IRegistry y BIOME_SOURCE_TYPE
IRegistry z BLOCK_ENTITY_TYPE
IScoreboardCriteria a criteria
IScoreboardCriteria b DUMMY
IScoreboardCriteria c ()Ljava/lang/String; getName
IScoreboardCriteria c TRIGGER
IScoreboardCriteria d ()Z isReadOnly
IScoreboardCriteria d DEATH_COUNT
IScoreboardCriteria e PLAYER_KILL_COUNT
IScoreboardCriteria f TOTAL_KILL_COUNT
IScoreboardCriteria g HEALTH
IScoreboardCriteria h FOOD
IScoreboardCriteria i AIR
IScoreboardCriteria j ARMOR
IScoreboardCriteria k XP
IScoreboardCriteria l LEVEL
IScoreboardCriteria$EnumScoreboardHealthDisplay a INTEGER
IScoreboardCriteria$EnumScoreboardHealthDisplay b HEARTS
ISource h ()LWorld; getWorld
ISourceBlock d ()LBlockPosition; getBlockPosition
ISourceBlock e ()LIBlockData; getBlockData
ISourceBlock g ()LTileEntity; getTileEntity
ITickable Z_ ()V tick
ITileEntity a (LIBlockAccess;)LTileEntity; createTile
ITileInventory d ()LIChatBaseComponent; getScoreboardDisplayName
IWorldInventory a (ILItemStack;LEnumDirection;)Z canPlaceItemThroughFace
IWorldInventory a (LEnumDirection;)[I getSlotsForFace
IWorldInventory b (ILItemStack;LEnumDirection;)Z canTakeItemThroughFace
IWorldReader A (LBlockPosition;)Z isLoaded
IWorldReader a (II)LIChunkAccess; getChunkAt
IWorldReader a (IIIIII)Z isAreaLoaded
IWorldReader a (IILChunkStatus;)LIChunkAccess; getChunkAt
IWorldReader a (IILChunkStatus;Z)LIChunkAccess; getChunkAt
IWorldReader a (LBlockPosition;LBlockPosition;)Z areChunksLoadedBetween
IWorldReader a (LHeightMap$Type;LBlockPosition;)LBlockPosition; getHighestBlockYAt
IWorldReader b (II)Z isChunkLoaded
IWorldReader d (LAxisAlignedBB;)Z containsLiquid
IWorldReader o ()LWorldProvider; getWorldProvider
IWorldReader q_ ()I getSeaLevel
IWorldReader t (LBlockPosition;)LBiomeBase; getBiome
IWorldReader u (LBlockPosition;)Z isEmpty
IWorldReader z (LBlockPosition;)I getLightLevel
IWorldWriter a (LBlockPosition;LIBlockData;I)Z setTypeAndData
IWorldWriter c (LEntity;)Z addEntity
InventoryClickType a PICKUP
InventoryClickType b QUICK_MOVE
InventoryClickType c SWAP
InventoryClickType d CLONE
InventoryClickType e THROW
InventoryClickType f QUICK_CRAFT
InventoryClickType g PICKUP_ALL
InventoryCraftResult a items
InventoryCrafting a items
InventoryCrafting d container
InventoryLargeChest a left
InventoryLargeChest b right
InventoryMerchant a merchant
InventoryMerchant b itemsInSlots
InventoryMerchant c recipe
InventoryMerchant d selectedIndex
InventoryMerchant g ()LMerchantRecipe; getRecipe
InventorySubcontainer b items
InventorySubcontainer e ()V update
InventoryUtils a (LWorld;DDDLIInventory;)V dropInventory
InventoryUtils a (LWorld;DDDLItemStack;)V dropItem
InventoryUtils a (LWorld;LBlockPosition;LIInventory;)V dropInventory
InventoryUtils a (LWorld;LEntity;LIInventory;)V dropEntity
IpBanList a (Ljava/net/SocketAddress;)Z isBanned
IpBanList b (Ljava/net/SocketAddress;)LIpBanEntry; get
Item a ()Ljava/lang/String; getName
Item a (LBlock;)LItem; getItemOf
Item a (LItem;)I getId
Item a (LItemStack;LIBlockData;)F getDestroySpeed
Item b (I)LItem; getById
Item b (LIBlockData;)Z canDestroySpecialBlock
Item j ()I getMaxStackSize
Item k ()I getMaxDurability
Item l ()Z usesDurability
Item m maxStackSize
Item n durability
Item o craftingResult
Item p name
Item q foodInfo
Item t ()Z isFood
Item u ()LFoodInfo; getFoodInfo
ItemActionContext a ()LBlockPosition; getClickPosition
ItemActionContext g ()Z isSneaking
ItemActionContext i ()LEnumDirection; getClickedFace
ItemActionContext l ()LItemStack; getItemStack
ItemActionContext m ()LEntityHuman; getEntity
ItemActionContext o ()LWorld; getWorld
ItemBlock e ()LBlock; getBlock
ItemBlockWallable a wallBlock
ItemBucket a fluidType
ItemCooldown a (LItem;)Z hasCooldown
ItemCooldown a (LItem;I)V setCooldown
ItemCooldown a cooldowns
ItemCooldown b currentTick
ItemCooldown$Info c endTick
ItemFireworks$EffectType a SMALL_BALL
ItemFireworks$EffectType b LARGE_BALL
ItemFireworks$EffectType c STAR
ItemFireworks$EffectType d CREEPER
ItemFireworks$EffectType e BURST
ItemStack A ()I getRepairCost
ItemStack D ()I getCount
ItemStack I ()V checkEmpty
ItemStack a ()Z isEmpty
ItemStack a (I)LItemStack; cloneAndSubtract
ItemStack a (ILEntityLiving;Ljava/util/function/Consumer;)V damage
ItemStack a (ILjava/util/Random;LEntityPlayer;)Z isDamaged
ItemStack a (LEnchantment;I)V addEnchantment
ItemStack a (LItemActionContext;)LEnumInteractionResult; placeItem
ItemStack a (LItemStack;)Z doMaterialsMatch
ItemStack a (LItemStack;LItemStack;)Z equals
ItemStack b ()LItem; getItem
ItemStack b (I)V setDamage
ItemStack b (LIBlockData;)Z canDestroySpecialBlock
ItemStack b (LItemStack;LItemStack;)Z matches
ItemStack b (LNBTTagCompound;)LNBTTagCompound; save
ItemStack c ()I getMaxStackSize
ItemStack c (I)V setRepairCost
ItemStack c (LNBTTagCompound;)V setTag
ItemStack c (Ljava/lang/String;)V removeTag
ItemStack d ()Z isStackable
ItemStack d count
ItemStack e (I)V setCount
ItemStack f (I)V add
ItemStack f item
ItemStack g ()I getDamage
ItemStack g (I)V subtract
ItemStack g tag
ItemStack i ()LItemStack; cloneItemStack
ItemStack n ()Z hasTag
ItemStack o ()LNBTTagCompound; getTag
ItemStack p ()LNBTTagCompound; getOrCreateTag
ItemStack q ()LNBTTagList; getEnchantments
ItemStack r ()LIChatBaseComponent; getName
ItemStack t ()Z hasName
ItemStack w ()Z canEnchant
ItemStack x ()Z hasEnchantments
ItemWorldMap a (LWorld;IIBZZ)LItemStack; createFilledMapView
ItemWorldMap a (LWorldServer;LItemStack;)V applySepiaFilter
ItemWorldMap b (LItemStack;LWorld;)LWorldMap; getSavedMap
Items a AIR
Items iY TURTLE_HELMET
Items iZ SCUTE
Items jA BOWL
Items jB MUSHROOM_STEW
Items jC GOLDEN_SWORD
Items jD GOLDEN_SHOVEL
Items jE GOLDEN_PICKAXE
Items jF GOLDEN_AXE
Items jG STRING
Items jH FEATHER
Items jI GUNPOWDER
Items jJ WOODEN_HOE
Items jK STONE_HOE
Items jL IRON_HOE
Items jM DIAMOND_HOE
Items jN GOLDEN_HOE
Items jO WHEAT_SEEDS
Items jP WHEAT
Items jQ BREAD
Items jR LEATHER_HELMET
Items jS LEATHER_CHESTPLATE
Items jT LEATHER_LEGGINGS
Items jU LEATHER_BOOTS
Items jV CHAINMAIL_HELMET
Items jW CHAINMAIL_CHESTPLATE
Items jX CHAINMAIL_LEGGINGS
Items jY CHAINMAIL_BOOTS
Items jZ IRON_HELMET
Items ja IRON_SHOVEL
Items jb IRON_PICKAXE
Items jc IRON_AXE
Items jd FLINT_AND_STEEL
Items je APPLE
Items jf BOW
Items jg ARROW
Items jh COAL
Items ji CHARCOAL
Items jj DIAMOND
Items jk IRON_INGOT
Items jl GOLD_INGOT
Items jm IRON_SWORD
Items jn WOODEN_SWORD
Items jo WOODEN_SHOVEL
Items jp WOODEN_PICKAXE
Items jq WOODEN_AXE
Items jr STONE_SWORD
Items js STONE_SHOVEL
Items jt STONE_PICKAXE
Items ju STONE_AXE
Items jv DIAMOND_SWORD
Items jw DIAMOND_SHOVEL
Items jx DIAMOND_PICKAXE
Items jy DIAMOND_AXE
Items jz STICK
Items kA MINECART
Items kB SADDLE
Items kC REDSTONE
Items kD SNOWBALL
Items kE OAK_BOAT
Items kF LEATHER
Items kG MILK_BUCKET
Items kH PUFFERFISH_BUCKET
Items kI SALMON_BUCKET
Items kJ COD_BUCKET
Items kK TROPICAL_FISH_BUCKET
Items kL BRICK
Items kM CLAY_BALL
Items kR PAPER
Items kS BOOK
Items kT SLIME_BALL
Items kU CHEST_MINECART
Items kV FURNACE_MINECART
Items kW EGG
Items kX COMPASS
Items kY FISHING_ROD
Items kZ CLOCK
Items ka IRON_CHESTPLATE
Items kb IRON_LEGGINGS
Items kc IRON_BOOTS
Items kd DIAMOND_HELMET
Items ke DIAMOND_CHESTPLATE
Items kf DIAMOND_LEGGINGS
Items kg DIAMOND_BOOTS
Items kh GOLDEN_HELMET
Items ki GOLDEN_CHESTPLATE
Items kj GOLDEN_LEGGINGS
Items kk GOLDEN_BOOTS
Items kl FLINT
Items km PORKCHOP
Items kn COOKED_PORKCHOP
Items ko PAINTING
Items kp GOLDEN_APPLE
Items kq ENCHANTED_GOLDEN_APPLE
Items kr OAK_SIGN
Items ks SPRUCE_SIGN
Items kt BIRCH_SIGN
Items ku JUNGLE_SIGN
Items kv ACACIA_SIGN
Items kw DARK_OAK_SIGN
Items kx BUCKET
Items ky WATER_BUCKET
Items kz LAVA_BUCKET
Items lA WHITE_DYE
Items lB BONE
Items lC SUGAR
Items lE WHITE_BED
Items lF ORANGE_BED
Items lG MAGENTA_BED
Items lH LIGHT_BLUE_BED
Items lI YELLOW_BED
Items lJ LIME_BED
Items lK PINK_BED
Items lL GRAY_BED
Items lM LIGHT_GRAY_BED
Items lN CYAN_BED
Items lO PURPLE_BED
Items lP BLUE_BED
Items lQ BROWN_BED
Items lR GREEN_BED
Items lS RED_BED
Items lT BLACK_BED
Items lU COOKIE
Items lV FILLED_MAP
Items lW SHEARS
Items lX MELON_SLICE
Items lY DRIED_KELP
Items lZ PUMPKIN_SEEDS
Items la GLOWSTONE_DUST
Items lb COD
Items lc SALMON
Items ld TROPICAL_FISH
Items le PUFFERFISH
Items lf COOKED_COD
Items lg COOKED_SALMON
Items lh INK_SAC
Items li RED_DYE
Items lj GREEN_DYE
Items lk COCOA_BEANS
Items ll LAPIS_LAZULI
Items lm PURPLE_DYE
Items ln CYAN_DYE
Items lo LIGHT_GRAY_DYE
Items lp GRAY_DYE
Items lq PINK_DYE
Items lr LIME_DYE
Items ls YELLOW_DYE
Items lt LIGHT_BLUE_DYE
Items lu MAGENTA_DYE
Items lv ORANGE_DYE
Items lw BONE_MEAL
Items lx BLUE_DYE
Items ly BROWN_DYE
Items lz BLACK_DYE
Items mA CHICKEN_SPAWN_EGG
Items mB COD_SPAWN_EGG
Items mC COW_SPAWN_EGG
Items mD CREEPER_SPAWN_EGG
Items mE DOLPHIN_SPAWN_EGG
Items mF DONKEY_SPAWN_EGG
Items mG DROWNED_SPAWN_EGG
Items mH ELDER_GUARDIAN_SPAWN_EGG
Items mI ENDERMAN_SPAWN_EGG
Items mJ ENDERMITE_SPAWN_EGG
Items mK EVOKER_SPAWN_EGG
Items mL FOX_SPAWN_EGG
Items mM GHAST_SPAWN_EGG
Items mN GUARDIAN_SPAWN_EGG
Items mO HORSE_SPAWN_EGG
Items mP HUSK_SPAWN_EGG
Items mQ LLAMA_SPAWN_EGG
Items mR MAGMA_CUBE_SPAWN_EGG
Items mS MOOSHROOM_SPAWN_EGG
Items mT MULE_SPAWN_EGG
Items mU OCELOT_SPAWN_EGG
Items mV PANDA_SPAWN_EGG
Items mW PARROT_SPAWN_EGG
Items mX PHANTOM_SPAWN_EGG
Items mY PIG_SPAWN_EGG
Items mZ PILLAGER_SPAWN_EGG
Items ma MELON_SEEDS
Items mb BEEF
Items mc COOKED_BEEF
Items md CHICKEN
Items me COOKED_CHICKEN
Items mf ROTTEN_FLESH
Items mg ENDER_PEARL
Items mh BLAZE_ROD
Items mi GHAST_TEAR
Items mj GOLD_NUGGET
Items mk NETHER_WART
Items ml POTION
Items mm GLASS_BOTTLE
Items mn SPIDER_EYE
Items mo FERMENTED_SPIDER_EYE
Items mp BLAZE_POWDER
Items mq MAGMA_CREAM
Items mt ENDER_EYE
Items mu GLISTERING_MELON_SLICE
Items mv BAT_SPAWN_EGG
Items mx BLAZE_SPAWN_EGG
Items my CAT_SPAWN_EGG
Items mz CAVE_SPIDER_SPAWN_EGG
Items nA ZOMBIE_PIGMAN_SPAWN_EGG
Items nB ZOMBIE_VILLAGER_SPAWN_EGG
Items nC EXPERIENCE_BOTTLE
Items nD FIRE_CHARGE
Items nE WRITABLE_BOOK
Items nF WRITTEN_BOOK
Items nG EMERALD
Items nH ITEM_FRAME
Items nJ CARROT
Items nK POTATO
Items nL BAKED_POTATO
Items nM POISONOUS_POTATO
Items nN MAP
Items nO GOLDEN_CARROT
Items nP SKELETON_SKULL
Items nQ WITHER_SKELETON_SKULL
Items nR PLAYER_HEAD
Items nS ZOMBIE_HEAD
Items nT CREEPER_HEAD
Items nU DRAGON_HEAD
Items nV CARROT_ON_A_STICK
Items nW NETHER_STAR
Items nX PUMPKIN_PIE
Items nY FIREWORK_ROCKET
Items nZ FIREWORK_STAR
Items na POLAR_BEAR_SPAWN_EGG
Items nb PUFFERFISH_SPAWN_EGG
Items nc RABBIT_SPAWN_EGG
Items nd RAVAGER_SPAWN_EGG
Items ne SALMON_SPAWN_EGG
Items nf SHEEP_SPAWN_EGG
Items ng SHULKER_SPAWN_EGG
Items nh SILVERFISH_SPAWN_EGG
Items ni SKELETON_SPAWN_EGG
Items nj SKELETON_HORSE_SPAWN_EGG
Items nk SLIME_SPAWN_EGG
Items nl SPIDER_SPAWN_EGG
Items nm SQUID_SPAWN_EGG
Items nn STRAY_SPAWN_EGG
Items no TRADER_LLAMA_SPAWN_EGG
Items np TROPICAL_FISH_SPAWN_EGG
Items nq TURTLE_SPAWN_EGG
Items nr VEX_SPAWN_EGG
Items ns VILLAGER_SPAWN_EGG
Items nt VINDICATOR_SPAWN_EGG
Items nu WANDERING_TRADER_SPAWN_EGG
Items nv WITCH_SPAWN_EGG
Items nw WITHER_SKELETON_SPAWN_EGG
Items nx WOLF_SPAWN_EGG
Items ny ZOMBIE_SPAWN_EGG
Items nz ZOMBIE_HORSE_SPAWN_EGG
Items oA YELLOW_BANNER
Items oB LIME_BANNER
Items oC PINK_BANNER
Items oD GRAY_BANNER
Items oE LIGHT_GRAY_BANNER
Items oF CYAN_BANNER
Items oG PURPLE_BANNER
Items oH BLUE_BANNER
Items oI BROWN_BANNER
Items oJ GREEN_BANNER
Items oK RED_BANNER
Items oL BLACK_BANNER
Items oM END_CRYSTAL
Items oN CHORUS_FRUIT
Items oO POPPED_CHORUS_FRUIT
Items oP BEETROOT
Items oQ BEETROOT_SEEDS
Items oR BEETROOT_SOUP
Items oS DRAGON_BREATH
Items oT SPLASH_POTION
Items oU SPECTRAL_ARROW
Items oV TIPPED_ARROW
Items oW LINGERING_POTION
Items oX SHIELD
Items oY ELYTRA
Items oZ SPRUCE_BOAT
Items oa ENCHANTED_BOOK
Items ob NETHER_BRICK
Items oc QUARTZ
Items od TNT_MINECART
Items oe HOPPER_MINECART
Items of PRISMARINE_SHARD
Items og PRISMARINE_CRYSTALS
Items oh RABBIT
Items oi COOKED_RABBIT
Items oj RABBIT_STEW
Items ok RABBIT_FOOT
Items ol RABBIT_HIDE
Items om ARMOR_STAND
Items on IRON_HORSE_ARMOR
Items oo GOLDEN_HORSE_ARMOR
Items op DIAMOND_HORSE_ARMOR
Items oq LEATHER_HORSE_ARMOR
Items or LEAD
Items os NAME_TAG
Items ot COMMAND_BLOCK_MINECART
Items ou MUTTON
Items ov COOKED_MUTTON
Items ow WHITE_BANNER
Items ox ORANGE_BANNER
Items oy MAGENTA_BANNER
Items oz LIGHT_BLUE_BANNER
Items pA SUSPICIOUS_STEW
Items pC FLOWER_BANNER_PATTERN
Items pD CREEPER_BANNER_PATTERN
Items pE SKULL_BANNER_PATTERN
Items pF MOJANG_BANNER_PATTERN
Items pG GLOBE_BANNER_PATTERN
Items pS SWEET_BERRIES
Items pa BIRCH_BOAT
Items pb JUNGLE_BOAT
Items pc ACACIA_BOAT
Items pd DARK_OAK_BOAT
Items pe TOTEM_OF_UNDYING
Items pf SHULKER_SHELL
Items pg IRON_NUGGET
Items ph KNOWLEDGE_BOOK
Items pi DEBUG_STICK
Items pj MUSIC_DISC_13
Items pk MUSIC_DISC_CAT
Items pl MUSIC_DISC_BLOCKS
Items pm MUSIC_DISC_CHIRP
Items pn MUSIC_DISC_FAR
Items po MUSIC_DISC_MALL
Items pp MUSIC_DISC_MELLOHI
Items pq MUSIC_DISC_STAL
Items pr MUSIC_DISC_STRAD
Items ps MUSIC_DISC_WARD
Items pt MUSIC_DISC_11
Items pu MUSIC_DISC_WAIT
Items pv TRIDENT
Items pw PHANTOM_MEMBRANE
Items px NAUTILUS_SHELL
Items py HEART_OF_THE_SEA
Items pz CROSSBOW
JsonList a ()[Ljava/lang/String; getEntries
JsonList a (LJsonListEntry;)V add
JsonList b ()Z isEnabled
JsonList b (Ljava/lang/Object;)LJsonListEntry; get
JsonList c (Ljava/lang/Object;)V remove
JsonList d ()Z isEmpty
JsonList f ()V save
JsonList g ()V load
JsonListEntry f ()Z hasExpired
JsonListEntry g ()Ljava/lang/Object; getKey
LayerIsland a INSTANCE
LightEngineLayerEventListener$Void a INSTANCE
LightEngineThreaded B_ ()V queueUpdate
LightEngineThreaded$Update a PRE_UPDATE
LightEngineThreaded$Update b POST_UPDATE
LoginListener a networkManager
LoginListener b ()V tick
LoginListener b (LIChatBaseComponent;)V disconnect
LoginListener d random
LoginListener f server
LoginListener k loginKey
LoginListener$EnumProtocolState a HELLO
LoginListener$EnumProtocolState b KEY
LoginListener$EnumProtocolState c AUTHENTICATING
LoginListener$EnumProtocolState d NEGOTIATING
LoginListener$EnumProtocolState e READY_TO_ACCEPT
LoginListener$EnumProtocolState f DELAY_ACCEPT
LoginListener$EnumProtocolState g ACCEPTED
LootContextParameterSets a EMPTY
LootContextParameterSets b CHEST
LootContextParameterSets c COMMAND
LootContextParameterSets d SELECTOR
LootContextParameterSets e FISHING
LootContextParameterSets f ENTITY
LootContextParameterSets g GIFT
LootContextParameterSets h ADVANCEMENT_REWARD
LootContextParameterSets i GENERIC
LootContextParameterSets j BLOCK
LootContextParameters a THIS_ENTITY
LootContextParameters b LAST_DAMAGE_PLAYER
LootContextParameters c DAMAGE_SOURCE
LootContextParameters d KILLER_ENTITY
LootContextParameters e DIRECT_KILLER_ENTITY
LootContextParameters f POSITION
LootContextParameters g BLOCK_STATE
LootContextParameters h BLOCK_ENTITY
LootContextParameters i TOOL
LootContextParameters j EXPLOSION_RADIUS
LootItemFunctionCopyNBT$Action a REPLACE
LootItemFunctionCopyNBT$Action b APPEND
LootItemFunctionCopyNBT$Action c MERGE
LootItemFunctionCopyNBT$Source a THIS
LootItemFunctionCopyNBT$Source b KILLER
LootItemFunctionCopyNBT$Source c KILLER_PLAYER
LootItemFunctionCopyNBT$Source d BLOCK_ENTITY
LootItemFunctionCopyName$Source a THIS
LootItemFunctionCopyName$Source b KILLER
LootItemFunctionCopyName$Source c KILLER_PLAYER
LootItemFunctionCopyName$Source d BLOCK_ENTITY
LootTable a ()LLootContextParameterSet; getLootContextParameterSet
LootTable a (LIInventory;LLootTableInfo;)V fillInventory
LootTable a (LLootTableInfo;)Ljava/util/List; populateLoot
LootTable a (LLootTableInfo;Ljava/util/function/Consumer;)V populateLootDirect
LootTable a EMPTY
LootTable b (LLootTableInfo;Ljava/util/function/Consumer;)V populateLoot
LootTableInfo a (LLootContextParameter;)Z hasContextParameter
LootTableInfo c (LLootContextParameter;)Ljava/lang/Object; getContextParameter
LootTableInfo$Builder a (LLootContextParameter;Ljava/lang/Object;)LLootTableInfo$Builder; set
LootTableInfo$Builder a (LLootContextParameterSet;)LLootTableInfo; build
LootTableInfo$Builder b (LLootContextParameter;Ljava/lang/Object;)LLootTableInfo$Builder; setOptional
LootTableInfo$EntityTarget a THIS
LootTableInfo$EntityTarget b KILLER
LootTableInfo$EntityTarget c DIRECT_KILLER
LootTableInfo$EntityTarget d KILLER_PLAYER
LootTableRegistry a (LMinecraftKey;)LLootTable; getLootTable
MapIcon a ()B getType
MapIcon a type
MapIcon b ()LMapIcon$Type; getType
MapIcon b x
MapIcon c ()B getX
MapIcon c y
MapIcon d ()B getY
MapIcon d rotation
MapIcon e ()B getRotation
MapIcon e name
MapIcon g ()LIChatBaseComponent; getName
MapIcon$Type A RED_X
MapIcon$Type a PLAYER
MapIcon$Type b FRAME
MapIcon$Type c RED_MARKER
MapIcon$Type d BLUE_MARKER
MapIcon$Type e TARGET_X
MapIcon$Type f TARGET_POINT
MapIcon$Type g PLAYER_OFF_MAP
MapIcon$Type h PLAYER_OFF_LIMITS
MapIcon$Type i MANSION
MapIcon$Type j MONUMENT
MapIcon$Type k BANNER_WHITE
MapIcon$Type l BANNER_ORANGE
MapIcon$Type m BANNER_MAGENTA
MapIcon$Type n BANNER_LIGHT_BLUE
MapIcon$Type o BANNER_YELLOW
MapIcon$Type p BANNER_LIME
MapIcon$Type q BANNER_PINK
MapIcon$Type r BANNER_GRAY
MapIcon$Type s BANNER_LIGHT_GRAY
MapIcon$Type t BANNER_CYAN
MapIcon$Type u BANNER_PURPLE
MapIcon$Type v BANNER_BLUE
MapIcon$Type w BANNER_BROWN
MapIcon$Type x BANNER_GREEN
MapIcon$Type y BANNER_RED
MapIcon$Type z BANNER_BLACK
Material A CLOTH
Material B TNT
Material C LEAVES
Material D SHATTERABLE
Material E ICE
Material F CACTUS
Material G STONE
Material H ORE
Material I SNOW_BLOCK
Material J HEAVY
Material K BANNER
Material L PISTON
Material M CORAL
Material N PUMPKIN
Material O DRAGON_EGG
Material P CAKE
Material T canBurn
Material a ()Z isLiquid
Material a AIR
Material b ()Z isBuildable
Material b STRUCTURE_VOID
Material c ()Z isSolid
Material c PORTAL
Material d ()Z isBurnable
Material d WOOL
Material e ()Z isReplaceable
Material e PLANT
Material f WATER_PLANT
Material g ()Z isAlwaysDestroyable
Material g REPLACEABLE_PLANT
Material h ()LEnumPistonReaction; getPushReaction
Material h REPLACEABLE_WATER_PLANT
Material i WATER
Material j BUBBLE_COLUMN
Material k LAVA
Material l PACKED_ICE
Material m FIRE
Material n ORIENTABLE
Material o WEB
Material p BUILDABLE_GLASS
Material q CLAY
Material r EARTH
Material s GRASS
Material t SNOW_LAYER
Material u SAND
Material v SPONGE
Material w SHULKER_SHELL
Material x WOOD
Material y BAMBOO_SAPLING
Material z BAMBOO
MaterialMapColor ab rgb
MathHelper a (D)F sqrt
MathHelper a (F)F sin
MathHelper a (III)I clamp
MathHelper a (Ljava/util/Random;II)I nextInt
MathHelper b (F)F cos
MathHelper c (D)I floor
MemoryModuleType A LAST_WOKEN
MemoryModuleType B LAST_WORKED_AT_POI
MemoryModuleType a ()Ljava/util/Optional; getSerializer
MemoryModuleType a DUMMY
MemoryModuleType b HOME
MemoryModuleType c JOB_SITE
MemoryModuleType d MEETING_POINT
MemoryModuleType e SECONDARY_JOB_SITE
MemoryModuleType f MOBS
MemoryModuleType g VISIBLE_MOBS
MemoryModuleType h VISIBLE_VILLAGER_BABIES
MemoryModuleType i NEAREST_PLAYERS
MemoryModuleType j NEAREST_VISIBLE_PLAYER
MemoryModuleType k WALK_TARGET
MemoryModuleType l LOOK_TARGET
MemoryModuleType m INTERACTION_TARGET
MemoryModuleType n BREED_TARGET
MemoryModuleType o PATH
MemoryModuleType p INTERACTABLE_DOORS
MemoryModuleType q OPENED_DOORS
MemoryModuleType r NEAREST_BED
MemoryModuleType s HURT_BY
MemoryModuleType t HURT_BY_ENTITY
MemoryModuleType u NEAREST_HOSTILE
MemoryModuleType v HIDING_PLACE
MemoryModuleType w HEARD_BELL_TIME
MemoryModuleType x CANT_REACH_WALK_TARGET_SINCE
MemoryModuleType y GOLEM_LAST_SEEN_TIME
MemoryModuleType z LAST_SLEPT
MemoryStatus a VALUE_PRESENT
MemoryStatus b VALUE_ABSENT
MemoryStatus c REGISTERED
MerchantRecipe a (I)V increaseSpecialPrice
MerchantRecipe a buyingItem1
MerchantRecipe b ()LItemStack; getBuyItem1
MerchantRecipe b (I)V setSpecialPrice
MerchantRecipe b buyingItem2
MerchantRecipe c ()LItemStack; getBuyItem2
MerchantRecipe c sellingItem
MerchantRecipe d ()LItemStack; getSellingItem
MerchantRecipe d uses
MerchantRecipe e maxUses
MerchantRecipe f rewardExp
MerchantRecipe g ()I getUses
MerchantRecipe g specialPrice
MerchantRecipe h ()V resetUses
MerchantRecipe h demand
MerchantRecipe i ()I getMaxUses
MerchantRecipe i priceMultiplier
MerchantRecipe j ()V increaseUses
MerchantRecipe j xp
MerchantRecipe k ()I getDemand
MerchantRecipe l ()V setSpecialPrice
MerchantRecipe m ()I getSpecialPrice
MerchantRecipe n ()F getPriceMultiplier
MerchantRecipe o ()I getXp
MerchantRecipe p ()Z isFullyUsed
MerchantRecipe s ()Z isRewardExp
MinecraftEncryption a (ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher; a
MinecraftEncryption a (ILjava/security/Key;)Ljavax/crypto/Cipher; a
MinecraftEncryption a (Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B a
MinecraftEncryption a (Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey; a
MinecraftKey a ()Ljava/lang/String; getKey
MinecraftKey a namespace
MinecraftKey b ()Ljava/lang/String; getNamespace
MinecraftKey b key
MobEffect a ()LMobEffectList; getMobEffect
MobEffect a (LEntityLiving;)Z tick
MobEffect b ()I getDuration
MobEffect c ()I getAmplifier
MobEffect c duration
MobEffect d ()Z isAmbient
MobEffect d amplification
MobEffect e ()Z isShowParticles
MobEffect e splash
MobEffect f ambient
MobEffectInfo a BENEFICIAL
MobEffectInfo b HARMFUL
MobEffectInfo c NEUTRAL
MobEffectList a ()Z isInstant
MobEffectList a (I)LMobEffectList; fromId
MobEffectList a (LEntity;LEntity;LEntityLiving;ID)V applyInstantEffect
MobEffectList a (LEntityLiving;I)V tick
MobEffectList a (LMobEffectList;)I getId
MobEffectList f ()I getColor
MobEffects A UNLUCK
MobEffects B SLOW_FALLING
MobEffects C CONDUIT_POWER
MobEffects D DOLPHINS_GRACE
MobEffects E BAD_OMEN
MobEffects F HERO_OF_THE_VILLAGE
MobEffects a FASTER_MOVEMENT
MobEffects b SLOWER_MOVEMENT
MobEffects c FASTER_DIG
MobEffects d SLOWER_DIG
MobEffects e INCREASE_DAMAGE
MobEffects f HEAL
MobEffects g HARM
MobEffects h JUMP
MobEffects i CONFUSION
MobEffects j REGENERATION
MobEffects k RESISTANCE
MobEffects l FIRE_RESISTANCE
MobEffects m WATER_BREATHING
MobEffects n INVISIBILITY
MobEffects o BLINDNESS
MobEffects p NIGHT_VISION
MobEffects q HUNGER
MobEffects r WEAKNESS
MobEffects s POISON
MobEffects t WITHER
MobEffects u HEALTH_BOOST
MobEffects v ABSORBTION
MobEffects w SATURATION
MobEffects x GLOWING
MobEffects y LEVITATION
MobEffects z LUCK
MobSpawnerAbstract a (LEntityTypes;)V setMobName
MobSpawnerAbstract a (LMobSpawnerData;)V setSpawnData
MobSpawnerAbstract b spawnDelay
MobSpawnerAbstract c mobs
MobSpawnerAbstract d spawnData
MobSpawnerAbstract g ()LMinecraftKey; getMobName
MobSpawnerAbstract g minSpawnDelay
MobSpawnerAbstract h maxSpawnDelay
MobSpawnerAbstract i spawnCount
MobSpawnerAbstract k maxNearbyEntities
MobSpawnerAbstract l requiredPlayerRange
MobSpawnerAbstract m spawnRange
MobSpawnerData b ()LNBTTagCompound; getEntity
MobSpawnerData b entity
MojangsonParser a (Ljava/lang/String;)LNBTTagCompound; parse
MojangsonParser b (Ljava/lang/String;)LNBTBase; parseLiteral
MojangsonParser h ()LNBTBase; parseArray
MovingObjectPosition a pos
MovingObjectPosition c ()LMovingObjectPosition$EnumMovingObjectType; getType
MovingObjectPosition e ()LVec3D; getPos
MovingObjectPosition$EnumMovingObjectType a MISS
MovingObjectPosition$EnumMovingObjectType b BLOCK
MovingObjectPosition$EnumMovingObjectType c ENTITY
MovingObjectPositionBlock a ()LBlockPosition; getBlockPosition
MovingObjectPositionBlock b ()LEnumDirection; getDirection
MovingObjectPositionEntity a ()LEntity; getEntity
NBTBase a ()B getTypeId
NBTBase a (Ljava/io/DataOutput;)V write
NBTBase c ()LNBTBase; clone
NBTBase c_ ()Ljava/lang/String; asString
NBTBase isEmpty ()Z isEmpty
NBTList d (ILNBTBase;)LNBTBase; set
NBTNumber e ()J asLong
NBTNumber f ()I asInt
NBTNumber g ()S asShort
NBTNumber h ()B asByte
NBTNumber i ()D asDouble
NBTNumber j ()F asFloat
NBTTagByte h data
NBTTagByteArray b data
NBTTagByteArray d ()[B getBytes
NBTTagCompound a (Ljava/lang/String;B)V setByte
NBTTagCompound a (Ljava/lang/String;D)V setDouble
NBTTagCompound a (Ljava/lang/String;F)V setFloat
NBTTagCompound a (Ljava/lang/String;J)V setLong
NBTTagCompound a (Ljava/lang/String;LNBTBase;)LNBTBase; set
NBTTagCompound a (Ljava/lang/String;Ljava/lang/String;)V setString
NBTTagCompound a (Ljava/lang/String;S)V setShort
NBTTagCompound a (Ljava/lang/String;Z)V setBoolean
NBTTagCompound a (Ljava/lang/String;[B)V setByteArray
NBTTagCompound a (Ljava/lang/String;[I)V setIntArray
NBTTagCompound b (Ljava/lang/String;I)V setInt
NBTTagCompound c (Ljava/lang/String;I)Z hasKeyOfType
NBTTagCompound d ()Ljava/util/Set; getKeys
NBTTagCompound d (Ljava/lang/String;)LNBTBase; get
NBTTagCompound d (Ljava/lang/String;I)LNBTTagList; getList
NBTTagCompound f (Ljava/lang/String;)Z hasKey
NBTTagCompound g ()LNBTTagCompound; clone
NBTTagCompound g (Ljava/lang/String;)B getByte
NBTTagCompound h (Ljava/lang/String;)S getShort
NBTTagCompound h map
NBTTagCompound i (Ljava/lang/String;)I getInt
NBTTagCompound j (Ljava/lang/String;)J getLong
NBTTagCompound k (Ljava/lang/String;)F getFloat
NBTTagCompound l (Ljava/lang/String;)D getDouble
NBTTagCompound m (Ljava/lang/String;)Ljava/lang/String; getString
NBTTagCompound n (Ljava/lang/String;)[B getByteArray
NBTTagCompound o (Ljava/lang/String;)[I getIntArray
NBTTagCompound p (Ljava/lang/String;)[J getLongArray
NBTTagCompound q (Ljava/lang/String;)LNBTTagCompound; getCompound
NBTTagCompound r (Ljava/lang/String;)Z getBoolean
NBTTagCompound s (Ljava/lang/String;)V remove
NBTTagDouble c data
NBTTagFloat c data
NBTTagInt b data
NBTTagIntArray b data
NBTTagIntArray g ()[I getInts
NBTTagList a (I)LNBTTagCompound; getCompound
NBTTagList c (I)LNBTBase; remove
NBTTagList c list
NBTTagList h type
NBTTagList j (I)Ljava/lang/String; getString
NBTTagList size ()I size
NBTTagLong b data
NBTTagLongArray g ()[J getLongs
NBTTagShort b data
NBTTagString c data
NameReferencingFileConverter g (Lnet/minecraft/server/MinecraftServer;)Ljava/io/File; getPlayersFolder
NetworkManager a (I)V setCompressionLevel
NetworkManager a (LEnumProtocol;)V setProtocol
NetworkManager a (LIChatBaseComponent;)V close
NetworkManager a (LPacket;)V sendPacket
NetworkManager a (LPacket;Lio/netty/util/concurrent/GenericFutureListener;)V sendPacket
NetworkManager a (LPacketListener;)V setPacketListener
NetworkManager b ()Ljava/net/SocketAddress; getSocketAddress
NetworkManager c ()Z isLocal
NetworkManager g ()Z isConnected
NetworkManager i packetQueue
NetworkManager j channel
NetworkManager k ()V stopReading
NetworkManager k socketAddress
NetworkManager l ()V handleDisconnection
NetworkManager l packetListener
NibbleArray a ()[B asBytes
OperatorBoolean a FALSE
OperatorBoolean b NOT_OR
OperatorBoolean c ONLY_SECOND
OperatorBoolean d NOT_FIRST
OperatorBoolean e ONLY_FIRST
OperatorBoolean f NOT_SECOND
OperatorBoolean g NOT_SAME
OperatorBoolean h NOT_AND
OperatorBoolean i AND
OperatorBoolean j SAME
OperatorBoolean k SECOND
OperatorBoolean l CAUSES
OperatorBoolean m FIRST
OperatorBoolean n CAUSED_BY
OperatorBoolean o OR
OperatorBoolean p TRUE
PacketHandshakingInSetProtocol b hostname
PacketHandshakingInSetProtocol c port
PacketLoginInEncryptionBegin a (Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey; a
PacketPlayInAbilities c ()Z isFlying
PacketPlayInAdvancements$Status a OPENED_TAB
PacketPlayInAdvancements$Status b CLOSED_SCREEN
PacketPlayInBlockDig$EnumPlayerDigType a START_DESTROY_BLOCK
PacketPlayInBlockDig$EnumPlayerDigType b ABORT_DESTROY_BLOCK
PacketPlayInBlockDig$EnumPlayerDigType c STOP_DESTROY_BLOCK
PacketPlayInBlockDig$EnumPlayerDigType d DROP_ALL_ITEMS
PacketPlayInBlockDig$EnumPlayerDigType e DROP_ITEM
PacketPlayInBlockDig$EnumPlayerDigType f RELEASE_USE_ITEM
PacketPlayInBlockDig$EnumPlayerDigType g SWAP_HELD_ITEMS
PacketPlayInClientCommand$EnumClientCommand a PERFORM_RESPAWN
PacketPlayInClientCommand$EnumClientCommand b REQUEST_STATS
PacketPlayInCloseWindow a id
PacketPlayInCustomPayload b tag
PacketPlayInCustomPayload c data
PacketPlayInEntityAction b animation
PacketPlayInEntityAction$EnumPlayerAction a PRESS_SHIFT_KEY
PacketPlayInEntityAction$EnumPlayerAction b RELEASE_SHIFT_KEY
PacketPlayInEntityAction$EnumPlayerAction c STOP_SLEEPING
PacketPlayInEntityAction$EnumPlayerAction d START_SPRINTING
PacketPlayInEntityAction$EnumPlayerAction e STOP_SPRINTING
PacketPlayInEntityAction$EnumPlayerAction f START_RIDING_JUMP
PacketPlayInEntityAction$EnumPlayerAction g STOP_RIDING_JUMP
PacketPlayInEntityAction$EnumPlayerAction h OPEN_INVENTORY
PacketPlayInEntityAction$EnumPlayerAction i START_FALL_FLYING
PacketPlayInFlying a x
PacketPlayInFlying b y
PacketPlayInFlying c z
PacketPlayInFlying d yaw
PacketPlayInFlying e pitch
PacketPlayInFlying g hasPos
PacketPlayInFlying h hasLook
PacketPlayInHeldItemSlot a itemInHandIndex
PacketPlayInRecipeDisplayed$Status a SHOWN
PacketPlayInRecipeDisplayed$Status b SETTINGS
PacketPlayInResourcePackStatus a status
PacketPlayInResourcePackStatus$EnumResourcePackStatus a SUCCESSFULLY_LOADED
PacketPlayInResourcePackStatus$EnumResourcePackStatus b DECLINED
PacketPlayInResourcePackStatus$EnumResourcePackStatus c FAILED_DOWNLOAD
PacketPlayInResourcePackStatus$EnumResourcePackStatus d ACCEPTED
PacketPlayInSetCreativeSlot a slot
PacketPlayInSetCreativeSlot c ()LItemStack; getItemStack
PacketPlayInSettings b viewDistance
PacketPlayInSettings g ()LEnumMainHand; getMainHand
PacketPlayInUseEntity b action
PacketPlayInUseEntity$EnumEntityUseAction a INTERACT
PacketPlayInUseEntity$EnumEntityUseAction b ATTACK
PacketPlayInUseEntity$EnumEntityUseAction c INTERACT_AT
PacketPlayInVehicleMove b ()D getX
PacketPlayInVehicleMove c ()D getY
PacketPlayInVehicleMove d ()D getZ
PacketPlayInVehicleMove e ()F getYaw
PacketPlayInVehicleMove f ()F getPitch
PacketPlayInWindowClick b slot
PacketPlayInWindowClick c button
PacketPlayInWindowClick e item
PacketPlayInWindowClick f shift
PacketPlayOutBlockChange b block
PacketPlayOutBoss$Action a ADD
PacketPlayOutBoss$Action b REMOVE
PacketPlayOutBoss$Action c UPDATE_PCT
PacketPlayOutBoss$Action d UPDATE_NAME
PacketPlayOutBoss$Action e UPDATE_STYLE
PacketPlayOutBoss$Action f UPDATE_PROPERTIES
PacketPlayOutCombatEvent$EnumCombatEventType a ENTER_COMBAT
PacketPlayOutCombatEvent$EnumCombatEventType b END_COMBAT
PacketPlayOutCombatEvent$EnumCombatEventType c ENTITY_DIED
PacketPlayOutPlayerInfo$EnumPlayerInfoAction a ADD_PLAYER
PacketPlayOutPlayerInfo$EnumPlayerInfoAction b UPDATE_GAME_MODE
PacketPlayOutPlayerInfo$EnumPlayerInfoAction c UPDATE_LATENCY
PacketPlayOutPlayerInfo$EnumPlayerInfoAction d UPDATE_DISPLAY_NAME
PacketPlayOutPlayerInfo$EnumPlayerInfoAction e REMOVE_PLAYER
PacketPlayOutPlayerListHeaderFooter a header
PacketPlayOutPlayerListHeaderFooter b footer
PacketPlayOutPosition$EnumPlayerTeleportFlags a X
PacketPlayOutPosition$EnumPlayerTeleportFlags b Y
PacketPlayOutPosition$EnumPlayerTeleportFlags c Z
PacketPlayOutPosition$EnumPlayerTeleportFlags d Y_ROT
PacketPlayOutPosition$EnumPlayerTeleportFlags e X_ROT
PacketPlayOutRecipes$Action a INIT
PacketPlayOutRecipes$Action b ADD
PacketPlayOutRecipes$Action c REMOVE
PacketPlayOutSpawnPosition a position
PacketPlayOutTitle$EnumTitleAction a TITLE
PacketPlayOutTitle$EnumTitleAction b SUBTITLE
PacketPlayOutTitle$EnumTitleAction c ACTIONBAR
PacketPlayOutTitle$EnumTitleAction d TIMES
PacketPlayOutTitle$EnumTitleAction e CLEAR
PacketPlayOutTitle$EnumTitleAction f RESET
PacketPlayOutWorldBorder$EnumWorldBorderAction a SET_SIZE
PacketPlayOutWorldBorder$EnumWorldBorderAction b LERP_SIZE
PacketPlayOutWorldBorder$EnumWorldBorderAction c SET_CENTER
PacketPlayOutWorldBorder$EnumWorldBorderAction d INITIALIZE
PacketPlayOutWorldBorder$EnumWorldBorderAction e SET_WARNING_TIME
PacketPlayOutWorldBorder$EnumWorldBorderAction f SET_WARNING_BLOCKS
PacketStatusListener b minecraftServer
PacketStatusListener c networkManager
Paintings a ()I getWidth
Paintings b ()I getHeight
ParticleParam b ()LParticle; getParticle
Particles A FLAME
Particles B FLASH
Particles C HAPPY_VILLAGER
Particles D COMPOSTER
Particles E HEART
Particles F INSTANT_EFFECT
Particles G ITEM
Particles H ITEM_SLIME
Particles I ITEM_SNOWBALL
Particles J LARGE_SMOKE
Particles K LAVA
Particles L MYCELIUM
Particles M NOTE
Particles N POOF
Particles O PORTAL
Particles P RAIN
Particles Q SMOKE
Particles R SNEEZE
Particles S SPIT
Particles T SQUID_INK
Particles U SWEEP_ATTACK
Particles V TOTEM_OF_UNDYING
Particles W UNDERWATER
Particles X SPLASH
Particles Y WITCH
Particles Z BUBBLE_POP
Particles a AMBIENT_ENTITY_EFFECT
Particles aa CURRENT_DOWN
Particles ab BUBBLE_COLUMN_UP
Particles ac NAUTILUS
Particles ad DOLPHIN
Particles ae CAMPFIRE_COSY_SMOKE
Particles af CAMPFIRE_SIGNAL_SMOKE
Particles ag DRIPPING_HONEY
Particles ah FALLING_HONEY
Particles ai LANDING_HONEY
Particles aj FALLING_NECTAR
Particles b ANGRY_VILLAGER
Particles c BARRIER
Particles d BLOCK
Particles e BUBBLE
Particles f CLOUD
Particles g CRIT
Particles h DAMAGE_INDICATOR
Particles i DRAGON_BREATH
Particles j DRIPPING_LAVA
Particles k FALLING_LAVA
Particles l LANDING_LAVA
Particles m DRIPPING_WATER
Particles n FALLING_WATER
Particles o DUST
Particles p EFFECT
Particles q ELDER_GUARDIAN
Particles r ENCHANTED_HIT
Particles s ENCHANT
Particles t END_ROD
Particles u ENTITY_EFFECT
Particles v EXPLOSION_EMITTER
Particles w EXPLOSION
Particles x FALLING_DUST
Particles y FIREWORK
Particles z FISHING
PathMode a LAND
PathMode b WATER
PathMode c AIR
PathType a BLOCKED
PathType b OPEN
PathType c WALKABLE
PathType d TRAPDOOR
PathType e FENCE
PathType f LAVA
PathType g WATER
PathType h WATER_BORDER
PathType i RAIL
PathType j DANGER_FIRE
PathType k DAMAGE_FIRE
PathType l DANGER_CACTUS
PathType m DAMAGE_CACTUS
PathType n DANGER_OTHER
PathType o DAMAGE_OTHER
PathType p DOOR_OPEN
PathType q DOOR_WOOD_CLOSED
PathType r DOOR_IRON_CLOSED
PathType s BREACH
PathType t LEAVES
PathType u STICKY_HONEY
PathType v COCOA
PathfinderGoal$Type a MOVE
PathfinderGoal$Type b LOOK
PathfinderGoal$Type c JUMP
PathfinderGoal$Type d TARGET
PathfinderGoalBoat a GO_TO_BOAT
PathfinderGoalBoat b GO_IN_BOAT_DIRECTION
PathfinderGoalBreed a animal
PathfinderGoalBreed c partner
PathfinderGoalCrossbowAttack$State a UNCHARGED
PathfinderGoalCrossbowAttack$State b CHARGING
PathfinderGoalCrossbowAttack$State c CHARGED
PathfinderGoalCrossbowAttack$State d READY_TO_ATTACK
PathfinderGoalDoorInteract d entity
PathfinderGoalDoorInteract e door
PathfinderGoalRandomStroll a (I)V setTimeBetweenMovement
PathfinderGoalRemoveBlock h entity
PathfinderGoalSelector a ()V doTick
PathfinderGoalSit a (Z)V setSitting
PathfinderGoalSit a entity
PathfinderGoalSit b willSit
PathfinderGoalTame a entity
PathfinderGoalTempt b target
PersistentBase b id
PersistentBase d ()Ljava/lang/String; getId
PersistentRaid a (LBlockPosition;I)LRaid; getNearbyRaid
PersistentRaid a raids
PistonExtendsChecker c ()Ljava/util/List; getMovedBlocks
PistonExtendsChecker d ()Ljava/util/List; getBrokenBlocks
PlayerAbilities a isInvulnerable
PlayerAbilities b isFlying
PlayerAbilities c canFly
PlayerAbilities d canInstantlyBuild
PlayerAbilities e mayBuild
PlayerAbilities f flySpeed
PlayerAbilities g walkSpeed
PlayerChunk a (LChunkStatus;)Ljava/util/concurrent/CompletableFuture; getStatusFutureUnchecked
PlayerChunk a UNLOADED_CHUNK_ACCESS
PlayerChunk b (I)LChunkStatus; getChunkStatus
PlayerChunk b UNLOADED_CHUNK_ACCESS_FUTURE
PlayerChunk c (I)LPlayerChunk$State; getChunkState
PlayerChunk c UNLOADED_CHUNK
PlayerChunk d ()LChunk; getChunk
PlayerChunk d UNLOADED_CHUNK_FUTURE
PlayerChunk e CHUNK_STATUSES
PlayerChunk f CHUNK_STATES
PlayerChunk g ()Ljava/util/concurrent/CompletableFuture; getChunkSave
PlayerChunk g statusFutures
PlayerChunk h fullChunkFuture
PlayerChunk i tickingFuture
PlayerChunk j ()I getTicketLevel
PlayerChunk j entityTickingFuture
PlayerChunk k chunkSave
PlayerChunk l ()Z hasBeenLoaded
PlayerChunk l oldTicketLevel
PlayerChunk m ticketLevel
PlayerChunk o location
PlayerChunk p dirtyBlocks
PlayerChunk q dirtyCount
PlayerChunk v lightEngine
PlayerChunk x players
PlayerChunk y hasBeenLoaded
PlayerChunk$State a (LPlayerChunk$State;)Z isAtLeast
PlayerChunk$State a INACCESSIBLE
PlayerChunk$State b BORDER
PlayerChunk$State c TICKING
PlayerChunk$State d ENTITY_TICKING
PlayerChunkMap A viewDistance
PlayerChunkMap a (I)V setViewDistance
PlayerChunkMap a (J)LPlayerChunk; getUpdatingChunk
PlayerChunkMap a (LEntity;)V addEntity
PlayerChunkMap a (LEntity;LPacket;)V broadcast
PlayerChunkMap a (LEntityPlayer;)V movePlayer
PlayerChunkMap a (LEntityPlayer;LChunkCoordIntPair;[LPacket;ZZ)V sendChunk
PlayerChunkMap a (LIChunkAccess;)Z saveChunk
PlayerChunkMap a (Ljava/util/function/BooleanSupplier;)V unloadChunks
PlayerChunkMap a (Z)V save
PlayerChunkMap a GOLDEN_TICKET
PlayerChunkMap b (J)LPlayerChunk; getVisibleChunk
PlayerChunkMap b (LEntity;)V removeEntity
PlayerChunkMap b (LEntity;LPacket;)V broadcastIncludingSelf
PlayerChunkMap d (LChunkCoordIntPair;)Z isOutsideOfRange
PlayerChunkMap d updatingChunks
PlayerChunkMap e visibleChunks
PlayerChunkMap f pendingUnload
PlayerChunkMap g (LChunkCoordIntPair;)LNBTTagCompound; readChunkData
PlayerChunkMap g loadedChunks
PlayerChunkMap h world
PlayerChunkMap i lightEngine
PlayerChunkMap j executor
PlayerChunkMap k chunkGenerator
PlayerChunkMap n unloadQueue
PlayerChunkMap o updatingChunksModified
PlayerChunkMap q mailboxWorldGen
PlayerChunkMap r mailboxMain
PlayerChunkMap s worldLoadListener
PlayerChunkMap t chunkDistanceManager
PlayerChunkMap v definedStructureManager
PlayerChunkMap x playerMap
PlayerChunkMap y trackedEntities
PlayerChunkMap$EntityTracker a (LEntityPlayer;)V clear
PlayerChunkMap$EntityTracker a (LPacket;)V broadcast
PlayerChunkMap$EntityTracker a (Ljava/util/List;)V track
PlayerChunkMap$EntityTracker b (LEntityPlayer;)V updatePlayer
PlayerChunkMap$EntityTracker b (LPacket;)V broadcastIncludingSelf
PlayerChunkMap$EntityTracker b trackerEntry
PlayerChunkMap$EntityTracker c tracker
PlayerChunkMap$EntityTracker d trackingDistance
PlayerChunkMap$EntityTracker f trackedPlayers
PlayerConnection F receivedMovePackets
PlayerConnection G processedMovePackets
PlayerConnection a (LPacket;)V sendPacket
PlayerConnection a networkManager
PlayerConnection b ()V tick
PlayerConnection b (LIChatBaseComponent;)V disconnect
PlayerConnection b player
PlayerConnection c ()V syncPosition
PlayerConnection c (Ljava/lang/String;)V handleCommand
PlayerConnection d ()Z isExemptPlayer
PlayerConnection d minecraftServer
PlayerConnection f lastKeepAlive
PlayerConnection g awaitingKeepAlive
PlayerConnection i chatThrottle
PlayerConnection y teleportPos
PlayerConnection z teleportAwait
PlayerConnectionUtils a (LPacket;LPacketListener;LIAsyncTaskHandler;)V ensureMainThread
PlayerConnectionUtils a (LPacket;LPacketListener;LWorldServer;)V ensureMainThread
PlayerInteractManager a (LBlockPosition;)Z breakBlock
PlayerInteractManager a (LEnumGamemode;)V setGameMode
PlayerInteractManager a world
PlayerInteractManager b ()LEnumGamemode; getGameMode
PlayerInteractManager b player
PlayerInteractManager d ()Z isCreative
PlayerInteractManager d gamemode
PlayerInteractManager f lastDigTick
PlayerInteractManager h currentTick
PlayerInventory a (LItemStack;LItemStack;)Z isSimilarAndNotFull
PlayerInventory a items
PlayerInventory b armor
PlayerInventory c extraSlots
PlayerInventory d (LItemStack;)I firstPartial
PlayerInventory d itemInHandIndex
PlayerInventory e (LItemStack;)Z pickup
PlayerInventory e player
PlayerInventory f ()LItemStack; getItemInHand
PlayerInventory g ()I getHotbarSize
PlayerInventory g (LItemStack;)V setCarried
PlayerInventory g carried
PlayerInventory h ()I getFirstEmptySlotIndex
PlayerInventory k ()V dropContents
PlayerInventory m ()LItemStack; getCarried
PlayerList a ()V reloadWhitelist
PlayerList a (LEntityHuman;)LServerStatisticManager; getStatisticManager
PlayerList a (LEntityHuman;DDDDLDimensionManager;LPacket;)V sendPacketNearby
PlayerList a (LEntityPlayer;LDimensionManager;Z)LEntityPlayer; moveToWorld
PlayerList a (LIChatBaseComponent;)V sendMessage
PlayerList a (LIChatBaseComponent;Z)V sendMessage
PlayerList a (LPacket;)V sendAll
PlayerList a (LScoreboardServer;LEntityPlayer;)V sendScoreboard
PlayerList a (LWorldServer;)V setPlayerFileData
PlayerList a (Lcom/mojang/authlib/GameProfile;)V addOp
PlayerList a (Ljava/lang/String;)LEntityPlayer; getPlayer
PlayerList a (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)LIChatBaseComponent; attemptLogin
PlayerList a (Z)V setHasWhitelist
PlayerList b (LEntityPlayer;)V savePlayerFile
PlayerList b (Lcom/mojang/authlib/GameProfile;)V removeOp
PlayerList c ()Lnet/minecraft/server/MinecraftServer; getServer
PlayerList c (LEntityPlayer;)V disconnect
PlayerList d ()V tick
PlayerList e (LEntityPlayer;)V updateClient
PlayerList e (Lcom/mojang/authlib/GameProfile;)Z isWhitelisted
PlayerList f maxPlayers
PlayerList g ()LGameProfileBanList; getProfileBans
PlayerList g (Lcom/mojang/authlib/GameProfile;)LEntityPlayer; processLogin
PlayerList h ()LIpBanList; getIPBans
PlayerList h (Lcom/mojang/authlib/GameProfile;)Z isOp
PlayerList h server
PlayerList i ()V savePlayers
PlayerList i players
PlayerList j ()LWhiteList; getWhitelist
PlayerList k ()[Ljava/lang/String; getWhitelisted
PlayerList l ()LOpList; getOPs
PlayerList m operators
PlayerList n ()I getPlayerCount
PlayerList n whitelist
PlayerList o ()I getMaxPlayers
PlayerList p ()Z getHasWhitelist
PlayerList q ()I getViewDistance
PlayerList q playerFileData
PlayerList r ()LNBTTagCompound; save
PlayerList r hasWhitelist
PlayerList s ()V shutdown
PlayerList s viewDistance
PlayerList t ()Ljava/util/List; getPlayers
PlayerList u ()V reload
PlayerListBox a ()V tick
PortalTravelAgent a world
PotionUtil a (LItemStack;)Ljava/util/List; getEffects
Potions A STRONG_HEALING
Potions B HARMING
Potions C STRONG_HARMING
Potions D POISON
Potions E LONG_POISON
Potions F STRONG_POISON
Potions G REGENERATION
Potions H LONG_REGENERATION
Potions I STRONG_REGENERATION
Potions J STRENGTH
Potions K LONG_STRENGTH
Potions L STRONG_STRENGTH
Potions M WEAKNESS
Potions N LONG_WEAKNESS
Potions O LUCK
Potions P SLOW_FALLING
Potions Q LONG_SLOW_FALLING
Potions a EMPTY
Potions b WATER
Potions c MUNDANE
Potions d THICK
Potions e AWKWARD
Potions f NIGHT_VISION
Potions g LONG_NIGHT_VISION
Potions h INVISIBILITY
Potions i LONG_INVISIBILITY
Potions j LEAPING
Potions k LONG_LEAPING
Potions l STRONG_LEAPING
Potions m FIRE_RESISTANCE
Potions n LONG_FIRE_RESISTANCE
Potions o SWIFTNESS
Potions p LONG_SWIFTNESS
Potions q STRONG_SWIFTNESS
Potions r SLOWNESS
Potions s LONG_SLOWNESS
Potions t STRONG_SLOWNESS
Potions u TURTLE_MASTER
Potions v LONG_TURTLE_MASTER
Potions w STRONG_TURTLE_MASTER
Potions x WATER_BREATHING
Potions y LONG_WATER_BREATHING
Potions z HEALING
PropertyManager a (Ljava/lang/String;I)I getInt
PropertyManager a (Ljava/lang/String;J)J getLong
PropertyManager a (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; getString
PropertyManager a (Ljava/lang/String;Z)Z getBoolean
PropertyManager b (Ljava/nio/file/Path;)Ljava/util/Properties; loadPropertiesFile
PropertyManager b (Ljava/util/Properties;)LPropertyManager; reload
PropertyManager b properties
PropertyManager c (Ljava/nio/file/Path;)V savePropertiesFile
PropertyManager$EditableProperty a (Ljava/lang/Object;)LPropertyManager; set
Raid d ()Z isStopped
Raid e ()Z isVictory
Raid f ()Z isLoss
Raid g raiders
Raid h heroes
Raid i ()LWorld; getWorld
Raid i ticksActive
Raid j ()Z isStarted
Raid j center
Raid k ()I getGroupsSpawned
Raid k world
Raid l ()I getMaxBadOmenLevel
Raid l started
Raid m ()I getBadOmenLevel
Raid m id
Raid n ()V stop
Raid n totalHealth
Raid o badOmenLevel
Raid p ()V updateProgress
Raid p active
Raid q ()F sumMobHealth
Raid q groupsSpawned
Raid r bossBattle
Raid s postRaidTicks
Raid t ()LBlockPosition; getCenter
Raid t preRaidTicks
Raid u ()I getId
Raid u random
Raid v numGroups
Raid w status
Raid$Status a ONGOING
Raid$Status b VICTORY
Raid$Status c LOSS
Raid$Status d STOPPED
Raid$Wave a VINDICATOR
Raid$Wave b EVOKER
Raid$Wave c PILLAGER
Raid$Wave d WITCH
Raid$Wave e RAVAGER
RayTrace$BlockCollisionOption a COLLIDER
RayTrace$BlockCollisionOption b OUTLINE
RayTrace$FluidCollisionOption a NONE
RayTrace$FluidCollisionOption b SOURCE_ONLY
RayTrace$FluidCollisionOption c ANY
RayTrace$FluidCollisionOption d predicate
RecipeBookServer i ()LNBTTagCompound; save
RecipeCooking b key
RecipeCooking c group
RecipeCooking d ingredient
RecipeCooking e result
RecipeCooking f experience
RecipeCooking g cookingTime
RecipeItemStack d choices
RecipeItemStack f ()V buildChoices
RecipeSingleItem a ingredient
RecipeSingleItem b result
RecipeSingleItem c key
RecipeSingleItem d group
Recipes a CRAFTING
Recipes b SMELTING
Recipes c BLASTING
Recipes d SMOKING
Recipes e CAMPFIRE_COOKING
Recipes f STONECUTTING
RegionFile c dataFile
RegionFile close ()V close
RegionFile d (LChunkCoordIntPair;)Z chunkExists
RegionFile f (LChunkCoordIntPair;)I getOffset
RegionFile i freeSectors
RegionFileCache a (LChunkCoordIntPair;)LNBTTagCompound; read
RegionFileCache a (LChunkCoordIntPair;LNBTTagCompound;)V write
RegionFileCache a cache
RegionFileCache b (LChunkCoordIntPair;)LRegionFile; getFile
Registry a (I)Ljava/lang/Object; fromId
RegistryBlockID a (I)Ljava/lang/Object; fromId
RegistryBlockID a (Ljava/lang/Object;)I getId
RegistryID a (I)Ljava/lang/Object; fromId
RegistryID a (Ljava/lang/Object;)I getId
RemoteControlCommandListener b buffer
RemoteControlCommandListener c server
RemoteControlCommandListener d ()V clearMessages
RemoteControlCommandListener e ()Ljava/lang/String; getMessages
RemoteControlCommandListener f ()LCommandListenerWrapper; getWrapper
RemoteStatusListener$RemoteStatusChallenge b time
RemoteStatusListener$RemoteStatusChallenge c token
RemoteStatusListener$RemoteStatusChallenge d identity
ReputationType a MAJOR_NEGATIVE
ReputationType b MINOR_NEGATIVE
ReputationType c MINOR_POSITIVE
ReputationType d MAJOR_POSITIVE
ReputationType e TRADING
ResourcePackLoader$Position a TOP
ResourcePackLoader$Position b BOTTOM
ResourcePackSourceFolder b file
Schedule a EMPTY
Schedule b SIMPLE
Schedule c VILLAGER_BABY
Schedule d VILLAGER_DEFAULT
Scoreboard a (I)LScoreboardObjective; getObjectiveForSlot
Scoreboard a (ILScoreboardObjective;)V setDisplaySlot
Scoreboard a (LIScoreboardCriteria;Ljava/lang/String;Ljava/util/function/Consumer;)V getObjectivesForCriteria
Scoreboard a (LScoreboardObjective;)V handleObjectiveAdded
Scoreboard a (LScoreboardScore;)V handleScoreChanged
Scoreboard a (LScoreboardTeam;)V handleTeamAdded
Scoreboard a (Ljava/lang/String;)V handlePlayerRemoved
Scoreboard a (Ljava/lang/String;LIScoreboardCriteria;LIChatBaseComponent;LIScoreboardCriteria$EnumScoreboardHealthDisplay;)LScoreboardObjective; registerObjective
Scoreboard a (Ljava/lang/String;LScoreboardTeam;)Z addPlayerToTeam
Scoreboard a objectivesByName
Scoreboard b (I)Ljava/lang/String; getSlotName
Scoreboard b (LScoreboardObjective;)V handleObjectiveChanged
Scoreboard b (LScoreboardTeam;)V handleTeamChanged
Scoreboard b (Ljava/lang/String;LScoreboardTeam;)V removePlayerFromTeam
Scoreboard b objectivesByCriteria
Scoreboard c ()Ljava/util/Collection; getObjectives
Scoreboard c (LScoreboardObjective;)V handleObjectiveRemoved
Scoreboard c (LScoreboardTeam;)V handleTeamRemoved
Scoreboard c (Ljava/lang/String;LScoreboardObjective;)LScoreboardScore; getPlayerScoreForObjective
Scoreboard c playerScores
Scoreboard d (LScoreboardTeam;)V removeTeam
Scoreboard d (Ljava/lang/String;)LScoreboardObjective; getObjective
Scoreboard d (Ljava/lang/String;LScoreboardObjective;)V resetPlayerScores
Scoreboard d displaySlots
Scoreboard e ()Ljava/util/Collection; getPlayers
Scoreboard e (Ljava/lang/String;)Ljava/util/Map; getPlayerObjectives
Scoreboard e teamsByName
Scoreboard f (Ljava/lang/String;)LScoreboardTeam; getTeam
Scoreboard f teamsByPlayer
Scoreboard g ()Ljava/util/Collection; getTeams
Scoreboard g (Ljava/lang/String;)LScoreboardTeam; createTeam
Scoreboard h (Ljava/lang/String;)Z removePlayerFromTeam
Scoreboard i (LScoreboardObjective;)Ljava/util/Collection; getScoresForObjective
Scoreboard i (Ljava/lang/String;)LScoreboardTeam; getPlayerTeam
Scoreboard j (LScoreboardObjective;)V unregisterObjective
Scoreboard j (Ljava/lang/String;)I getSlotForName
ScoreboardObjective a (LIChatBaseComponent;)V setDisplayName
ScoreboardObjective a (LIScoreboardCriteria$EnumScoreboardHealthDisplay;)V setRenderType
ScoreboardObjective b ()Ljava/lang/String; getName
ScoreboardObjective c ()LIScoreboardCriteria; getCriteria
ScoreboardObjective d ()LIChatBaseComponent; getDisplayName
ScoreboardObjective d displayName
ScoreboardObjective f ()LIScoreboardCriteria$EnumScoreboardHealthDisplay; getRenderType
ScoreboardScore a ()V incrementScore
ScoreboardScore a (I)V addScore
ScoreboardScore b ()I getScore
ScoreboardScore c (I)V setScore
ScoreboardScore d ()LScoreboardObjective; getObjective
ScoreboardScore d playerName
ScoreboardScore e ()Ljava/lang/String; getPlayerName
ScoreboardScore e score
ScoreboardServer d (LScoreboardObjective;)Ljava/util/List; getScoreboardScorePacketsForObjective
ScoreboardServer$Action a CHANGE
ScoreboardServer$Action b REMOVE
ScoreboardTeam a (LEnumChatFormat;)V setColor
ScoreboardTeam a (LIChatBaseComponent;)V setDisplayName
ScoreboardTeam a (LScoreboardTeamBase$EnumNameTagVisibility;)V setNameTagVisibility
ScoreboardTeam a (LScoreboardTeamBase$EnumTeamPush;)V setCollisionRule
ScoreboardTeam a (Z)V setAllowFriendlyFire
ScoreboardTeam b (LIChatBaseComponent;)V setPrefix
ScoreboardTeam b (LScoreboardTeamBase$EnumNameTagVisibility;)V setDeathMessageVisibility
ScoreboardTeam b (Z)V setCanSeeFriendlyInvisibles
ScoreboardTeam c ()LIChatBaseComponent; getDisplayName
ScoreboardTeam c (LIChatBaseComponent;)V setSuffix
ScoreboardTeam e ()LIChatBaseComponent; getPrefix
ScoreboardTeam f ()LIChatBaseComponent; getSuffix
ScoreboardTeam i ()Z canSeeFriendlyInvisibles
ScoreboardTeam j ()LScoreboardTeamBase$EnumNameTagVisibility; getNameTagVisibility
ScoreboardTeam m ()I packOptionData
ScoreboardTeam n ()LEnumChatFormat; getColor
ScoreboardTeamBase a (LScoreboardTeamBase;)Z isAlly
ScoreboardTeamBase b ()Ljava/lang/String; getName
ScoreboardTeamBase d (LIChatBaseComponent;)LIChatBaseComponent; getFormattedName
ScoreboardTeamBase g ()Ljava/util/Collection; getPlayerNameSet
ScoreboardTeamBase h ()Z allowFriendlyFire
ScoreboardTeamBase k ()LScoreboardTeamBase$EnumNameTagVisibility; getDeathMessageVisibility
ScoreboardTeamBase l ()LScoreboardTeamBase$EnumTeamPush; getCollisionRule
ScoreboardTeamBase$EnumNameTagVisibility a ALWAYS
ScoreboardTeamBase$EnumNameTagVisibility b NEVER
ScoreboardTeamBase$EnumNameTagVisibility c HIDE_FOR_OTHER_TEAMS
ScoreboardTeamBase$EnumNameTagVisibility d HIDE_FOR_OWN_TEAM
ScoreboardTeamBase$EnumTeamPush a ALWAYS
ScoreboardTeamBase$EnumTeamPush b NEVER
ScoreboardTeamBase$EnumTeamPush c PUSH_OTHER_TEAMS
ScoreboardTeamBase$EnumTeamPush d PUSH_OWN_TEAM
ServerCommand a command
ServerCommand b source
ServerConnection g listeningChannels
ServerPing a (LIChatBaseComponent;)V setMOTD
ServerPing a (LServerPing$ServerData;)V setServerInfo
ServerPing a (LServerPing$ServerPingPlayerSample;)V setPlayerSample
ServerPing a (Ljava/lang/String;)V setFavicon
ServerPing c ()LServerPing$ServerData; getServerData
ServerPing$ServerData b ()I getProtocolVersion
ShapeDetector$Shape a position
ShapeDetector$Shape b velocity
ShapeDetector$Shape c yaw
ShapeDetector$ShapeDetectorCollection b ()LEnumDirection; getFacing
ShapeDetectorBlock d ()LBlockPosition; getPosition
ShapedRecipes a width
ShapedRecipes b height
ShapedRecipes c items
ShapedRecipes d result
ShapedRecipes e key
ShapedRecipes f group
ShapelessRecipes a key
ShapelessRecipes b group
ShapelessRecipes c result
ShapelessRecipes d ingredients
SharedConstants a ()Lcom/mojang/bridge/game/GameVersion; getGameVersion
SharedConstants a (C)Z isAllowedChatCharacter
SharedConstants c allowedCharacters
Slot a ()I getMaxStackSize
Slot a (LEntityHuman;)Z isAllowed
Slot a (LItemStack;)Z isAllowed
Slot a index
Slot b (LItemStack;)I getMaxStackSize
Slot c inventory
Slot d (LItemStack;)V set
Slot d rawSlotIndex
Slot e ()LItemStack; getItem
Slot f ()Z hasItem
SoundCategory a MASTER
SoundCategory b MUSIC
SoundCategory c RECORDS
SoundCategory d WEATHER
SoundCategory e BLOCKS
SoundCategory f HOSTILE
SoundCategory g NEUTRAL
SoundCategory h PLAYERS
SoundCategory i AMBIENT
SoundCategory j VOICE
SoundEffects A ENTITY_ARMOR_STAND_PLACE
SoundEffects B ENTITY_ARROW_HIT
SoundEffects C ENTITY_ARROW_HIT_PLAYER
SoundEffects D ENTITY_ARROW_SHOOT
SoundEffects E ITEM_AXE_STRIP
SoundEffects F BLOCK_BAMBOO_BREAK
SoundEffects G BLOCK_BAMBOO_FALL
SoundEffects H BLOCK_BAMBOO_HIT
SoundEffects I BLOCK_BAMBOO_PLACE
SoundEffects J BLOCK_BAMBOO_STEP
SoundEffects K BLOCK_BAMBOO_SAPLING_BREAK
SoundEffects L BLOCK_BAMBOO_SAPLING_HIT
SoundEffects M BLOCK_BAMBOO_SAPLING_PLACE
SoundEffects N BLOCK_BARREL_CLOSE
SoundEffects O BLOCK_BARREL_OPEN
SoundEffects P ENTITY_BAT_AMBIENT
SoundEffects Q ENTITY_BAT_DEATH
SoundEffects R ENTITY_BAT_HURT
SoundEffects S ENTITY_BAT_LOOP
SoundEffects T ENTITY_BAT_TAKEOFF
SoundEffects U BLOCK_BEACON_ACTIVATE
SoundEffects V BLOCK_BEACON_AMBIENT
SoundEffects W BLOCK_BEACON_DEACTIVATE
SoundEffects X BLOCK_BEACON_POWER_SELECT
SoundEffects Y ENTITY_BEE_DEATH
SoundEffects Z ENTITY_BEE_HURT
SoundEffects a AMBIENT_CAVE
SoundEffects aA ITEM_BOTTLE_FILL_DRAGONBREATH
SoundEffects aB BLOCK_BREWING_STAND_BREW
SoundEffects aC BLOCK_BUBBLE_COLUMN_BUBBLE_POP
SoundEffects aD BLOCK_BUBBLE_COLUMN_UPWARDS_AMBIENT
SoundEffects aE BLOCK_BUBBLE_COLUMN_UPWARDS_INSIDE
SoundEffects aF BLOCK_BUBBLE_COLUMN_WHIRLPOOL_AMBIENT
SoundEffects aG BLOCK_BUBBLE_COLUMN_WHIRLPOOL_INSIDE
SoundEffects aH ITEM_BUCKET_EMPTY
SoundEffects aI ITEM_BUCKET_EMPTY_FISH
SoundEffects aJ ITEM_BUCKET_EMPTY_LAVA
SoundEffects aK ITEM_BUCKET_FILL
SoundEffects aL ITEM_BUCKET_FILL_FISH
SoundEffects aM ITEM_BUCKET_FILL_LAVA
SoundEffects aN BLOCK_CAMPFIRE_CRACKLE
SoundEffects aO ENTITY_CAT_AMBIENT
SoundEffects aP ENTITY_CAT_STRAY_AMBIENT
SoundEffects aQ ENTITY_CAT_DEATH
SoundEffects aR ENTITY_CAT_EAT
SoundEffects aS ENTITY_CAT_HISS
SoundEffects aT ENTITY_CAT_BEG_FOR_FOOD
SoundEffects aU ENTITY_CAT_HURT
SoundEffects aV ENTITY_CAT_PURR
SoundEffects aW ENTITY_CAT_PURREOW
SoundEffects aX BLOCK_CHEST_CLOSE
SoundEffects aY BLOCK_CHEST_LOCKED
SoundEffects aZ BLOCK_CHEST_OPEN
SoundEffects aa ENTITY_BEE_LOOP_AGGRESSIVE
SoundEffects ab ENTITY_BEE_LOOP
SoundEffects ac ENTITY_BEE_STING
SoundEffects ad ENTITY_BEE_POLLINATE
SoundEffects ae BLOCK_BEEHIVE_DRIP
SoundEffects af BLOCK_BEEHIVE_ENTER
SoundEffects ag BLOCK_BEEHIVE_EXIT
SoundEffects ah BLOCK_BEEHIVE_SHEAR
SoundEffects ai BLOCK_BEEHIVE_WORK
SoundEffects aj BLOCK_BELL_USE
SoundEffects ak BLOCK_BELL_RESONATE
SoundEffects al ENTITY_BLAZE_AMBIENT
SoundEffects am ENTITY_BLAZE_BURN
SoundEffects an ENTITY_BLAZE_DEATH
SoundEffects ao ENTITY_BLAZE_HURT
SoundEffects ap ENTITY_BLAZE_SHOOT
SoundEffects aq ENTITY_BOAT_PADDLE_LAND
SoundEffects ar ENTITY_BOAT_PADDLE_WATER
SoundEffects as ITEM_BOOK_PAGE_TURN
SoundEffects at ITEM_BOOK_PUT
SoundEffects au ENTITY_FISHING_BOBBER_RETRIEVE
SoundEffects av ENTITY_FISHING_BOBBER_SPLASH
SoundEffects aw ENTITY_FISHING_BOBBER_THROW
SoundEffects ax BLOCK_BLASTFURNACE_FIRE_CRACKLE
SoundEffects ay ITEM_BOTTLE_EMPTY
SoundEffects az ITEM_BOTTLE_FILL
SoundEffects b AMBIENT_UNDERWATER_ENTER
SoundEffects bA BLOCK_CONDUIT_DEACTIVATE
SoundEffects bB ENTITY_COW_AMBIENT
SoundEffects bC ENTITY_COW_DEATH
SoundEffects bD ENTITY_COW_HURT
SoundEffects bE ENTITY_COW_MILK
SoundEffects bF ENTITY_COW_STEP
SoundEffects bG ENTITY_CREEPER_DEATH
SoundEffects bH ENTITY_CREEPER_HURT
SoundEffects bI ENTITY_CREEPER_PRIMED
SoundEffects bJ BLOCK_CROP_BREAK
SoundEffects bK ITEM_CROP_PLANT
SoundEffects bL ITEM_CROSSBOW_HIT
SoundEffects bM ITEM_CROSSBOW_LOADING_END
SoundEffects bN ITEM_CROSSBOW_LOADING_MIDDLE
SoundEffects bO ITEM_CROSSBOW_LOADING_START
SoundEffects bP ITEM_CROSSBOW_QUICK_CHARGE_1
SoundEffects bQ ITEM_CROSSBOW_QUICK_CHARGE_2
SoundEffects bR ITEM_CROSSBOW_QUICK_CHARGE_3
SoundEffects bS ITEM_CROSSBOW_SHOOT
SoundEffects bT BLOCK_DISPENSER_DISPENSE
SoundEffects bU BLOCK_DISPENSER_FAIL
SoundEffects bV BLOCK_DISPENSER_LAUNCH
SoundEffects bW ENTITY_DOLPHIN_AMBIENT
SoundEffects bX ENTITY_DOLPHIN_AMBIENT_WATER
SoundEffects bY ENTITY_DOLPHIN_ATTACK
SoundEffects bZ ENTITY_DOLPHIN_DEATH
SoundEffects ba ENTITY_CHICKEN_AMBIENT
SoundEffects bb ENTITY_CHICKEN_DEATH
SoundEffects bc ENTITY_CHICKEN_EGG
SoundEffects bd ENTITY_CHICKEN_HURT
SoundEffects be ENTITY_CHICKEN_STEP
SoundEffects bf BLOCK_CHORUS_FLOWER_DEATH
SoundEffects bg BLOCK_CHORUS_FLOWER_GROW
SoundEffects bh ITEM_CHORUS_FRUIT_TELEPORT
SoundEffects bi BLOCK_WOOL_BREAK
SoundEffects bj BLOCK_WOOL_FALL
SoundEffects bk BLOCK_WOOL_HIT
SoundEffects bl BLOCK_WOOL_PLACE
SoundEffects bm BLOCK_WOOL_STEP
SoundEffects bn ENTITY_COD_AMBIENT
SoundEffects bo ENTITY_COD_DEATH
SoundEffects bp ENTITY_COD_FLOP
SoundEffects bq ENTITY_COD_HURT
SoundEffects br BLOCK_COMPARATOR_CLICK
SoundEffects bs BLOCK_COMPOSTER_EMPTY
SoundEffects bt BLOCK_COMPOSTER_FILL
SoundEffects bu BLOCK_COMPOSTER_FILL_SUCCESS
SoundEffects bv BLOCK_COMPOSTER_READY
SoundEffects bw BLOCK_CONDUIT_ACTIVATE
SoundEffects bx BLOCK_CONDUIT_AMBIENT
SoundEffects by BLOCK_CONDUIT_AMBIENT_SHORT
SoundEffects bz BLOCK_CONDUIT_ATTACK_TARGET
SoundEffects c AMBIENT_UNDERWATER_EXIT
SoundEffects cA ENTITY_ELDER_GUARDIAN_FLOP
SoundEffects cB ENTITY_ELDER_GUARDIAN_HURT
SoundEffects cC ENTITY_ELDER_GUARDIAN_HURT_LAND
SoundEffects cD ITEM_ELYTRA_FLYING
SoundEffects cE BLOCK_ENCHANTMENT_TABLE_USE
SoundEffects cF BLOCK_ENDER_CHEST_CLOSE
SoundEffects cG BLOCK_ENDER_CHEST_OPEN
SoundEffects cH ENTITY_ENDER_DRAGON_AMBIENT
SoundEffects cI ENTITY_ENDER_DRAGON_DEATH
SoundEffects cJ ENTITY_DRAGON_FIREBALL_EXPLODE
SoundEffects cK ENTITY_ENDER_DRAGON_FLAP
SoundEffects cL ENTITY_ENDER_DRAGON_GROWL
SoundEffects cM ENTITY_ENDER_DRAGON_HURT
SoundEffects cN ENTITY_ENDER_DRAGON_SHOOT
SoundEffects cO ENTITY_ENDER_EYE_DEATH
SoundEffects cP ENTITY_ENDER_EYE_LAUNCH
SoundEffects cQ ENTITY_ENDERMAN_AMBIENT
SoundEffects cR ENTITY_ENDERMAN_DEATH
SoundEffects cS ENTITY_ENDERMAN_HURT
SoundEffects cT ENTITY_ENDERMAN_SCREAM
SoundEffects cU ENTITY_ENDERMAN_STARE
SoundEffects cV ENTITY_ENDERMAN_TELEPORT
SoundEffects cW ENTITY_ENDERMITE_AMBIENT
SoundEffects cX ENTITY_ENDERMITE_DEATH
SoundEffects cY ENTITY_ENDERMITE_HURT
SoundEffects cZ ENTITY_ENDERMITE_STEP
SoundEffects ca ENTITY_DOLPHIN_EAT
SoundEffects cb ENTITY_DOLPHIN_HURT
SoundEffects cc ENTITY_DOLPHIN_JUMP
SoundEffects cd ENTITY_DOLPHIN_PLAY
SoundEffects ce ENTITY_DOLPHIN_SPLASH
SoundEffects cf ENTITY_DOLPHIN_SWIM
SoundEffects cg ENTITY_DONKEY_AMBIENT
SoundEffects ch ENTITY_DONKEY_ANGRY
SoundEffects ci ENTITY_DONKEY_CHEST
SoundEffects cj ENTITY_DONKEY_DEATH
SoundEffects ck ENTITY_DONKEY_HURT
SoundEffects cl ENTITY_DROWNED_AMBIENT
SoundEffects cm ENTITY_DROWNED_AMBIENT_WATER
SoundEffects cn ENTITY_DROWNED_DEATH
SoundEffects co ENTITY_DROWNED_DEATH_WATER
SoundEffects cp ENTITY_DROWNED_HURT
SoundEffects cq ENTITY_DROWNED_HURT_WATER
SoundEffects cr ENTITY_DROWNED_SHOOT
SoundEffects cs ENTITY_DROWNED_STEP
SoundEffects ct ENTITY_DROWNED_SWIM
SoundEffects cu ENTITY_EGG_THROW
SoundEffects cv ENTITY_ELDER_GUARDIAN_AMBIENT
SoundEffects cw ENTITY_ELDER_GUARDIAN_AMBIENT_LAND
SoundEffects cx ENTITY_ELDER_GUARDIAN_CURSE
SoundEffects cy ENTITY_ELDER_GUARDIAN_DEATH
SoundEffects cz ENTITY_ELDER_GUARDIAN_DEATH_LAND
SoundEffects d AMBIENT_UNDERWATER_LOOP
SoundEffects dA BLOCK_FIRE_AMBIENT
SoundEffects dB BLOCK_FIRE_EXTINGUISH
SoundEffects dC ENTITY_FISH_SWIM
SoundEffects dD ITEM_FLINTANDSTEEL_USE
SoundEffects dE ENTITY_FOX_AGGRO
SoundEffects dF ENTITY_FOX_AMBIENT
SoundEffects dG ENTITY_FOX_BITE
SoundEffects dH ENTITY_FOX_DEATH
SoundEffects dI ENTITY_FOX_EAT
SoundEffects dJ ENTITY_FOX_HURT
SoundEffects dK ENTITY_FOX_SCREECH
SoundEffects dL ENTITY_FOX_SLEEP
SoundEffects dM ENTITY_FOX_SNIFF
SoundEffects dN ENTITY_FOX_SPIT
SoundEffects dO BLOCK_FURNACE_FIRE_CRACKLE
SoundEffects dP ENTITY_GENERIC_BIG_FALL
SoundEffects dQ ENTITY_GENERIC_BURN
SoundEffects dR ENTITY_GENERIC_DEATH
SoundEffects dS ENTITY_GENERIC_DRINK
SoundEffects dT ENTITY_GENERIC_EAT
SoundEffects dU ENTITY_GENERIC_EXPLODE
SoundEffects dV ENTITY_GENERIC_EXTINGUISH_FIRE
SoundEffects dW ENTITY_GENERIC_HURT
SoundEffects dX ENTITY_GENERIC_SMALL_FALL
SoundEffects dY ENTITY_GENERIC_SPLASH
SoundEffects dZ ENTITY_GENERIC_SWIM
SoundEffects da ENTITY_ENDER_PEARL_THROW
SoundEffects db BLOCK_END_GATEWAY_SPAWN
SoundEffects dc BLOCK_END_PORTAL_FRAME_FILL
SoundEffects dd BLOCK_END_PORTAL_SPAWN
SoundEffects de ENTITY_EVOKER_AMBIENT
SoundEffects df ENTITY_EVOKER_CAST_SPELL
SoundEffects dg ENTITY_EVOKER_CELEBRATE
SoundEffects dh ENTITY_EVOKER_DEATH
SoundEffects di ENTITY_EVOKER_FANGS_ATTACK
SoundEffects dj ENTITY_EVOKER_HURT
SoundEffects dk ENTITY_EVOKER_PREPARE_ATTACK
SoundEffects dl ENTITY_EVOKER_PREPARE_SUMMON
SoundEffects dm ENTITY_EVOKER_PREPARE_WOLOLO
SoundEffects dn ENTITY_EXPERIENCE_BOTTLE_THROW
SoundEffects do ENTITY_EXPERIENCE_ORB_PICKUP
SoundEffects dp BLOCK_FENCE_GATE_CLOSE
SoundEffects dq BLOCK_FENCE_GATE_OPEN
SoundEffects dr ITEM_FIRECHARGE_USE
SoundEffects ds ENTITY_FIREWORK_ROCKET_BLAST
SoundEffects dt ENTITY_FIREWORK_ROCKET_BLAST_FAR
SoundEffects du ENTITY_FIREWORK_ROCKET_LARGE_BLAST
SoundEffects dv ENTITY_FIREWORK_ROCKET_LARGE_BLAST_FAR
SoundEffects dw ENTITY_FIREWORK_ROCKET_LAUNCH
SoundEffects dx ENTITY_FIREWORK_ROCKET_SHOOT
SoundEffects dy ENTITY_FIREWORK_ROCKET_TWINKLE
SoundEffects dz ENTITY_FIREWORK_ROCKET_TWINKLE_FAR
SoundEffects e AMBIENT_UNDERWATER_LOOP_ADDITIONS
SoundEffects eA BLOCK_GRAVEL_BREAK
SoundEffects eB BLOCK_GRAVEL_FALL
SoundEffects eC BLOCK_GRAVEL_HIT
SoundEffects eD BLOCK_GRAVEL_PLACE
SoundEffects eE BLOCK_GRAVEL_STEP
SoundEffects eF BLOCK_GRINDSTONE_USE
SoundEffects eG ENTITY_GUARDIAN_AMBIENT
SoundEffects eH ENTITY_GUARDIAN_AMBIENT_LAND
SoundEffects eI ENTITY_GUARDIAN_ATTACK
SoundEffects eJ ENTITY_GUARDIAN_DEATH
SoundEffects eK ENTITY_GUARDIAN_DEATH_LAND
SoundEffects eL ENTITY_GUARDIAN_FLOP
SoundEffects eM ENTITY_GUARDIAN_HURT
SoundEffects eN ENTITY_GUARDIAN_HURT_LAND
SoundEffects eO ITEM_HOE_TILL
SoundEffects eP BLOCK_HONEY_BLOCK_BREAK
SoundEffects eQ BLOCK_HONEY_BLOCK_FALL
SoundEffects eR BLOCK_HONEY_BLOCK_HIT
SoundEffects eS BLOCK_HONEY_BLOCK_PLACE
SoundEffects eT BLOCK_HONEY_BLOCK_SLIDE
SoundEffects eU BLOCK_HONEY_BLOCK_STEP
SoundEffects eV ITEM_HONEY_BOTTLE_DRINK
SoundEffects eW ENTITY_HORSE_AMBIENT
SoundEffects eX ENTITY_HORSE_ANGRY
SoundEffects eY ENTITY_HORSE_ARMOR
SoundEffects eZ ENTITY_HORSE_BREATHE
SoundEffects ea ENTITY_GHAST_AMBIENT
SoundEffects eb ENTITY_GHAST_DEATH
SoundEffects ec ENTITY_GHAST_HURT
SoundEffects ed ENTITY_GHAST_SCREAM
SoundEffects ee ENTITY_GHAST_SHOOT
SoundEffects ef ENTITY_GHAST_WARN
SoundEffects eg BLOCK_GLASS_BREAK
SoundEffects eh BLOCK_GLASS_FALL
SoundEffects ei BLOCK_GLASS_HIT
SoundEffects ej BLOCK_GLASS_PLACE
SoundEffects ek BLOCK_GLASS_STEP
SoundEffects el BLOCK_GRASS_BREAK
SoundEffects em BLOCK_GRASS_FALL
SoundEffects en BLOCK_GRASS_HIT
SoundEffects eo BLOCK_GRASS_PLACE
SoundEffects ep BLOCK_GRASS_STEP
SoundEffects eq BLOCK_WET_GRASS_BREAK
SoundEffects er BLOCK_WET_GRASS_FALL
SoundEffects es BLOCK_WET_GRASS_HIT
SoundEffects et BLOCK_WET_GRASS_PLACE
SoundEffects eu BLOCK_WET_GRASS_STEP
SoundEffects ev BLOCK_CORAL_BLOCK_BREAK
SoundEffects ew BLOCK_CORAL_BLOCK_FALL
SoundEffects ex BLOCK_CORAL_BLOCK_HIT
SoundEffects ey BLOCK_CORAL_BLOCK_PLACE
SoundEffects ez BLOCK_CORAL_BLOCK_STEP
SoundEffects f AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE
SoundEffects fA ENTITY_RAVAGER_STUNNED
SoundEffects fB ENTITY_RAVAGER_ROAR
SoundEffects fC ENTITY_ILLUSIONER_AMBIENT
SoundEffects fD ENTITY_ILLUSIONER_CAST_SPELL
SoundEffects fE ENTITY_ILLUSIONER_DEATH
SoundEffects fF ENTITY_ILLUSIONER_HURT
SoundEffects fG ENTITY_ILLUSIONER_MIRROR_MOVE
SoundEffects fH ENTITY_ILLUSIONER_PREPARE_BLINDNESS
SoundEffects fI ENTITY_ILLUSIONER_PREPARE_MIRROR
SoundEffects fJ BLOCK_IRON_DOOR_CLOSE
SoundEffects fK BLOCK_IRON_DOOR_OPEN
SoundEffects fL ENTITY_IRON_GOLEM_ATTACK
SoundEffects fM ENTITY_IRON_GOLEM_DAMAGE
SoundEffects fN ENTITY_IRON_GOLEM_DEATH
SoundEffects fO ENTITY_IRON_GOLEM_HURT
SoundEffects fP ENTITY_IRON_GOLEM_REPAIR
SoundEffects fQ ENTITY_IRON_GOLEM_STEP
SoundEffects fR BLOCK_IRON_TRAPDOOR_CLOSE
SoundEffects fS BLOCK_IRON_TRAPDOOR_OPEN
SoundEffects fT ENTITY_ITEM_FRAME_ADD_ITEM
SoundEffects fU ENTITY_ITEM_FRAME_BREAK
SoundEffects fV ENTITY_ITEM_FRAME_PLACE
SoundEffects fW ENTITY_ITEM_FRAME_REMOVE_ITEM
SoundEffects fX ENTITY_ITEM_FRAME_ROTATE_ITEM
SoundEffects fY ENTITY_ITEM_BREAK
SoundEffects fZ ENTITY_ITEM_PICKUP
SoundEffects fa ENTITY_HORSE_DEATH
SoundEffects fb ENTITY_HORSE_EAT
SoundEffects fc ENTITY_HORSE_GALLOP
SoundEffects fd ENTITY_HORSE_HURT
SoundEffects fe ENTITY_HORSE_JUMP
SoundEffects ff ENTITY_HORSE_LAND
SoundEffects fg ENTITY_HORSE_SADDLE
SoundEffects fh ENTITY_HORSE_STEP
SoundEffects fi ENTITY_HORSE_STEP_WOOD
SoundEffects fj ENTITY_HOSTILE_BIG_FALL
SoundEffects fk ENTITY_HOSTILE_DEATH
SoundEffects fl ENTITY_HOSTILE_HURT
SoundEffects fm ENTITY_HOSTILE_SMALL_FALL
SoundEffects fn ENTITY_HOSTILE_SPLASH
SoundEffects fo ENTITY_HOSTILE_SWIM
SoundEffects fp ENTITY_HUSK_AMBIENT
SoundEffects fq ENTITY_HUSK_CONVERTED_TO_ZOMBIE
SoundEffects fr ENTITY_HUSK_DEATH
SoundEffects fs ENTITY_HUSK_HURT
SoundEffects ft ENTITY_HUSK_STEP
SoundEffects fu ENTITY_RAVAGER_AMBIENT
SoundEffects fv ENTITY_RAVAGER_ATTACK
SoundEffects fw ENTITY_RAVAGER_CELEBRATE
SoundEffects fx ENTITY_RAVAGER_DEATH
SoundEffects fy ENTITY_RAVAGER_HURT
SoundEffects fz ENTITY_RAVAGER_STEP
SoundEffects g AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE
SoundEffects gA ENTITY_LLAMA_STEP
SoundEffects gB ENTITY_LLAMA_SWAG
SoundEffects gC ENTITY_MAGMA_CUBE_DEATH
SoundEffects gD ENTITY_MAGMA_CUBE_HURT
SoundEffects gE ENTITY_MAGMA_CUBE_JUMP
SoundEffects gF ENTITY_MAGMA_CUBE_SQUISH
SoundEffects gG BLOCK_METAL_BREAK
SoundEffects gH BLOCK_METAL_FALL
SoundEffects gI BLOCK_METAL_HIT
SoundEffects gJ BLOCK_METAL_PLACE
SoundEffects gK BLOCK_METAL_PRESSURE_PLATE_CLICK_OFF
SoundEffects gL BLOCK_METAL_PRESSURE_PLATE_CLICK_ON
SoundEffects gM BLOCK_METAL_STEP
SoundEffects gN ENTITY_MINECART_INSIDE
SoundEffects gO ENTITY_MINECART_RIDING
SoundEffects gP ENTITY_MOOSHROOM_CONVERT
SoundEffects gQ ENTITY_MOOSHROOM_EAT
SoundEffects gR ENTITY_MOOSHROOM_MILK
SoundEffects gS ENTITY_MOOSHROOM_SUSPICIOUS_MILK
SoundEffects gT ENTITY_MOOSHROOM_SHEAR
SoundEffects gU ENTITY_MULE_AMBIENT
SoundEffects gV ENTITY_MULE_CHEST
SoundEffects gW ENTITY_MULE_DEATH
SoundEffects gX ENTITY_MULE_HURT
SoundEffects gY MUSIC_CREATIVE
SoundEffects gZ MUSIC_CREDITS
SoundEffects ga BLOCK_LADDER_BREAK
SoundEffects gb BLOCK_LADDER_FALL
SoundEffects gc BLOCK_LADDER_HIT
SoundEffects gd BLOCK_LADDER_PLACE
SoundEffects ge BLOCK_LADDER_STEP
SoundEffects gf BLOCK_LANTERN_BREAK
SoundEffects gg BLOCK_LANTERN_FALL
SoundEffects gh BLOCK_LANTERN_HIT
SoundEffects gi BLOCK_LANTERN_PLACE
SoundEffects gj BLOCK_LANTERN_STEP
SoundEffects gk BLOCK_LAVA_AMBIENT
SoundEffects gl BLOCK_LAVA_EXTINGUISH
SoundEffects gm BLOCK_LAVA_POP
SoundEffects gn ENTITY_LEASH_KNOT_BREAK
SoundEffects go ENTITY_LEASH_KNOT_PLACE
SoundEffects gp BLOCK_LEVER_CLICK
SoundEffects gq ENTITY_LIGHTNING_BOLT_IMPACT
SoundEffects gr ENTITY_LIGHTNING_BOLT_THUNDER
SoundEffects gs ENTITY_LINGERING_POTION_THROW
SoundEffects gt ENTITY_LLAMA_AMBIENT
SoundEffects gu ENTITY_LLAMA_ANGRY
SoundEffects gv ENTITY_LLAMA_CHEST
SoundEffects gw ENTITY_LLAMA_DEATH
SoundEffects gx ENTITY_LLAMA_EAT
SoundEffects gy ENTITY_LLAMA_HURT
SoundEffects gz ENTITY_LLAMA_SPIT
SoundEffects h BLOCK_ANVIL_BREAK
SoundEffects hA ENTITY_OCELOT_DEATH
SoundEffects hB ENTITY_PAINTING_BREAK
SoundEffects hC ENTITY_PAINTING_PLACE
SoundEffects hD ENTITY_PANDA_PRE_SNEEZE
SoundEffects hE ENTITY_PANDA_SNEEZE
SoundEffects hF ENTITY_PANDA_AMBIENT
SoundEffects hG ENTITY_PANDA_DEATH
SoundEffects hH ENTITY_PANDA_EAT
SoundEffects hI ENTITY_PANDA_STEP
SoundEffects hJ ENTITY_PANDA_CANT_BREED
SoundEffects hK ENTITY_PANDA_AGGRESSIVE_AMBIENT
SoundEffects hL ENTITY_PANDA_WORRIED_AMBIENT
SoundEffects hM ENTITY_PANDA_HURT
SoundEffects hN ENTITY_PANDA_BITE
SoundEffects hO ENTITY_PARROT_AMBIENT
SoundEffects hP ENTITY_PARROT_DEATH
SoundEffects hQ ENTITY_PARROT_EAT
SoundEffects hR ENTITY_PARROT_FLY
SoundEffects hS ENTITY_PARROT_HURT
SoundEffects hT ENTITY_PARROT_IMITATE_BLAZE
SoundEffects hU ENTITY_PARROT_IMITATE_CREEPER
SoundEffects hV ENTITY_PARROT_IMITATE_DROWNED
SoundEffects hW ENTITY_PARROT_IMITATE_ELDER_GUARDIAN
SoundEffects hX ENTITY_PARROT_IMITATE_ENDER_DRAGON
SoundEffects hY ENTITY_PARROT_IMITATE_ENDERMITE
SoundEffects hZ ENTITY_PARROT_IMITATE_EVOKER
SoundEffects ha MUSIC_DRAGON
SoundEffects hb MUSIC_END
SoundEffects hc MUSIC_GAME
SoundEffects hd MUSIC_MENU
SoundEffects he MUSIC_NETHER
SoundEffects hf MUSIC_UNDER_WATER
SoundEffects hg BLOCK_NETHER_WART_BREAK
SoundEffects hh ITEM_NETHER_WART_PLANT
SoundEffects hi BLOCK_NOTE_BLOCK_BASEDRUM
SoundEffects hj BLOCK_NOTE_BLOCK_BASS
SoundEffects hk BLOCK_NOTE_BLOCK_BELL
SoundEffects hl BLOCK_NOTE_BLOCK_CHIME
SoundEffects hm BLOCK_NOTE_BLOCK_FLUTE
SoundEffects hn BLOCK_NOTE_BLOCK_GUITAR
SoundEffects ho BLOCK_NOTE_BLOCK_HARP
SoundEffects hp BLOCK_NOTE_BLOCK_HAT
SoundEffects hq BLOCK_NOTE_BLOCK_PLING
SoundEffects hr BLOCK_NOTE_BLOCK_SNARE
SoundEffects hs BLOCK_NOTE_BLOCK_XYLOPHONE
SoundEffects ht BLOCK_NOTE_BLOCK_IRON_XYLOPHONE
SoundEffects hu BLOCK_NOTE_BLOCK_COW_BELL
SoundEffects hv BLOCK_NOTE_BLOCK_DIDGERIDOO
SoundEffects hw BLOCK_NOTE_BLOCK_BIT
SoundEffects hx BLOCK_NOTE_BLOCK_BANJO
SoundEffects hy ENTITY_OCELOT_HURT
SoundEffects hz ENTITY_OCELOT_AMBIENT
SoundEffects i BLOCK_ANVIL_DESTROY
SoundEffects iA ENTITY_PHANTOM_HURT
SoundEffects iB ENTITY_PHANTOM_SWOOP
SoundEffects iC ENTITY_PIG_AMBIENT
SoundEffects iD ENTITY_PIG_DEATH
SoundEffects iE ENTITY_PIG_HURT
SoundEffects iF ENTITY_PIG_SADDLE
SoundEffects iG ENTITY_PIG_STEP
SoundEffects iH ENTITY_PILLAGER_AMBIENT
SoundEffects iI ENTITY_PILLAGER_CELEBRATE
SoundEffects iJ ENTITY_PILLAGER_DEATH
SoundEffects iK ENTITY_PILLAGER_HURT
SoundEffects iL BLOCK_PISTON_CONTRACT
SoundEffects iM BLOCK_PISTON_EXTEND
SoundEffects iN ENTITY_PLAYER_ATTACK_CRIT
SoundEffects iO ENTITY_PLAYER_ATTACK_KNOCKBACK
SoundEffects iP ENTITY_PLAYER_ATTACK_NODAMAGE
SoundEffects iQ ENTITY_PLAYER_ATTACK_STRONG
SoundEffects iR ENTITY_PLAYER_ATTACK_SWEEP
SoundEffects iS ENTITY_PLAYER_ATTACK_WEAK
SoundEffects iT ENTITY_PLAYER_BIG_FALL
SoundEffects iU ENTITY_PLAYER_BREATH
SoundEffects iV ENTITY_PLAYER_BURP
SoundEffects iW ENTITY_PLAYER_DEATH
SoundEffects iX ENTITY_PLAYER_HURT
SoundEffects iY ENTITY_PLAYER_HURT_DROWN
SoundEffects iZ ENTITY_PLAYER_HURT_ON_FIRE
SoundEffects ia ENTITY_PARROT_IMITATE_GHAST
SoundEffects ib ENTITY_PARROT_IMITATE_GUARDIAN
SoundEffects ic ENTITY_PARROT_IMITATE_HUSK
SoundEffects id ENTITY_PARROT_IMITATE_ILLUSIONER
SoundEffects ie ENTITY_PARROT_IMITATE_MAGMA_CUBE
SoundEffects if ENTITY_PARROT_IMITATE_PHANTOM
SoundEffects ig ENTITY_PARROT_IMITATE_PILLAGER
SoundEffects ih ENTITY_PARROT_IMITATE_RAVAGER
SoundEffects ii ENTITY_PARROT_IMITATE_SHULKER
SoundEffects ij ENTITY_PARROT_IMITATE_SILVERFISH
SoundEffects ik ENTITY_PARROT_IMITATE_SKELETON
SoundEffects il ENTITY_PARROT_IMITATE_SLIME
SoundEffects im ENTITY_PARROT_IMITATE_SPIDER
SoundEffects in ENTITY_PARROT_IMITATE_STRAY
SoundEffects io ENTITY_PARROT_IMITATE_VEX
SoundEffects ip ENTITY_PARROT_IMITATE_VINDICATOR
SoundEffects iq ENTITY_PARROT_IMITATE_WITCH
SoundEffects ir ENTITY_PARROT_IMITATE_WITHER
SoundEffects is ENTITY_PARROT_IMITATE_WITHER_SKELETON
SoundEffects it ENTITY_PARROT_IMITATE_ZOMBIE
SoundEffects iu ENTITY_PARROT_IMITATE_ZOMBIE_VILLAGER
SoundEffects iv ENTITY_PARROT_STEP
SoundEffects iw ENTITY_PHANTOM_AMBIENT
SoundEffects ix ENTITY_PHANTOM_BITE
SoundEffects iy ENTITY_PHANTOM_DEATH
SoundEffects iz ENTITY_PHANTOM_FLAP
SoundEffects j BLOCK_ANVIL_FALL
SoundEffects jA ENTITY_RABBIT_HURT
SoundEffects jB ENTITY_RABBIT_JUMP
SoundEffects jC EVENT_RAID_HORN
SoundEffects jD MUSIC_DISC_11
SoundEffects jE MUSIC_DISC_13
SoundEffects jF MUSIC_DISC_BLOCKS
SoundEffects jG MUSIC_DISC_CAT
SoundEffects jH MUSIC_DISC_CHIRP
SoundEffects jI MUSIC_DISC_FAR
SoundEffects jJ MUSIC_DISC_MALL
SoundEffects jK MUSIC_DISC_MELLOHI
SoundEffects jL MUSIC_DISC_STAL
SoundEffects jM MUSIC_DISC_STRAD
SoundEffects jN MUSIC_DISC_WAIT
SoundEffects jO MUSIC_DISC_WARD
SoundEffects jP BLOCK_REDSTONE_TORCH_BURNOUT
SoundEffects jQ ENTITY_SALMON_AMBIENT
SoundEffects jR ENTITY_SALMON_DEATH
SoundEffects jS ENTITY_SALMON_FLOP
SoundEffects jT ENTITY_SALMON_HURT
SoundEffects jU BLOCK_SAND_BREAK
SoundEffects jV BLOCK_SAND_FALL
SoundEffects jW BLOCK_SAND_HIT
SoundEffects jX BLOCK_SAND_PLACE
SoundEffects jY BLOCK_SAND_STEP
SoundEffects jZ BLOCK_SCAFFOLDING_BREAK
SoundEffects ja ENTITY_PLAYER_HURT_SWEET_BERRY_BUSH
SoundEffects jb ENTITY_PLAYER_LEVELUP
SoundEffects jc ENTITY_PLAYER_SMALL_FALL
SoundEffects jd ENTITY_PLAYER_SPLASH
SoundEffects je ENTITY_PLAYER_SPLASH_HIGH_SPEED
SoundEffects jf ENTITY_PLAYER_SWIM
SoundEffects jg ENTITY_POLAR_BEAR_AMBIENT
SoundEffects jh ENTITY_POLAR_BEAR_AMBIENT_BABY
SoundEffects ji ENTITY_POLAR_BEAR_DEATH
SoundEffects jj ENTITY_POLAR_BEAR_HURT
SoundEffects jk ENTITY_POLAR_BEAR_STEP
SoundEffects jl ENTITY_POLAR_BEAR_WARNING
SoundEffects jm BLOCK_PORTAL_AMBIENT
SoundEffects jn BLOCK_PORTAL_TRAVEL
SoundEffects jo BLOCK_PORTAL_TRIGGER
SoundEffects jp ENTITY_PUFFER_FISH_AMBIENT
SoundEffects jq ENTITY_PUFFER_FISH_BLOW_OUT
SoundEffects jr ENTITY_PUFFER_FISH_BLOW_UP
SoundEffects js ENTITY_PUFFER_FISH_DEATH
SoundEffects jt ENTITY_PUFFER_FISH_FLOP
SoundEffects ju ENTITY_PUFFER_FISH_HURT
SoundEffects jv ENTITY_PUFFER_FISH_STING
SoundEffects jw BLOCK_PUMPKIN_CARVE
SoundEffects jx ENTITY_RABBIT_AMBIENT
SoundEffects jy ENTITY_RABBIT_ATTACK
SoundEffects jz ENTITY_RABBIT_DEATH
SoundEffects k BLOCK_ANVIL_HIT
SoundEffects kA ENTITY_SILVERFISH_HURT
SoundEffects kB ENTITY_SILVERFISH_STEP
SoundEffects kC ENTITY_SKELETON_AMBIENT
SoundEffects kD ENTITY_SKELETON_DEATH
SoundEffects kE ENTITY_SKELETON_HORSE_AMBIENT
SoundEffects kF ENTITY_SKELETON_HORSE_DEATH
SoundEffects kG ENTITY_SKELETON_HORSE_HURT
SoundEffects kH ENTITY_SKELETON_HORSE_SWIM
SoundEffects kI ENTITY_SKELETON_HORSE_AMBIENT_WATER
SoundEffects kJ ENTITY_SKELETON_HORSE_GALLOP_WATER
SoundEffects kK ENTITY_SKELETON_HORSE_JUMP_WATER
SoundEffects kL ENTITY_SKELETON_HORSE_STEP_WATER
SoundEffects kM ENTITY_SKELETON_HURT
SoundEffects kN ENTITY_SKELETON_SHOOT
SoundEffects kO ENTITY_SKELETON_STEP
SoundEffects kP ENTITY_SLIME_ATTACK
SoundEffects kQ ENTITY_SLIME_DEATH
SoundEffects kR ENTITY_SLIME_HURT
SoundEffects kS ENTITY_SLIME_JUMP
SoundEffects kT ENTITY_SLIME_SQUISH
SoundEffects kU BLOCK_SLIME_BLOCK_BREAK
SoundEffects kV BLOCK_SLIME_BLOCK_FALL
SoundEffects kW BLOCK_SLIME_BLOCK_HIT
SoundEffects kX BLOCK_SLIME_BLOCK_PLACE
SoundEffects kY BLOCK_SLIME_BLOCK_STEP
SoundEffects kZ ENTITY_MAGMA_CUBE_DEATH_SMALL
SoundEffects ka BLOCK_SCAFFOLDING_FALL
SoundEffects kb BLOCK_SCAFFOLDING_HIT
SoundEffects kc BLOCK_SCAFFOLDING_PLACE
SoundEffects kd BLOCK_SCAFFOLDING_STEP
SoundEffects ke ENTITY_SHEEP_AMBIENT
SoundEffects kf ENTITY_SHEEP_DEATH
SoundEffects kg ENTITY_SHEEP_HURT
SoundEffects kh ENTITY_SHEEP_SHEAR
SoundEffects ki ENTITY_SHEEP_STEP
SoundEffects kj ITEM_SHIELD_BLOCK
SoundEffects kk ITEM_SHIELD_BREAK
SoundEffects kl ITEM_SHOVEL_FLATTEN
SoundEffects km ENTITY_SHULKER_AMBIENT
SoundEffects kn BLOCK_SHULKER_BOX_CLOSE
SoundEffects ko BLOCK_SHULKER_BOX_OPEN
SoundEffects kp ENTITY_SHULKER_BULLET_HIT
SoundEffects kq ENTITY_SHULKER_BULLET_HURT
SoundEffects kr ENTITY_SHULKER_CLOSE
SoundEffects ks ENTITY_SHULKER_DEATH
SoundEffects kt ENTITY_SHULKER_HURT
SoundEffects ku ENTITY_SHULKER_HURT_CLOSED
SoundEffects kv ENTITY_SHULKER_OPEN
SoundEffects kw ENTITY_SHULKER_SHOOT
SoundEffects kx ENTITY_SHULKER_TELEPORT
SoundEffects ky ENTITY_SILVERFISH_AMBIENT
SoundEffects kz ENTITY_SILVERFISH_DEATH
SoundEffects l BLOCK_ANVIL_LAND
SoundEffects lA ENTITY_SQUID_SQUIRT
SoundEffects lB BLOCK_STONE_BREAK
SoundEffects lC BLOCK_STONE_BUTTON_CLICK_OFF
SoundEffects lD BLOCK_STONE_BUTTON_CLICK_ON
SoundEffects lE BLOCK_STONE_FALL
SoundEffects lF BLOCK_STONE_HIT
SoundEffects lG BLOCK_STONE_PLACE
SoundEffects lH BLOCK_STONE_PRESSURE_PLATE_CLICK_OFF
SoundEffects lI BLOCK_STONE_PRESSURE_PLATE_CLICK_ON
SoundEffects lJ BLOCK_STONE_STEP
SoundEffects lK ENTITY_STRAY_AMBIENT
SoundEffects lL ENTITY_STRAY_DEATH
SoundEffects lM ENTITY_STRAY_HURT
SoundEffects lN ENTITY_STRAY_STEP
SoundEffects lO BLOCK_SWEET_BERRY_BUSH_BREAK
SoundEffects lP BLOCK_SWEET_BERRY_BUSH_PLACE
SoundEffects lQ ITEM_SWEET_BERRIES_PICK_FROM_BUSH
SoundEffects lR ENCHANT_THORNS_HIT
SoundEffects lS ENTITY_TNT_PRIMED
SoundEffects lT ITEM_TOTEM_USE
SoundEffects lU ITEM_TRIDENT_HIT
SoundEffects lV ITEM_TRIDENT_HIT_GROUND
SoundEffects lW ITEM_TRIDENT_RETURN
SoundEffects lX ITEM_TRIDENT_RIPTIDE_1
SoundEffects lY ITEM_TRIDENT_RIPTIDE_2
SoundEffects lZ ITEM_TRIDENT_RIPTIDE_3
SoundEffects la ENTITY_MAGMA_CUBE_HURT_SMALL
SoundEffects lb ENTITY_MAGMA_CUBE_SQUISH_SMALL
SoundEffects lc ENTITY_SLIME_DEATH_SMALL
SoundEffects ld ENTITY_SLIME_HURT_SMALL
SoundEffects le ENTITY_SLIME_JUMP_SMALL
SoundEffects lf ENTITY_SLIME_SQUISH_SMALL
SoundEffects lg BLOCK_SMOKER_SMOKE
SoundEffects lh ENTITY_SNOWBALL_THROW
SoundEffects li BLOCK_SNOW_BREAK
SoundEffects lj BLOCK_SNOW_FALL
SoundEffects lk ENTITY_SNOW_GOLEM_AMBIENT
SoundEffects ll ENTITY_SNOW_GOLEM_DEATH
SoundEffects lm ENTITY_SNOW_GOLEM_HURT
SoundEffects ln ENTITY_SNOW_GOLEM_SHOOT
SoundEffects lo BLOCK_SNOW_HIT
SoundEffects lp BLOCK_SNOW_PLACE
SoundEffects lq BLOCK_SNOW_STEP
SoundEffects lr ENTITY_SPIDER_AMBIENT
SoundEffects ls ENTITY_SPIDER_DEATH
SoundEffects lt ENTITY_SPIDER_HURT
SoundEffects lu ENTITY_SPIDER_STEP
SoundEffects lv ENTITY_SPLASH_POTION_BREAK
SoundEffects lw ENTITY_SPLASH_POTION_THROW
SoundEffects lx ENTITY_SQUID_AMBIENT
SoundEffects ly ENTITY_SQUID_DEATH
SoundEffects lz ENTITY_SQUID_HURT
SoundEffects m BLOCK_ANVIL_PLACE
SoundEffects mA UI_STONECUTTER_TAKE_RESULT
SoundEffects mB UI_STONECUTTER_SELECT_RECIPE
SoundEffects mC UI_TOAST_CHALLENGE_COMPLETE
SoundEffects mD UI_TOAST_IN
SoundEffects mE UI_TOAST_OUT
SoundEffects mF ENTITY_VEX_AMBIENT
SoundEffects mG ENTITY_VEX_CHARGE
SoundEffects mH ENTITY_VEX_DEATH
SoundEffects mI ENTITY_VEX_HURT
SoundEffects mJ ENTITY_VILLAGER_AMBIENT
SoundEffects mK ENTITY_VILLAGER_CELEBRATE
SoundEffects mL ENTITY_VILLAGER_DEATH
SoundEffects mM ENTITY_VILLAGER_HURT
SoundEffects mN ENTITY_VILLAGER_NO
SoundEffects mO ENTITY_VILLAGER_TRADE
SoundEffects mP ENTITY_VILLAGER_YES
SoundEffects mQ ENTITY_VILLAGER_WORK_ARMORER
SoundEffects mR ENTITY_VILLAGER_WORK_BUTCHER
SoundEffects mS ENTITY_VILLAGER_WORK_CARTOGRAPHER
SoundEffects mT ENTITY_VILLAGER_WORK_CLERIC
SoundEffects mU ENTITY_VILLAGER_WORK_FARMER
SoundEffects mV ENTITY_VILLAGER_WORK_FISHERMAN
SoundEffects mW ENTITY_VILLAGER_WORK_FLETCHER
SoundEffects mX ENTITY_VILLAGER_WORK_LEATHERWORKER
SoundEffects mY ENTITY_VILLAGER_WORK_LIBRARIAN
SoundEffects mZ ENTITY_VILLAGER_WORK_MASON
SoundEffects ma ITEM_TRIDENT_THROW
SoundEffects mb ITEM_TRIDENT_THUNDER
SoundEffects mc BLOCK_TRIPWIRE_ATTACH
SoundEffects md BLOCK_TRIPWIRE_CLICK_OFF
SoundEffects me BLOCK_TRIPWIRE_CLICK_ON
SoundEffects mf BLOCK_TRIPWIRE_DETACH
SoundEffects mg ENTITY_TROPICAL_FISH_AMBIENT
SoundEffects mh ENTITY_TROPICAL_FISH_DEATH
SoundEffects mi ENTITY_TROPICAL_FISH_FLOP
SoundEffects mj ENTITY_TROPICAL_FISH_HURT
SoundEffects mk ENTITY_TURTLE_AMBIENT_LAND
SoundEffects ml ENTITY_TURTLE_DEATH
SoundEffects mm ENTITY_TURTLE_DEATH_BABY
SoundEffects mn ENTITY_TURTLE_EGG_BREAK
SoundEffects mo ENTITY_TURTLE_EGG_CRACK
SoundEffects mp ENTITY_TURTLE_EGG_HATCH
SoundEffects mq ENTITY_TURTLE_HURT
SoundEffects mr ENTITY_TURTLE_HURT_BABY
SoundEffects ms ENTITY_TURTLE_LAY_EGG
SoundEffects mt ENTITY_TURTLE_SHAMBLE
SoundEffects mu ENTITY_TURTLE_SHAMBLE_BABY
SoundEffects mv ENTITY_TURTLE_SWIM
SoundEffects mw UI_BUTTON_CLICK
SoundEffects mx UI_LOOM_SELECT_PATTERN
SoundEffects my UI_LOOM_TAKE_RESULT
SoundEffects mz UI_CARTOGRAPHY_TABLE_TAKE_RESULT
SoundEffects n BLOCK_ANVIL_STEP
SoundEffects nA ENTITY_WITCH_THROW
SoundEffects nB ENTITY_WITHER_AMBIENT
SoundEffects nC ENTITY_WITHER_BREAK_BLOCK
SoundEffects nD ENTITY_WITHER_DEATH
SoundEffects nE ENTITY_WITHER_HURT
SoundEffects nF ENTITY_WITHER_SHOOT
SoundEffects nG ENTITY_WITHER_SKELETON_AMBIENT
SoundEffects nH ENTITY_WITHER_SKELETON_DEATH
SoundEffects nI ENTITY_WITHER_SKELETON_HURT
SoundEffects nJ ENTITY_WITHER_SKELETON_STEP
SoundEffects nK ENTITY_WITHER_SPAWN
SoundEffects nL ENTITY_WOLF_AMBIENT
SoundEffects nM ENTITY_WOLF_DEATH
SoundEffects nN ENTITY_WOLF_GROWL
SoundEffects nO ENTITY_WOLF_HOWL
SoundEffects nP ENTITY_WOLF_HURT
SoundEffects nQ ENTITY_WOLF_PANT
SoundEffects nR ENTITY_WOLF_SHAKE
SoundEffects nS ENTITY_WOLF_STEP
SoundEffects nT ENTITY_WOLF_WHINE
SoundEffects nU BLOCK_WOODEN_DOOR_CLOSE
SoundEffects nV BLOCK_WOODEN_DOOR_OPEN
SoundEffects nW BLOCK_WOODEN_TRAPDOOR_CLOSE
SoundEffects nX BLOCK_WOODEN_TRAPDOOR_OPEN
SoundEffects nY BLOCK_WOOD_BREAK
SoundEffects nZ BLOCK_WOODEN_BUTTON_CLICK_OFF
SoundEffects na ENTITY_VILLAGER_WORK_SHEPHERD
SoundEffects nb ENTITY_VILLAGER_WORK_TOOLSMITH
SoundEffects nc ENTITY_VILLAGER_WORK_WEAPONSMITH
SoundEffects nd ENTITY_VINDICATOR_AMBIENT
SoundEffects ne ENTITY_VINDICATOR_CELEBRATE
SoundEffects nf ENTITY_VINDICATOR_DEATH
SoundEffects ng ENTITY_VINDICATOR_HURT
SoundEffects nh BLOCK_LILY_PAD_PLACE
SoundEffects ni ENTITY_WANDERING_TRADER_AMBIENT
SoundEffects nj ENTITY_WANDERING_TRADER_DEATH
SoundEffects nk ENTITY_WANDERING_TRADER_DISAPPEARED
SoundEffects nl ENTITY_WANDERING_TRADER_DRINK_MILK
SoundEffects nm ENTITY_WANDERING_TRADER_DRINK_POTION
SoundEffects nn ENTITY_WANDERING_TRADER_HURT
SoundEffects no ENTITY_WANDERING_TRADER_NO
SoundEffects np ENTITY_WANDERING_TRADER_REAPPEARED
SoundEffects nq ENTITY_WANDERING_TRADER_TRADE
SoundEffects nr ENTITY_WANDERING_TRADER_YES
SoundEffects ns BLOCK_WATER_AMBIENT
SoundEffects nt WEATHER_RAIN
SoundEffects nu WEATHER_RAIN_ABOVE
SoundEffects nv ENTITY_WITCH_AMBIENT
SoundEffects nw ENTITY_WITCH_CELEBRATE
SoundEffects nx ENTITY_WITCH_DEATH
SoundEffects ny ENTITY_WITCH_DRINK
SoundEffects nz ENTITY_WITCH_HURT
SoundEffects o BLOCK_ANVIL_USE
SoundEffects oA ENTITY_ZOMBIE_VILLAGER_CURE
SoundEffects oB ENTITY_ZOMBIE_VILLAGER_DEATH
SoundEffects oC ENTITY_ZOMBIE_VILLAGER_HURT
SoundEffects oD ENTITY_ZOMBIE_VILLAGER_STEP
SoundEffects oa BLOCK_WOODEN_BUTTON_CLICK_ON
SoundEffects ob BLOCK_WOOD_FALL
SoundEffects oc BLOCK_WOOD_HIT
SoundEffects od BLOCK_WOOD_PLACE
SoundEffects oe BLOCK_WOODEN_PRESSURE_PLATE_CLICK_OFF
SoundEffects of BLOCK_WOODEN_PRESSURE_PLATE_CLICK_ON
SoundEffects og BLOCK_WOOD_STEP
SoundEffects oh ENTITY_ZOMBIE_AMBIENT
SoundEffects oi ENTITY_ZOMBIE_ATTACK_WOODEN_DOOR
SoundEffects oj ENTITY_ZOMBIE_ATTACK_IRON_DOOR
SoundEffects ok ENTITY_ZOMBIE_BREAK_WOODEN_DOOR
SoundEffects ol ENTITY_ZOMBIE_CONVERTED_TO_DROWNED
SoundEffects om ENTITY_ZOMBIE_DEATH
SoundEffects on ENTITY_ZOMBIE_DESTROY_EGG
SoundEffects oo ENTITY_ZOMBIE_HORSE_AMBIENT
SoundEffects op ENTITY_ZOMBIE_HORSE_DEATH
SoundEffects oq ENTITY_ZOMBIE_HORSE_HURT
SoundEffects or ENTITY_ZOMBIE_HURT
SoundEffects os ENTITY_ZOMBIE_INFECT
SoundEffects ot ENTITY_ZOMBIE_PIGMAN_AMBIENT
SoundEffects ou ENTITY_ZOMBIE_PIGMAN_ANGRY
SoundEffects ov ENTITY_ZOMBIE_PIGMAN_DEATH
SoundEffects ow ENTITY_ZOMBIE_PIGMAN_HURT
SoundEffects ox ENTITY_ZOMBIE_STEP
SoundEffects oy ENTITY_ZOMBIE_VILLAGER_AMBIENT
SoundEffects oz ENTITY_ZOMBIE_VILLAGER_CONVERTED
SoundEffects p ITEM_ARMOR_EQUIP_CHAIN
SoundEffects q ITEM_ARMOR_EQUIP_DIAMOND
SoundEffects r ITEM_ARMOR_EQUIP_ELYTRA
SoundEffects s ITEM_ARMOR_EQUIP_GENERIC
SoundEffects t ITEM_ARMOR_EQUIP_GOLD
SoundEffects u ITEM_ARMOR_EQUIP_IRON
SoundEffects v ITEM_ARMOR_EQUIP_LEATHER
SoundEffects w ITEM_ARMOR_EQUIP_TURTLE
SoundEffects x ENTITY_ARMOR_STAND_BREAK
SoundEffects y ENTITY_ARMOR_STAND_FALL
SoundEffects z ENTITY_ARMOR_STAND_HIT
SpawnerCreature a (LWorld;LChunk;)LBlockPosition; getRandomPosition
Statistic a ()LStatisticWrapper; getWrapper
StatisticList A AVIATE_ONE_CM
StatisticList B SWIM_ONE_CM
StatisticList C JUMP
StatisticList D DROP
StatisticList E DAMAGE_DEALT
StatisticList F DAMAGE_DEALT_ABSORBED
StatisticList G DAMAGE_DEALT_RESISTED
StatisticList H DAMAGE_TAKEN
StatisticList I DAMAGE_BLOCKED_BY_SHIELD
StatisticList J DAMAGE_ABSORBED
StatisticList K DAMAGE_RESISTED
StatisticList L DEATHS
StatisticList M MOB_KILLS
StatisticList N ANIMALS_BRED
StatisticList O PLAYER_KILLS
StatisticList P FISH_CAUGHT
StatisticList Q TALKED_TO_VILLAGER
StatisticList R TRADED_WITH_VILLAGER
StatisticList S EAT_CAKE_SLICE
StatisticList T FILL_CAULDRON
StatisticList U USE_CAULDRON
StatisticList V CLEAN_ARMOR
StatisticList W CLEAN_BANNER
StatisticList X CLEAN_SHULKER_BOX
StatisticList Y INTERACT_WITH_BREWINGSTAND
StatisticList Z INTERACT_WITH_BEACON
StatisticList a BLOCK_MINED
StatisticList aA INTERACT_WITH_ANVIL
StatisticList aB INTERACT_WITH_GRINDSTONE
StatisticList aa INSPECT_DROPPER
StatisticList ab INSPECT_HOPPER
StatisticList ac INSPECT_DISPENSER
StatisticList ad PLAY_NOTEBLOCK
StatisticList ae TUNE_NOTEBLOCK
StatisticList af POT_FLOWER
StatisticList ag TRIGGER_TRAPPED_CHEST
StatisticList ah OPEN_ENDERCHEST
StatisticList ai ENCHANT_ITEM
StatisticList aj PLAY_RECORD
StatisticList ak INTERACT_WITH_FURNACE
StatisticList al INTERACT_WITH_CRAFTING_TABLE
StatisticList am OPEN_CHEST
StatisticList an SLEEP_IN_BED
StatisticList ao OPEN_SHULKER_BOX
StatisticList ap OPEN_BARREL
StatisticList aq INTERACT_WITH_BLAST_FURNACE
StatisticList ar INTERACT_WITH_SMOKER
StatisticList as INTERACT_WITH_LECTERN
StatisticList at INTERACT_WITH_CAMPFIRE
StatisticList au INTERACT_WITH_CARTOGRAPHY_TABLE
StatisticList av INTERACT_WITH_LOOM
StatisticList aw INTERACT_WITH_STONECUTTER
StatisticList ax BELL_RING
StatisticList ay RAID_TRIGGER
StatisticList az RAID_WIN
StatisticList b ITEM_CRAFTED
StatisticList c ITEM_USED
StatisticList d ITEM_BROKEN
StatisticList e ITEM_PICKED_UP
StatisticList f ITEM_DROPPED
StatisticList g ENTITY_KILLED
StatisticList h ENTITY_KILLED_BY
StatisticList i CUSTOM
StatisticList j LEAVE_GAME
StatisticList k PLAY_ONE_MINUTE
StatisticList l TIME_SINCE_DEATH
StatisticList m TIME_SINCE_REST
StatisticList n SNEAK_TIME
StatisticList o WALK_ONE_CM
StatisticList p CROUCH_ONE_CM
StatisticList q SPRINT_ONE_CM
StatisticList r WALK_ON_WATER_ONE_CM
StatisticList s FALL_ONE_CM
StatisticList t CLIMB_ONE_CM
StatisticList u FLY_ONE_CM
StatisticList v WALK_UNDER_WATER_ONE_CM
StatisticList w MINECART_ONE_CM
StatisticList x BOAT_ONE_CM
StatisticList y PIG_ONE_CM
StatisticList z HORSE_ONE_CM
StatisticManager a (LEntityHuman;LStatistic;I)V setStatistic
StatisticManager a (LStatistic;)I getStatisticValue
StatisticWrapper a ()LIRegistry; getRegistry
StructureGenerator a (LWorld;LChunkGenerator;LBlockPosition;IZ)LBlockPosition; getNearestGeneratedFeature
SystemUtils b ()J getMonotonicMillis
SystemUtils c ()J getMonotonicNanos
SystemUtils d ()J getTimeMillis
SystemUtils$IdentityHashingStrategy a INSTANCE
SystemUtils$OS a LINUX
SystemUtils$OS b SOLARIS
SystemUtils$OS c WINDOWS
SystemUtils$OS d OSX
SystemUtils$OS e UNKNOWN
Tag a (Ljava/lang/Object;)Z isTagged
TagRegistry a ()LTagsServer; getBlockTags
TagRegistry a blockTags
TagRegistry b ()LTagsServer; getItemTags
TagRegistry b itemTags
TagRegistry c ()LTagsServer; getFluidTags
TagRegistry c fluidTags
TagRegistry d ()LTagsServer; getEntityTags
TagRegistry d entityTags
TagsBlock A ANVIL
TagsBlock B RAILS
TagsBlock C LEAVES
TagsBlock D TRAPDOORS
TagsBlock E SMALL_FLOWERS
TagsBlock F BEDS
TagsBlock G FENCES
TagsBlock H TALL_FLOWERS
TagsBlock I FLOWERS
TagsBlock J SHULKER_BOXES
TagsBlock K FLOWER_POTS
TagsBlock L ENDERMAN_HOLDABLE
TagsBlock M ICE
TagsBlock N VALID_SPAWN
TagsBlock O IMPERMEABLE
TagsBlock P UNDERWATER_BONEMEALS
TagsBlock Q CORAL_BLOCKS
TagsBlock R WALL_CORALS
TagsBlock S CORAL_PLANTS
TagsBlock T CORALS
TagsBlock U BAMBOO_PLANTABLE_ON
TagsBlock V STANDING_SIGNS
TagsBlock W WALL_SIGNS
TagsBlock X SIGNS
TagsBlock Y DRAGON_IMMUNE
TagsBlock Z WITHER_IMMUNE
TagsBlock a WOOL
TagsBlock aa BEEHIVES
TagsBlock ab CROPS
TagsBlock ac BEE_GROWABLES
TagsBlock ad PORTALS
TagsBlock b PLANKS
TagsBlock c STONE_BRICKS
TagsBlock d WOODEN_BUTTONS
TagsBlock e BUTTONS
TagsBlock f CARPETS
TagsBlock g WOODEN_DOORS
TagsBlock h WOODEN_STAIRS
TagsBlock i WOODEN_SLABS
TagsBlock j WOODEN_FENCES
TagsBlock k WOODEN_PRESSURE_PLATES
TagsBlock l WOODEN_TRAPDOORS
TagsBlock m DOORS
TagsBlock n SAPLINGS
TagsBlock o LOGS
TagsBlock p DARK_OAK_LOGS
TagsBlock q OAK_LOGS
TagsBlock r BIRCH_LOGS
TagsBlock s ACACIA_LOGS
TagsBlock t JUNGLE_LOGS
TagsBlock u SPRUCE_LOGS
TagsBlock v BANNERS
TagsBlock w SAND
TagsBlock x STAIRS
TagsBlock y SLABS
TagsBlock z WALLS
TagsEntity a SKELETONS
TagsEntity b RADIERS
TagsEntity c BEEHIVE_INHABITORS
TagsEntity d ARROWS
TagsFluid a WATER
TagsFluid b LAVA
TagsItem A ANVIL
TagsItem B RAILS
TagsItem C LEAVES
TagsItem D TRAPDOORS
TagsItem E SMALL_FLOWERS
TagsItem F BEDS
TagsItem G FENCES
TagsItem H TALL_FLOWERS
TagsItem I FLOWERS
TagsItem J BOATS
TagsItem K FISHES
TagsItem L SIGNS
TagsItem M MUSIC_DISCS
TagsItem N COALS
TagsItem O ARROWS
TagsItem P LECTERN_BOOKS
TagsItem a WOOL
TagsItem b PLANKS
TagsItem c STONE_BRICKS
TagsItem d WOODEN_BUTTONS
TagsItem e BUTTONS
TagsItem f CARPETS
TagsItem g WOODEN_DOORS
TagsItem h WOODEN_STAIRS
TagsItem i WOODEN_SLABS
TagsItem j WOODEN_FENCES
TagsItem k WOODEN_PRESSURE_PLATES
TagsItem l WOODEN_TRAPDOORS
TagsItem m DOORS
TagsItem n SAPLINGS
TagsItem o LOGS
TagsItem p DARK_OAK_LOGS
TagsItem q OAK_LOGS
TagsItem r BIRCH_LOGS
TagsItem s ACACIA_LOGS
TagsItem t JUNGLE_LOGS
TagsItem u SPRUCE_LOGS
TagsItem v BANNERS
TagsItem w SAND
TagsItem x STAIRS
TagsItem y SLABS
TagsItem z WALLS
TickListPriority a EXTREMELY_HIGH
TickListPriority b VERY_HIGH
TickListPriority c HIGH
TickListPriority d NORMAL
TickListPriority e LOW
TickListPriority f VERY_LOW
TickListPriority g EXTREMELY_LOW
TickListServer d nextTickListHash
TickListServer e nextTickList
Ticket a ()LTicketType; getTicketType
Ticket c identifier
TicketType a START
TicketType b DRAGON
TicketType c PLAYER
TicketType d FORCED
TicketType e LIGHT
TicketType f PORTAL
TicketType g POST_TELEPORT
TicketType h UNKNOWN
TicketType k loadPeriod
TileEntity a ()LPacketPlayOutTileEntityData; getUpdatePacket
TileEntity a (LBlockPosition;)V setPosition
TileEntity a (LNBTTagCompound;)V load
TileEntity a (LWorld;LBlockPosition;)V setLocation
TileEntity a_ (II)Z setProperty
TileEntity b (LNBTTagCompound;)LNBTTagCompound; save
TileEntity b tileType
TileEntity c (LNBTTagCompound;)LTileEntity; create
TileEntity d world
TileEntity e ()V update
TileEntity e position
TileEntity n ()Z hasWorld
TileEntity o ()LBlockPosition; getPosition
TileEntity p ()LIBlockData; getBlock
TileEntity q ()Z isRemoved
TileEntity s ()V invalidateBlockCache
TileEntity t ()Z isFilteredNBT
TileEntity u ()LTileEntityTypes; getTileType
TileEntity w ()LWorld; getWorld
TileEntityBanner b color
TileEntityBanner c patterns
TileEntityBarrel a items
TileEntityBeacon a (LIChatBaseComponent;)V setCustomName
TileEntityBeacon h levels
TileEntityBeacon j ()V applyEffects
TileEntityBeacon j primaryEffect
TileEntityBeacon k secondaryEffect
TileEntityBeacon l customName
TileEntityBeacon m chestLock
TileEntityBeacon n containerProperties
TileEntityBed a color
TileEntityBeehive a bees
TileEntityBeehive b flowerPos
TileEntityBeehive f ()Z isEmpty
TileEntityBeehive h ()Z isFull
TileEntityBeehive$ReleaseStatus a HONEY_DELIVERED
TileEntityBeehive$ReleaseStatus b BEE_RELEASED
TileEntityBeehive$ReleaseStatus c EMERGENCY
TileEntityBrewingStand h items
TileEntityBrewingStand i brewTime
TileEntityBrewingStand l fuelLevel
TileEntityCampfire a items
TileEntityCampfire b cookingTimes
TileEntityCampfire c cookingTotalTimes
TileEntityCampfire d ()LNonNullList; getItems
TileEntityChest c viewingCount
TileEntityChest h ()V onOpen
TileEntityChest i items
TileEntityCommand d ()LCommandBlockListenerAbstract; getCommandBlock
TileEntityCommand$Type a SEQUENCE
TileEntityCommand$Type b AUTO
TileEntityCommand$Type c REDSTONE
TileEntityConduit j target
TileEntityContainer a (ILPlayerInventory;)LContainer; createContainer
TileEntityContainer a (LIChatBaseComponent;)V setCustomName
TileEntityContainer a chestLock
TileEntityContainer b customName
TileEntityContainer g ()LIChatBaseComponent; getContainerName
TileEntityDispenser a (LItemStack;)I addItem
TileEntityDispenser b items
TileEntityEnchantTable a (LIChatBaseComponent;)V setCustomName
TileEntityEndGateway b age
TileEntityEndGateway g exitPortal
TileEntityEndGateway h exactTeleport
TileEntityFurnace a (LItemStack;)I fuelTime
TileEntityFurnace a items
TileEntityFurnace b (LIRecipe;)Z canBurn
TileEntityFurnace b (LItemStack;)Z isFuel
TileEntityFurnace c (LIRecipe;)V burn
TileEntityFurnace h ()I getRecipeCookingTime
TileEntityFurnace j ()Z isBurning
TileEntityFurnace j burnTime
TileEntityFurnace k ticksForCurrentFuel
TileEntityFurnace l cookTime
TileEntityFurnace m cookTimeTotal
TileEntityHopper a (LIInventory;LIInventory;LItemStack;LEnumDirection;)LItemStack; addItem
TileEntityHopper c (I)V setCooldown
TileEntityHopper i items
TileEntityJukeBox a (LItemStack;)V setRecord
TileEntityJukeBox d ()LItemStack; getRecord
TileEntityLectern a (I)V setPage
TileEntityLectern a (LItemStack;)V setBook
TileEntityLectern a inventory
TileEntityLectern b containerProperties
TileEntityLectern c book
TileEntityLectern f ()LItemStack; getBook
TileEntityLectern g ()Z hasBook
TileEntityLectern g page
TileEntityLectern h ()I getPage
TileEntityLectern h maxPage
TileEntityLootable a (LMinecraftKey;J)V setLootTable
TileEntityLootable g lootTable
TileEntityLootable h lootTableSeed
TileEntityMobSpawner d ()LMobSpawnerAbstract; getSpawner
TileEntityShulkerBox b contents
TileEntityShulkerBox$AnimationPhase a CLOSED
TileEntityShulkerBox$AnimationPhase b OPENING
TileEntityShulkerBox$AnimationPhase c OPENED
TileEntityShulkerBox$AnimationPhase d CLOSING
TileEntitySign a (LEnumColor;)Z setColor
TileEntitySign a lines
TileEntitySign b isEditable
TileEntitySign g ()LEnumColor; getColor
TileEntitySign h color
TileEntitySkull a (Lcom/mojang/authlib/GameProfile;)V setGameProfile
TileEntitySkull a gameProfile
TileEntitySkull g userCache
TileEntitySkull h sessionService
TileEntityStructure a (LBlockPropertyStructureMode;)V setUsageMode
TileEntityStructure a (LEntityLiving;)V setAuthor
TileEntityStructure a (Ljava/lang/String;)V setStructureName
TileEntityStructure a structureName
TileEntityStructure b author
TileEntityStructure c metadata
TileEntityStructure d ()Ljava/lang/String; getStructureName
TileEntityStructure g relativePosition
TileEntityStructure h size
TileEntityStructure i mirror
TileEntityStructure j rotation
TileEntityStructure k usageMode
TileEntityStructure l ignoreEntities
TileEntityStructure m powered
TileEntityStructure n showAir
TileEntityStructure o showBoundingBox
TileEntityStructure p integrity
TileEntityStructure q seed
TileEntityStructure x ()LBlockPropertyStructureMode; getUsageMode
TileEntityStructure$UpdateType a UPDATE_DATA
TileEntityStructure$UpdateType b SAVE_AREA
TileEntityStructure$UpdateType c LOAD_AREA
TileEntityStructure$UpdateType d SCAN_AREA
TileEntityTypes A SMOKER
TileEntityTypes B BLAST_FURNACE
TileEntityTypes C LECTERN
TileEntityTypes D BELL
TileEntityTypes E JIGSAW
TileEntityTypes F CAMPFIRE
TileEntityTypes G BEEHIVE
TileEntityTypes a (LBlock;)Z isValidBlock
TileEntityTypes a FURNACE
TileEntityTypes b CHEST
TileEntityTypes c TRAPPED_CHEST
TileEntityTypes d ENDER_CHEST
TileEntityTypes e JUKEBOX
TileEntityTypes f DISPENSER
TileEntityTypes g DROPPER
TileEntityTypes h SIGN
TileEntityTypes i MOB_SPAWNER
TileEntityTypes j PISTON
TileEntityTypes k BREWING_STAND
TileEntityTypes l ENCHANTING_TABLE
TileEntityTypes m END_PORTAL
TileEntityTypes n BEACON
TileEntityTypes o SKULL
TileEntityTypes p DAYLIGHT_DETECTOR
TileEntityTypes q HOPPER
TileEntityTypes r COMPARATOR
TileEntityTypes s BANNER
TileEntityTypes t STRUCTURE_BLOCK
TileEntityTypes u END_GATEWAY
TileEntityTypes v COMMAND_BLOCK
TileEntityTypes w SHULKER_BOX
TileEntityTypes x BED
TileEntityTypes y CONDUIT
TileEntityTypes z BARREL
Unit a INSTANCE
UserCache a (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; getProfile
UserCache a (Ljava/util/UUID;)Lcom/mojang/authlib/GameProfile; getProfile
Vec3D b (DDD)LVec3D; add
Vec3D b x
Vec3D c y
Vec3D d z
Vec3D g (LVec3D;)D distanceSquared
Vector3f a x
Vector3f b ()F getX
Vector3f b y
Vector3f c ()F getY
Vector3f c z
Vector3f d ()F getZ
VillagePlace$Occupancy a HAS_SPACE
VillagePlace$Occupancy b IS_OCCUPIED
VillagePlace$Occupancy c ANY
VillageSiege$State a SIEGE_CAN_ACTIVATE
VillageSiege$State b SIEGE_TONIGHT
VillageSiege$State c SIEGE_DONE
VillagerData a ()LVillagerType; getType
VillagerData a (I)LVillagerData; withLevel
VillagerData a (LVillagerProfession;)LVillagerData; withProfession
VillagerData a (LVillagerType;)LVillagerData; withType
VillagerData b ()LVillagerProfession; getProfession
VillagerData c ()I getLevel
VillagerDataHolder eA ()LVillagerData; getVillagerData
VillagerProfession a NONE
VillagerProfession b ARMORER
VillagerProfession c BUTCHER
VillagerProfession d CARTOGRAPHER
VillagerProfession e CLERIC
VillagerProfession f FARMER
VillagerProfession g FISHERMAN
VillagerProfession h FLETCHER
VillagerProfession i LEATHERWORKER
VillagerProfession j LIBRARIAN
VillagerProfession k MASON
VillagerProfession l NITWIT
VillagerProfession m SHEPHERD
VillagerProfession n TOOLSMITH
VillagerProfession o WEAPONSMITH
VillagerType a DESERT
VillagerType b JUNGLE
VillagerType c PLAINS
VillagerType d SAVANNA
VillagerType e SNOW
VillagerType f SWAMP
VillagerType g TAIGA
VirtualLevelReadable a (LHeightMap$Type;LBlockPosition;)LBlockPosition; getHighestBlockYAt
VoxelShape a ()LAxisAlignedBB; getBoundingBox
VoxelShape a (LVec3D;LVec3D;LBlockPosition;)LMovingObjectPositionBlock; rayTrace
VoxelShape b ()Z isEmpty
VoxelShapes a (DDDDDD)LVoxelShape; create
WeightedRandomEnchant b enchantment
WeightedRandomEnchant c level
WhiteList a (Lcom/mojang/authlib/GameProfile;)Z isWhitelisted
World D ()LScoreboard; getScoreboard
World J ()Z isDay
World K ()Z isNight
World L ()V tickBlockEntities
World R ()J getTime
World S ()J getDayTime
World T ()LGameRules; getGameRules
World V ()Z isRaining
World W ()I getHeight
World X ()LGameProfilerFiller; getMethodProfiler
World a (I)LEntity; getEntity
World a (LBlockPosition;LBlock;II)V playBlockAction
World a (LBlockPosition;LEnumDirection;)Z isBlockFacePowered
World a (LBlockPosition;LIBlockData;)Z setTypeUpdate
World a (LBlockPosition;LIBlockData;LIBlockData;I)V notify
World a (LBlockPosition;LTileEntity;)V setTileEntity
World a (LEntity;B)V broadcastEntityEffect
World a (LEntity;DDDFLExplosion$Effect;)LExplosion; explode
World a (LEntity;DDDFZLExplosion$Effect;)LExplosion; createExplosion
World a (LEntity;LAxisAlignedBB;Ljava/util/function/Predicate;)Ljava/util/List; getEntities
World a (LEntity;LDamageSource;DDDFZLExplosion$Effect;)LExplosion; createExplosion
World a (LEntityHuman;DDDLSoundEffect;LSoundCategory;FF)V playSound
World a (LEntityHuman;LBlockPosition;LEnumDirection;)Z douseFire
World a (LEntityHuman;LEntity;LSoundEffect;LSoundCategory;FF)V playSound
World a (ZZ)V setSpawnFlags
World b (J)V setDayTime
World b (LBlockPosition;LBlock;)V applyPhysics
World b (LBlockPosition;LEnumDirection;)I getBlockFacePower
World b serverThread
World c (LBlockPosition;LBlock;)V updateAdjacentComparators
World e tileEntityList
World f tileEntityListTick
World g tileEntityListPending
World h tileEntityListUnload
World j (LBlockPosition;)Z isValidLocation
World k (LBlockPosition;)Z isOutsideWorld
World k lastRainLevel
World l (LBlockPosition;)LChunk; getChunkAtWorldCoords
World l rainLevel
World m (LBlockPosition;)V removeTileEntity
World m lastThunderLevel
World n thunderLevel
World o (LBlockPosition;)I getBlockPower
World o random
World p ()Lnet/minecraft/server/MinecraftServer; getMinecraftServer
World p (LBlockPosition;)Z isBlockIndirectlyPowered
World p worldProvider
World q chunkProvider
World r (LBlockPosition;)Z isRainingAt
World r worldData
World s ()LCraftingManager; getCraftingManager
World s isClientSide
World s_ ()LBlockPosition; getSpawn
World t tickingTileEntities
World u ()Z isSavingDisabled
World u methodProfiler
World v worldBorder
World w biomeManager
World y ()I getWorldMapCount
WorldBorder a (D)V setSize
WorldBorder a (DDJ)V transitionSizeBetween
WorldBorder a (LChunkCoordIntPair;)Z isInBounds
WorldBorder a (LWorldData;)V save
WorldBorder b (D)V setDamageBuffer
WorldBorder b (I)V setWarningTime
WorldBorder c (D)V setDamageAmount
WorldBorder c (DD)V setCenter
WorldBorder c (I)V setWarningDistance
WorldBorder g ()D getCenterX
WorldBorder h ()D getCenterZ
WorldBorder i ()D getSize
WorldBorder n ()D getDamageBuffer
WorldBorder o ()D getDamageAmount
WorldBorder q ()I getWarningTime
WorldBorder r ()I getWarningDistance
WorldData A ()LNBTTagCompound; getGeneratorOptions
WorldData P ()LNBTTagCompound; getCustomBossEvents
WorldData T customBossEvents
WorldData a ()J getSeed
WorldData a (J)V setTime
WorldData a (LBlockPosition;)V setSpawn
WorldData a (LEnumDifficulty;)V setDifficulty
WorldData a (LEnumGamemode;)V setGameType
WorldData a (Ljava/lang/String;)V setName
WorldData a (Z)V setThundering
WorldData b (J)V setDayTime
WorldData b (Z)V setStorm
WorldData c (LNBTTagCompound;)V setCustomBossEvents
WorldData e ()J getTime
WorldData e (I)V setThunderDuration
WorldData f ()J getDayTime
WorldData f (I)V setWeatherDuration
WorldData i ()Ljava/lang/String; getName
WorldData l ()Z isThundering
WorldData m ()I getThunderDuration
WorldData n ()Z hasStorm
WorldData o ()I getWeatherDuration
WorldData p ()LEnumGamemode; getGameType
WorldData q ()Z shouldGenerateMapFeatures
WorldData r ()Z isHardcore
WorldData s ()LWorldType; getType
WorldData t levelName
WorldData v clearWeatherTime
WorldData w ()LEnumDifficulty; getDifficulty
WorldData w raining
WorldData x ()Z isDifficultyLocked
WorldData x rainTime
WorldData y thundering
WorldData z thunderTime
WorldGenFeatureDefinedStructurePoolTemplate$Matching a TERRAIN_MATCHING
WorldGenFeatureDefinedStructurePoolTemplate$Matching b RIGID
WorldGenFeatureOceanRuin$Temperature a WARM
WorldGenFeatureOceanRuin$Temperature b COLD
WorldGenFeatureOreConfiguration$Target a NATURAL_STONE
WorldGenFeatureOreConfiguration$Target b NETHERRACK
WorldGenFeatureRandomScattered d ()I getSeed
WorldGenMineshaft$Type a NORMAL
WorldGenMineshaft$Type b MESA
WorldGenStage$Decoration a RAW_GENERATION
WorldGenStage$Decoration b LOCAL_MODIFICATIONS
WorldGenStage$Decoration c UNDERGROUND_STRUCTURES
WorldGenStage$Decoration d SURFACE_STRUCTURES
WorldGenStage$Decoration e UNDERGROUND_ORES
WorldGenStage$Decoration f UNDERGROUND_DECORATION
WorldGenStage$Decoration g VEGETAL_DECORATION
WorldGenStage$Decoration h TOP_LAYER_MODIFICATION
WorldGenStage$Features a AIR
WorldGenStage$Features b LIQUID
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType a OPENING
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType b WOOD_DOOR
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType c GRATES
WorldGenStrongholdPieces$WorldGenStrongholdPiece$WorldGenStrongholdDoorType d IRON_DOOR
WorldGenerator A BLOCK_PILE
WorldGenerator B SPRING_FEATURE
WorldGenerator C CHORUS_PLANT
WorldGenerator D EMERALD_ORE
WorldGenerator E VOID_START_PLATFORM
WorldGenerator F DESERT_WELL
WorldGenerator G FOSSIL
WorldGenerator H HUGE_RED_MUSHROOM
WorldGenerator I HUGE_BROWN_MUSHROOM
WorldGenerator J ICE_SPIKE
WorldGenerator K GLOWSTONE_BLOB
WorldGenerator L FREEZE_TOP_LAYER
WorldGenerator M VINES
WorldGenerator N MONSTER_ROOM
WorldGenerator O BLUE_ICE
WorldGenerator P ICEBERG
WorldGenerator Q FOREST_ROCK
WorldGenerator R DISK
WorldGenerator S ICE_PATCH
WorldGenerator T LAKE
WorldGenerator U ORE
WorldGenerator V END_SPIKE
WorldGenerator W END_ISLAND
WorldGenerator X END_GATEWAY
WorldGenerator Y SEAGRASS
WorldGenerator Z KELP
WorldGenerator a (LGeneratorAccess;LChunkGenerator;Ljava/util/Random;LBlockPosition;LWorldGenFeatureConfiguration;)Z generate
WorldGenerator aa CORAL_TREE
WorldGenerator ab CORAL_MUSHROOM
WorldGenerator ac CORAL_CLAW
WorldGenerator ad SEA_PICKLE
WorldGenerator ae SIMPLE_BLOCK
WorldGenerator af BAMBOO
WorldGenerator ag FILL_LAYER
WorldGenerator ah BONUS_CHEST
WorldGenerator ai RANDOM_RANDOM_SELECTOR
WorldGenerator aj RANDOM_SELECTOR
WorldGenerator ak SIMPLE_RANDOM_SELECTOR
WorldGenerator al RANDOM_BOOLEAN_SELECTOR
WorldGenerator am DECORATED
WorldGenerator an DECORATED_FLOWER
WorldGenerator b PILLAGER_OUTPOST
WorldGenerator c MINESHAFT
WorldGenerator d WOODLAND_MANSION
WorldGenerator e JUNGLE_TEMPLE
WorldGenerator f DESERT_PYRAMID
WorldGenerator g IGLOO
WorldGenerator h SHIPWRECK
WorldGenerator i SWAMP_HUT
WorldGenerator j STRONGHOLD
WorldGenerator k OCEAN_MONUMENT
WorldGenerator l OCEAN_RUIN
WorldGenerator m NETHER_BRIDGE
WorldGenerator n END_CITY
WorldGenerator o BURIED_TREASURE
WorldGenerator p VILLAGE
WorldGenerator q NO_OP
WorldGenerator r NORMAL_TREE
WorldGenerator s ACACIA_TREE
WorldGenerator t FANCY_TREE
WorldGenerator u JUNGLE_GROUND_BUSH
WorldGenerator v DARK_OAK_TREE
WorldGenerator w MEGA_JUNGLE_TREE
WorldGenerator x MEGA_SPRUCE_TREE
WorldGenerator y FLOWER
WorldGenerator z RANDOM_PATCH
WorldMap a (II)V flagDirty
WorldMap a (LItemStack;LBlockPosition;Ljava/lang/String;LMapIcon$Type;)V decorateMap
WorldMap a centerX
WorldMap b centerZ
WorldMap c map
WorldMap d track
WorldMap e unlimitedTracking
WorldMap f scale
WorldMap g colors
WorldMap h locked
WorldMap j decorations
WorldMap k humans
WorldMap$WorldMapHumanTracker a trackee
WorldMap$WorldMapHumanTracker c worldMap
WorldNBTStorage a ()Ljava/io/File; getDirectory
WorldNBTStorage a (LWorldData;)V saveWorldData
WorldNBTStorage a (LWorldData;LNBTTagCompound;)V saveWorldData
WorldNBTStorage b ()V checkSession
WorldNBTStorage c ()LWorldData; getWorldData
WorldNBTStorage c baseDir
WorldNBTStorage d ()[Ljava/lang/String; getSeenPlayers
WorldNBTStorage d playerDir
WorldNBTStorage e sessionId
WorldNBTStorage g ()Lcom/mojang/datafixers/DataFixer; getDataFixer
WorldPersistentData b data
WorldProvider e ()Z isNether
WorldProvider h ()LWorldBorder; getWorldBorder
WorldProvider k ()LChunkGenerator; getChunkGenerator
WorldProvider l ()Z isOverworld
WorldProvider m ()Z canRespawn
WorldProvider n ()LDimensionManager; getDimensionManager
WorldServer A server
WorldServer B dataManager
WorldServer C ()LPersistentRaid; getPersistentRaid
WorldServer D emptyTime
WorldServer E portalTravelAgent
WorldServer F nextTickListBlock
WorldServer G nextTickListFluid
WorldServer H navigators
WorldServer J ticking
WorldServer K mobSpawnerTrader
WorldServer a (IIZ)Z setForceLoaded
WorldServer a (LChunk;)V unloadChunk
WorldServer a (LEntity;)V entityJoinedWorld
WorldServer a (LEntityLightning;)V strikeLightning
WorldServer a (LEntityPlayer;)V addPlayerCommand
WorldServer a (LIProgressUpdate;ZZ)V save
WorldServer a (Ljava/util/UUID;)LEntity; getEntity
WorldServer a (Ljava/util/function/BooleanSupplier;)V doTick
WorldServer a tickingEntities
WorldServer ac ()V clearWeather
WorldServer b (LEntity;)V chunkCheck
WorldServer b (LEntityPlayer;)V addPlayerPortal
WorldServer b savingDisabled
WorldServer c (LEntityPlayer;)V addPlayerJoin
WorldServer c persistentRaid
WorldServer d (LEntity;)Z addEntitySerialized
WorldServer d (LEntityPlayer;)V addPlayerRespawn
WorldServer e (LEntity;)V addEntityTeleport
WorldServer e (LEntityPlayer;)V removePlayer
WorldServer f (LEntity;)Z addEntityChunk
WorldServer f (LEntityPlayer;)V addPlayer0
WorldServer g (LEntity;)V unregisterEntity
WorldServer h ()LBlockPosition; getDimensionSpawn
WorldServer h (LEntity;)V removeEntity
WorldServer i_ ()V everyoneSleeping
WorldServer k (LEntity;)Z addEntity0
WorldServer l (LEntity;)Z isUUIDTaken
WorldServer l_ ()V resetEmptyTime
WorldServer m (LEntity;)V registerEntity
WorldServer n (LEntity;)V removeEntityFromChunk
WorldServer o_ ()LPortalTravelAgent; getTravelAgent
WorldServer v ()V checkSession
WorldServer v globalEntityList
WorldServer w ()LWorldNBTStorage; getDataManager
WorldServer w entitiesById
WorldServer x ()LWorldPersistentData; getWorldPersistentData
WorldServer x entitiesByUUID
WorldServer y entitiesToAdd
WorldServer z ()Lit/unimi/dsi/fastutil/longs/LongSet; getForceLoadedChunks
WorldServer z players
WorldSettings a (Lcom/google/gson/JsonElement;)LWorldSettings; setGeneratorSettings
WorldType a ()Ljava/lang/String; name
WorldType a (Ljava/lang/String;)LWorldType; getType
WorldType a types
WorldType b NORMAL
WorldType c FLAT
WorldType d LARGE_BIOMES
WorldType e ()I getVersion
WorldType e AMPLIFIED
WorldType f CUSTOMIZED
WorldType h DEBUG_ALL_BLOCK_STATES
WorldType i NORMAL_1_1
WorldType k name
WorldType m version
net/minecraft/server/MinecraftServer A ()V startServerThread
net/minecraft/server/MinecraftServer B spawnAnimals
net/minecraft/server/MinecraftServer C ()Ljava/lang/Iterable; getWorlds
net/minecraft/server/MinecraftServer C spawnNPCs
net/minecraft/server/MinecraftServer D ()Ljava/lang/String; getVersion
net/minecraft/server/MinecraftServer D pvpMode
net/minecraft/server/MinecraftServer E ()I getPlayerCount
net/minecraft/server/MinecraftServer E allowFlight
net/minecraft/server/MinecraftServer F ()I getMaxPlayers
net/minecraft/server/MinecraftServer F motd
net/minecraft/server/MinecraftServer G ()[Ljava/lang/String; getPlayers
net/minecraft/server/MinecraftServer I ()Z isDebugging
net/minecraft/server/MinecraftServer K ()Ljava/security/KeyPair; getKeyPair
net/minecraft/server/MinecraftServer L ()I getPort
net/minecraft/server/MinecraftServer M ()Ljava/lang/String; getSinglePlayerName
net/minecraft/server/MinecraftServer M demoMode
net/minecraft/server/MinecraftServer N ()Z isEmbeddedServer
net/minecraft/server/MinecraftServer N bonusChest
net/minecraft/server/MinecraftServer O ()Ljava/lang/String; getWorld
net/minecraft/server/MinecraftServer Q ()Z getSpawnMonsters
net/minecraft/server/MinecraftServer Q hasTicked
net/minecraft/server/MinecraftServer R ()Z isDemoMode
net/minecraft/server/MinecraftServer R lastOverloadTime
net/minecraft/server/MinecraftServer S ()LConvertable; getConvertable
net/minecraft/server/MinecraftServer T ()Ljava/lang/String; getResourcePack
net/minecraft/server/MinecraftServer U ()Ljava/lang/String; getResourcePackHash
net/minecraft/server/MinecraftServer V yggdrasilAuthenticationService
net/minecraft/server/MinecraftServer W ()Z getOnlineMode
net/minecraft/server/MinecraftServer W minecraftSessionService
net/minecraft/server/MinecraftServer X gameProfileRepository
net/minecraft/server/MinecraftServer Y ()Z getSpawnAnimals
net/minecraft/server/MinecraftServer Y userCache
net/minecraft/server/MinecraftServer Z ()Z getSpawnNPCs
net/minecraft/server/MinecraftServer a (I)V setPort
net/minecraft/server/MinecraftServer a (LDimensionManager;)LWorldServer; getWorldServer
net/minecraft/server/MinecraftServer a (LEnumGamemode;)V setGamemode
net/minecraft/server/MinecraftServer a (LWorldLoadListener;)V loadSpawn
net/minecraft/server/MinecraftServer a (LWorldPersistentData;)V initializeScoreboards
net/minecraft/server/MinecraftServer a (Ljava/lang/String;)V convertWorld
net/minecraft/server/MinecraftServer a (Ljava/lang/String;Ljava/lang/String;)V setResourcePack
net/minecraft/server/MinecraftServer a (Z)V safeShutdown
net/minecraft/server/MinecraftServer a (ZZZ)Z saveChunks
net/minecraft/server/MinecraftServer aC ()LAdvancementDataWorld; getAdvancementData
net/minecraft/server/MinecraftServer aD ()LCustomFunctionData; getFunctionData
net/minecraft/server/MinecraftServer aE ()V reload
net/minecraft/server/MinecraftServer aF ()LIReloadableResourceManager; getResourceManager
net/minecraft/server/MinecraftServer aG ()LResourcePackRepository; getResourcePackRepository
net/minecraft/server/MinecraftServer aI ()LCommandDispatcher; getCommandDispatcher
net/minecraft/server/MinecraftServer aJ ()LCommandListenerWrapper; getServerCommandListener
net/minecraft/server/MinecraftServer aK ()LCraftingManager; getCraftingManager
net/minecraft/server/MinecraftServer aL ()LTagRegistry; getTagRegistry
net/minecraft/server/MinecraftServer aM ()LScoreboardServer; getScoreboard
net/minecraft/server/MinecraftServer aO ()LLootTableRegistry; getLootTableRegistry
net/minecraft/server/MinecraftServer aQ ()LGameRules; getGameRules
net/minecraft/server/MinecraftServer aR ()LBossBattleCustomData; getBossBattleCustomData
net/minecraft/server/MinecraftServer aV ()LGameProfiler; getMethodProfiler
net/minecraft/server/MinecraftServer aX ()Lorg/apache/logging/log4j/Logger; getLogger
net/minecraft/server/MinecraftServer aY ()Z canSleepForTick
net/minecraft/server/MinecraftServer aa ()Z getPVP
net/minecraft/server/MinecraftServer aa nextTick
net/minecraft/server/MinecraftServer ab ()Z getAllowFlight
net/minecraft/server/MinecraftServer ac ()Ljava/lang/String; getMotd
net/minecraft/server/MinecraftServer ad ()I getMaxBuildHeight
net/minecraft/server/MinecraftServer ae ()Z isStopped
net/minecraft/server/MinecraftServer af ()LPlayerList; getPlayerList
net/minecraft/server/MinecraftServer af resourcePackRepository
net/minecraft/server/MinecraftServer ag ()LServerConnection; getServerConnection
net/minecraft/server/MinecraftServer ag resourcePackFolder
net/minecraft/server/MinecraftServer ah commandDispatcher
net/minecraft/server/MinecraftServer ai craftingManager
net/minecraft/server/MinecraftServer aj tagRegistry
net/minecraft/server/MinecraftServer ak scoreboardServer
net/minecraft/server/MinecraftServer al persistentCommandStorage
net/minecraft/server/MinecraftServer am bossBattleCustomData
net/minecraft/server/MinecraftServer an ()I getSpawnProtection
net/minecraft/server/MinecraftServer an lootPredicateManager
net/minecraft/server/MinecraftServer ao ()Z getForceGamemode
net/minecraft/server/MinecraftServer ao lootTableRegistry
net/minecraft/server/MinecraftServer ap advancementDataWorld
net/minecraft/server/MinecraftServer aq ()I getIdleTimeout
net/minecraft/server/MinecraftServer aq customFunctionData
net/minecraft/server/MinecraftServer ar ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; getMinecraftSessionService
net/minecraft/server/MinecraftServer ar circularTimer
net/minecraft/server/MinecraftServer as ()Lcom/mojang/authlib/GameProfileRepository; getGameProfileRepository
net/minecraft/server/MinecraftServer at ()LUserCache; getUserCache
net/minecraft/server/MinecraftServer at forceUpgrade
net/minecraft/server/MinecraftServer au ()LServerPing; getServerPing
net/minecraft/server/MinecraftServer au eraseCache
net/minecraft/server/MinecraftServer av ()V invalidatePingSample
net/minecraft/server/MinecraftServer aw executorService
net/minecraft/server/MinecraftServer b (Z)V setForceUpgrade
net/minecraft/server/MinecraftServer c (I)V setIdleTimeout
net/minecraft/server/MinecraftServer c (LTickTask;)Z canExecute
net/minecraft/server/MinecraftServer c (Z)V setEraseCache
net/minecraft/server/MinecraftServer d ()Z init
net/minecraft/server/MinecraftServer d worldLoadListenerFactory
net/minecraft/server/MinecraftServer e ()V exit
net/minecraft/server/MinecraftServer e (Ljava/lang/String;)V info
net/minecraft/server/MinecraftServer e proxy
net/minecraft/server/MinecraftServer f ()Z getGenerateStructures
net/minecraft/server/MinecraftServer f (Ljava/lang/String;)V warning
net/minecraft/server/MinecraftServer g ()LEnumGamemode; getGamemode
net/minecraft/server/MinecraftServer g (Z)V setOnlineMode
net/minecraft/server/MinecraftServer g serverThread
net/minecraft/server/MinecraftServer h ()LEnumDifficulty; getDifficulty
net/minecraft/server/MinecraftServer h_ ()Z isRunning
net/minecraft/server/MinecraftServer i ()Z isHardcore
net/minecraft/server/MinecraftServer i (Z)V setSpawnAnimals
net/minecraft/server/MinecraftServer j (Z)V setSpawnNPCs
net/minecraft/server/MinecraftServer j convertable
net/minecraft/server/MinecraftServer k (Ljava/lang/String;)V setMotd
net/minecraft/server/MinecraftServer k (Z)V setPVP
net/minecraft/server/MinecraftServer k snooper
net/minecraft/server/MinecraftServer l (Z)V setAllowFlight
net/minecraft/server/MinecraftServer l universe
net/minecraft/server/MinecraftServer m (Z)V setForceGamemode
net/minecraft/server/MinecraftServer m tickables
net/minecraft/server/MinecraftServer n methodProfiler
net/minecraft/server/MinecraftServer o ()Z getEnableCommandBlock
net/minecraft/server/MinecraftServer o serverConnection
net/minecraft/server/MinecraftServer p serverPing
net/minecraft/server/MinecraftServer r ()V stop
net/minecraft/server/MinecraftServer r dataConverterManager
net/minecraft/server/MinecraftServer s ()Ljava/lang/String; getServerIp
net/minecraft/server/MinecraftServer s serverIp
net/minecraft/server/MinecraftServer t serverPort
net/minecraft/server/MinecraftServer u ()V sleepForTick
net/minecraft/server/MinecraftServer u worldServer
net/minecraft/server/MinecraftServer v playerList
net/minecraft/server/MinecraftServer w isRunning
net/minecraft/server/MinecraftServer x isStopped
net/minecraft/server/MinecraftServer y ticks
net/minecraft/server/MinecraftServer z ()Z getAllowNether
net/minecraft/server/MinecraftServer z onlineMode
